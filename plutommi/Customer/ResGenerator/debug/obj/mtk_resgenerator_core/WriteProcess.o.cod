GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 1


   1              		.file	"WriteProcess.cpp"
   4              		.text
   5              	Ltext0:
 2780              	.lcomm __ZSt8__ioinit,16
 2829              		.align 32
 2830              	LC0:
 2831 0000 2E2E2F2E 		.ascii "../../MMI/Resource/WriteProcess.cpp\0"
 2831      2E2F4D4D 
 2831      492F5265 
 2831      736F7572 
 2831      63652F57 
 2832              	LC1:
 2833 0024 66616C73 		.ascii "false\0"
 2833      6500
 2834              	LC2:
 2835 002a 00       		.ascii "\0"
 2836 002b 90       		.align 2
 2839              	.globl _initImageProcessData
 2841              	_initImageProcessData:
   1:../../MMI/Resource/WriteProcess.cpp **** /*****************************************************************************
   2:../../MMI/Resource/WriteProcess.cpp **** *  Copyright Statement:
   3:../../MMI/Resource/WriteProcess.cpp **** *  --------------------
   4:../../MMI/Resource/WriteProcess.cpp **** *  This software is protected by Copyright and the information contained
   5:../../MMI/Resource/WriteProcess.cpp **** *  herein is confidential. The software may not be copied and the information
   6:../../MMI/Resource/WriteProcess.cpp **** *  contained herein may not be used or disclosed except with the written
   7:../../MMI/Resource/WriteProcess.cpp **** *  permission of MediaTek Inc. (C) 2005
   8:../../MMI/Resource/WriteProcess.cpp **** *
   9:../../MMI/Resource/WriteProcess.cpp **** *  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
  10:../../MMI/Resource/WriteProcess.cpp **** *  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
  11:../../MMI/Resource/WriteProcess.cpp **** *  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
  12:../../MMI/Resource/WriteProcess.cpp **** *  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
  13:../../MMI/Resource/WriteProcess.cpp **** *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
  14:../../MMI/Resource/WriteProcess.cpp **** *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
  15:../../MMI/Resource/WriteProcess.cpp **** *  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
  16:../../MMI/Resource/WriteProcess.cpp **** *  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
  17:../../MMI/Resource/WriteProcess.cpp **** *  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
  18:../../MMI/Resource/WriteProcess.cpp **** *  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
  19:../../MMI/Resource/WriteProcess.cpp **** *  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
  20:../../MMI/Resource/WriteProcess.cpp **** *  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
  21:../../MMI/Resource/WriteProcess.cpp **** *
  22:../../MMI/Resource/WriteProcess.cpp **** *  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
  23:../../MMI/Resource/WriteProcess.cpp **** *  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
  24:../../MMI/Resource/WriteProcess.cpp **** *  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
  25:../../MMI/Resource/WriteProcess.cpp **** *  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
  26:../../MMI/Resource/WriteProcess.cpp **** *  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
  27:../../MMI/Resource/WriteProcess.cpp **** *
  28:../../MMI/Resource/WriteProcess.cpp **** *  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
  29:../../MMI/Resource/WriteProcess.cpp **** *  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
  30:../../MMI/Resource/WriteProcess.cpp **** *  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
  31:../../MMI/Resource/WriteProcess.cpp **** *  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
  32:../../MMI/Resource/WriteProcess.cpp **** *  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
  33:../../MMI/Resource/WriteProcess.cpp **** *
  34:../../MMI/Resource/WriteProcess.cpp **** *****************************************************************************/
  35:../../MMI/Resource/WriteProcess.cpp **** 
  36:../../MMI/Resource/WriteProcess.cpp **** /*****************************************************************************
  37:../../MMI/Resource/WriteProcess.cpp ****  *
  38:../../MMI/Resource/WriteProcess.cpp ****  * Filename:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 2


  39:../../MMI/Resource/WriteProcess.cpp ****  * ---------
  40:../../MMI/Resource/WriteProcess.cpp ****  *   WriteProcess.c
  41:../../MMI/Resource/WriteProcess.cpp ****  *
  42:../../MMI/Resource/WriteProcess.cpp ****  * Project:
  43:../../MMI/Resource/WriteProcess.cpp ****  * --------
  44:../../MMI/Resource/WriteProcess.cpp ****  *   MAUI
  45:../../MMI/Resource/WriteProcess.cpp ****  *
  46:../../MMI/Resource/WriteProcess.cpp ****  * Description:
  47:../../MMI/Resource/WriteProcess.cpp ****  * ------------
  48:../../MMI/Resource/WriteProcess.cpp ****  *
  49:../../MMI/Resource/WriteProcess.cpp ****  *
  50:../../MMI/Resource/WriteProcess.cpp ****  * Author:
  51:../../MMI/Resource/WriteProcess.cpp ****  * -------
  52:../../MMI/Resource/WriteProcess.cpp ****  * -------
  53:../../MMI/Resource/WriteProcess.cpp ****  *
  54:../../MMI/Resource/WriteProcess.cpp ****  *============================================================================
  55:../../MMI/Resource/WriteProcess.cpp ****  *             HISTORY
  56:../../MMI/Resource/WriteProcess.cpp ****  * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
  57:../../MMI/Resource/WriteProcess.cpp ****  *------------------------------------------------------------------------------
  58:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  59:../../MMI/Resource/WriteProcess.cpp ****  *
  60:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  61:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  62:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  63:../../MMI/Resource/WriteProcess.cpp ****  *
  64:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  65:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  66:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  67:../../MMI/Resource/WriteProcess.cpp ****  *
  68:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  69:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  70:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  71:../../MMI/Resource/WriteProcess.cpp ****  *
  72:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  73:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  74:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  75:../../MMI/Resource/WriteProcess.cpp ****  *
  76:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  77:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  78:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  79:../../MMI/Resource/WriteProcess.cpp ****  *
  80:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  81:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  82:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  83:../../MMI/Resource/WriteProcess.cpp ****  *
  84:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  85:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  86:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  87:../../MMI/Resource/WriteProcess.cpp ****  *
  88:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  89:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  90:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  91:../../MMI/Resource/WriteProcess.cpp ****  *
  92:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  93:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  94:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  95:../../MMI/Resource/WriteProcess.cpp ****  *
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 3


  96:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  97:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  98:../../MMI/Resource/WriteProcess.cpp ****  * removed!
  99:../../MMI/Resource/WriteProcess.cpp ****  *
 100:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 101:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 102:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 103:../../MMI/Resource/WriteProcess.cpp ****  *
 104:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 105:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 106:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 107:../../MMI/Resource/WriteProcess.cpp ****  *
 108:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 109:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 110:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 111:../../MMI/Resource/WriteProcess.cpp ****  *
 112:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 113:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 114:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 115:../../MMI/Resource/WriteProcess.cpp ****  *
 116:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 117:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 118:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 119:../../MMI/Resource/WriteProcess.cpp ****  *
 120:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 121:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 122:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 123:../../MMI/Resource/WriteProcess.cpp ****  *
 124:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 125:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 126:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 127:../../MMI/Resource/WriteProcess.cpp ****  *
 128:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 129:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 130:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 131:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 132:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 133:../../MMI/Resource/WriteProcess.cpp ****  *
 134:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 135:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 136:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 137:../../MMI/Resource/WriteProcess.cpp ****  *
 138:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 139:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 140:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 141:../../MMI/Resource/WriteProcess.cpp ****  *
 142:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 143:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 144:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 145:../../MMI/Resource/WriteProcess.cpp ****  *
 146:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 147:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 148:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 149:../../MMI/Resource/WriteProcess.cpp ****  *
 150:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 151:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 152:../../MMI/Resource/WriteProcess.cpp ****  * removed!
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 4


 153:../../MMI/Resource/WriteProcess.cpp ****  *
 154:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 155:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 156:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 157:../../MMI/Resource/WriteProcess.cpp ****  *
 158:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 159:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 160:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 161:../../MMI/Resource/WriteProcess.cpp ****  *
 162:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 163:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 164:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 165:../../MMI/Resource/WriteProcess.cpp ****  *
 166:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 167:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 168:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 169:../../MMI/Resource/WriteProcess.cpp ****  *
 170:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 171:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 172:../../MMI/Resource/WriteProcess.cpp ****  * removed!
 173:../../MMI/Resource/WriteProcess.cpp ****  *
 174:../../MMI/Resource/WriteProcess.cpp ****  *
 175:../../MMI/Resource/WriteProcess.cpp ****  *
 176:../../MMI/Resource/WriteProcess.cpp ****  *------------------------------------------------------------------------------
 177:../../MMI/Resource/WriteProcess.cpp ****  * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 178:../../MMI/Resource/WriteProcess.cpp ****  *============================================================================
 179:../../MMI/Resource/WriteProcess.cpp ****  *******************************************************************************/
 180:../../MMI/Resource/WriteProcess.cpp **** 
 181:../../MMI/Resource/WriteProcess.cpp **** //#include "mmi_features.h"
 182:../../MMI/Resource/WriteProcess.cpp **** extern "C"
 183:../../MMI/Resource/WriteProcess.cpp **** {
 184:../../MMI/Resource/WriteProcess.cpp **** #include "CustDataRes.h"
 185:../../MMI/Resource/WriteProcess.cpp **** #include "CustDataProts.h" // for AUTO_TYPE
 186:../../MMI/Resource/WriteProcess.cpp **** #include "WriteResUtil.h"
 187:../../MMI/Resource/WriteProcess.cpp **** #include "ExternalCMDManagerCAPI.h"
 188:../../MMI/Resource/WriteProcess.cpp **** #include "ResgenLogCAPI.h"
 189:../../MMI/Resource/WriteProcess.cpp **** #include "ResgenConfiguratorCAPI.h"
 190:../../MMI/Resource/WriteProcess.cpp **** }
 191:../../MMI/Resource/WriteProcess.cpp **** 
 192:../../MMI/Resource/WriteProcess.cpp **** #include <string>
 193:../../MMI/Resource/WriteProcess.cpp **** //#include <cctype>
 194:../../MMI/Resource/WriteProcess.cpp **** #include <vector>
 195:../../MMI/Resource/WriteProcess.cpp **** #include <list>
 196:../../MMI/Resource/WriteProcess.cpp **** #include <assert.h>
 197:../../MMI/Resource/WriteProcess.cpp **** 
 198:../../MMI/Resource/WriteProcess.cpp **** #define WIN32_LEAN_AND_MEAN
 199:../../MMI/Resource/WriteProcess.cpp **** #include "windows.h"
 200:../../MMI/Resource/WriteProcess.cpp **** 
 201:../../MMI/Resource/WriteProcess.cpp **** #include "ThreadPool.h"
 202:../../MMI/Resource/WriteProcess.cpp **** #include "OfflineResParam.h"
 203:../../MMI/Resource/WriteProcess.cpp **** 
 204:../../MMI/Resource/WriteProcess.cpp **** #include "ImageGroupCreator.h"
 205:../../MMI/Resource/WriteProcess.cpp **** using namespace std;
 206:../../MMI/Resource/WriteProcess.cpp **** 
 207:../../MMI/Resource/WriteProcess.cpp **** 
 208:../../MMI/Resource/WriteProcess.cpp **** #define DEFAULT_FILEBUFFER          "________CUSTOMER__IMAGES__DEFAULT_BMP"
 209:../../MMI/Resource/WriteProcess.cpp **** #define OUTPUT_DATA_FILENAME        "..\\..\\Customer\\CustResource\\CustImgDataHW.h"
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 5


 210:../../MMI/Resource/WriteProcess.cpp **** #define OUTPUT_DATA_FILENAME_EXT    "..\\..\\Customer\\CustResource\\CustImgDataHWExt.h"
 211:../../MMI/Resource/WriteProcess.cpp **** #define OUTPUT_IMG_GROUP_CONTENT_META_FILENAME "..\\..\\Customer\\CustResource\\CustImgDataMeta.txt
 212:../../MMI/Resource/WriteProcess.cpp **** 
 213:../../MMI/Resource/WriteProcess.cpp **** 
 214:../../MMI/Resource/WriteProcess.cpp **** #define IMGPROC_TAG  "WRITEPROCESS"
 215:../../MMI/Resource/WriteProcess.cpp **** 
 216:../../MMI/Resource/WriteProcess.cpp **** #define IMGPROC_LOG_D(format, args...) RES_LOG_D((IMGPROC_TAG), (format) , ##args)
 217:../../MMI/Resource/WriteProcess.cpp **** #define IMGPROC_LOG_V(format, args...) RES_LOG_V((IMGPROC_TAG), (format) , ##args)
 218:../../MMI/Resource/WriteProcess.cpp **** #define IMGPROC_LOG_W(format, args...) RES_LOG_W((IMGPROC_TAG), (format) , ##args)
 219:../../MMI/Resource/WriteProcess.cpp **** #define IMGPROC_LOG_E(format, args...) RES_LOG_E((IMGPROC_TAG), (format) , ##args)
 220:../../MMI/Resource/WriteProcess.cpp **** 
 221:../../MMI/Resource/WriteProcess.cpp **** 
 222:../../MMI/Resource/WriteProcess.cpp **** // global variables
 223:../../MMI/Resource/WriteProcess.cpp **** extern FILE *OutputImgIDFile; // defined in PopulateRes.c
 224:../../MMI/Resource/WriteProcess.cpp **** extern CUSTOM_IMAGE_MAP ImageIdMapEXT[]; // defined in CustResDeclare.c
 225:../../MMI/Resource/WriteProcess.cpp **** extern CUSTOM_IMAGE_MAP ImageIdMap[]; // defined in CustResDeclare.c
 226:../../MMI/Resource/WriteProcess.cpp **** 
 227:../../MMI/Resource/WriteProcess.cpp **** extern IMAGENAME_LIST ImageNameList[]; // also used in WriteImgRes.c
 228:../../MMI/Resource/WriteProcess.cpp **** extern IMAGENAME_LIST ImageNameListEXT[]; // also used in WriteImgRes.c
 229:../../MMI/Resource/WriteProcess.cpp **** extern U16 CurrMaxImageNumEXT; // also used in WriteImgRes.c
 230:../../MMI/Resource/WriteProcess.cpp **** extern U16 CurrMaxImageNum; // also used in WriteRes.c
 231:../../MMI/Resource/WriteProcess.cpp **** 
 232:../../MMI/Resource/WriteProcess.cpp **** extern U32 image_idx; // XXX, defined in WriteImgRes.c
 233:../../MMI/Resource/WriteProcess.cpp **** extern U16 CurrMaxImageId; // also used in WriteImgRes.c
 234:../../MMI/Resource/WriteProcess.cpp **** extern U32 g_resimg_count; // XXX, defined in WriteImgRes.c
 235:../../MMI/Resource/WriteProcess.cpp **** extern CUSTOM_RESOURCE_SIZE g_resimg_table[MAX_IMAGE_IDS_SIZE]; // XXX, defined in WriteImgRes.c
 236:../../MMI/Resource/WriteProcess.cpp **** 
 237:../../MMI/Resource/WriteProcess.cpp **** extern FILE *fpImageResourceUsage; // defined in PopulateRes.c
 238:../../MMI/Resource/WriteProcess.cpp **** extern FILE *fpImageResourceUsageExt; // defined in PopulateRes.c
 239:../../MMI/Resource/WriteProcess.cpp **** extern "C" U32 GetOffsetFromResourceBase(U16 ImageID, U8* enum_value); // in WriteRes.c
 240:../../MMI/Resource/WriteProcess.cpp **** extern mmi_resource_base_struct g_mmi_resource_base_table[]; // for RESPRTONERECORD()
 241:../../MMI/Resource/WriteProcess.cpp **** 
 242:../../MMI/Resource/WriteProcess.cpp **** extern U16 CurrMaxImageIdEXT;
 243:../../MMI/Resource/WriteProcess.cpp **** 
 244:../../MMI/Resource/WriteProcess.cpp **** extern FILE *RepeatIDListFile; // also used in WriteRes.c
 245:../../MMI/Resource/WriteProcess.cpp **** 
 246:../../MMI/Resource/WriteProcess.cpp **** // ENFB
 247:../../MMI/Resource/WriteProcess.cpp **** #if defined(__MULTIPLE_BINARY_FILES__) && defined(__MMI_RESOURCE_ENFB_SUPPORT__)
 248:../../MMI/Resource/WriteProcess.cpp **** extern "C" MMI_BOOL CustPack_ENFB_image_test(const S8 *filename, int disable_enfb);
 249:../../MMI/Resource/WriteProcess.cpp **** 
 250:../../MMI/Resource/WriteProcess.cpp **** #endif /* defined(__MULTIPLE_BINARY_FILES__) && defined(__MMI_RESOURCE_ENFB_SUPPORT__) */
 251:../../MMI/Resource/WriteProcess.cpp **** 
 252:../../MMI/Resource/WriteProcess.cpp **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 253:../../MMI/Resource/WriteProcess.cpp **** extern int disableENFB;
 254:../../MMI/Resource/WriteProcess.cpp **** #endif // __MMI_RESOURCE_ENFB_SUPPORT__
 255:../../MMI/Resource/WriteProcess.cpp **** 
 256:../../MMI/Resource/WriteProcess.cpp **** // local functions
 257:../../MMI/Resource/WriteProcess.cpp **** static void ProcessBinaryData();
 258:../../MMI/Resource/WriteProcess.cpp **** 
 259:../../MMI/Resource/WriteProcess.cpp **** struct _ResgenImageOutStream
 260:../../MMI/Resource/WriteProcess.cpp **** {
 261:../../MMI/Resource/WriteProcess.cpp ****     int data_size;
 262:../../MMI/Resource/WriteProcess.cpp ****     char * data;
 263:../../MMI/Resource/WriteProcess.cpp **** 
 264:../../MMI/Resource/WriteProcess.cpp ****     _ResgenImageOutStream():data_size(0), data(NULL)
 265:../../MMI/Resource/WriteProcess.cpp ****     {
 266:../../MMI/Resource/WriteProcess.cpp ****     }
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 6


 267:../../MMI/Resource/WriteProcess.cpp **** 
 268:../../MMI/Resource/WriteProcess.cpp ****     ~_ResgenImageOutStream()
 269:../../MMI/Resource/WriteProcess.cpp ****     {
 270:../../MMI/Resource/WriteProcess.cpp ****         delete data;
 271:../../MMI/Resource/WriteProcess.cpp ****     }
 272:../../MMI/Resource/WriteProcess.cpp **** };
 273:../../MMI/Resource/WriteProcess.cpp **** 
 274:../../MMI/Resource/WriteProcess.cpp **** void SetImageWithBufferEx(
 275:../../MMI/Resource/WriteProcess.cpp ****                           U16 nImgId,
 276:../../MMI/Resource/WriteProcess.cpp ****                           S8 *filename,
 277:../../MMI/Resource/WriteProcess.cpp ****                           S8 *enum_value,
 278:../../MMI/Resource/WriteProcess.cpp ****                           BOOL imgFlag,
 279:../../MMI/Resource/WriteProcess.cpp ****                           S32 force_type);
 280:../../MMI/Resource/WriteProcess.cpp **** 
 281:../../MMI/Resource/WriteProcess.cpp **** void SetImageQWithBufferEx(
 282:../../MMI/Resource/WriteProcess.cpp ****                            U16 nImgId,
 283:../../MMI/Resource/WriteProcess.cpp ****                            S8 *filename,
 284:../../MMI/Resource/WriteProcess.cpp ****                            S8 *enum_value,
 285:../../MMI/Resource/WriteProcess.cpp ****                            BOOL imgFlag,
 286:../../MMI/Resource/WriteProcess.cpp ****                            S32 force_type,
 287:../../MMI/Resource/WriteProcess.cpp ****                            S32 quality);
 288:../../MMI/Resource/WriteProcess.cpp **** 
 289:../../MMI/Resource/WriteProcess.cpp **** void initImageProcessData(SetImageProcessData * data)
 290:../../MMI/Resource/WriteProcess.cpp **** {
 2843              	LM1:
 2844 002c 55       		pushl	%ebp
 2845 002d 89E5     		movl	%esp, %ebp
 2846 002f 83EC18   		subl	$24, %esp
 291:../../MMI/Resource/WriteProcess.cpp ****     if (data == NULL)
 2848              	LM2:
 2849              	LBB2:
 2850 0032 837D0800 		cmpl	$0, 8(%ebp)
 2851 0036 751C     		jne	L2
 292:../../MMI/Resource/WriteProcess.cpp ****     {
 293:../../MMI/Resource/WriteProcess.cpp ****         assert(false);
 2853              	LM3:
 2854 0038 C7442408 		movl	$293, 8(%esp)
 2854      25010000 
 2855 0040 C7442404 		movl	$LC0, 4(%esp)
 2855      00000000 
 2856 0048 C7042424 		movl	$LC1, (%esp)
 2856      000000
 2857 004f E8000000 		call	__assert
 2857      00
 2858              	L2:
 294:../../MMI/Resource/WriteProcess.cpp ****         return;
 295:../../MMI/Resource/WriteProcess.cpp ****     }
 296:../../MMI/Resource/WriteProcess.cpp ****     strcpy(data->real_filename, "");
 2860              	LM4:
 2861 0054 C7442404 		movl	$LC2, 4(%esp)
 2861      2A000000 
 2862 005c 8B4508   		movl	8(%ebp), %eax
 2863 005f 890424   		movl	%eax, (%esp)
 2864 0062 E8000000 		call	_strcpy
 2864      00
 297:../../MMI/Resource/WriteProcess.cpp ****     data->res_size = 0;
 2866              	LM5:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 7


 2867 0067 8B4508   		movl	8(%ebp), %eax
 2868 006a C7800002 		movl	$0, 512(%eax)
 2868      00000000 
 2868      0000
 298:../../MMI/Resource/WriteProcess.cpp ****     data->failed = MMI_FALSE;
 2870              	LM6:
 2871 0074 8B4508   		movl	8(%ebp), %eax
 2872 0077 C7800802 		movl	$0, 520(%eax)
 2872      00000000 
 2872      0000
 299:../../MMI/Resource/WriteProcess.cpp ****     data->duplicated = MMI_FALSE;
 2874              	LM7:
 2875 0081 8B4508   		movl	8(%ebp), %eax
 2876 0084 C7800C02 		movl	$0, 524(%eax)
 2876      00000000 
 2876      0000
 300:../../MMI/Resource/WriteProcess.cpp ****     data->duplicatedInstance = NULL;
 2878              	LM8:
 2879 008e 8B4508   		movl	8(%ebp), %eax
 2880 0091 C7801002 		movl	$0, 528(%eax)
 2880      00000000 
 2880      0000
 301:../../MMI/Resource/WriteProcess.cpp ****     data->quality=ImageResParam::QUALITY_MEDIUM;
 2882              	LM9:
 2883 009b 8B5508   		movl	8(%ebp), %edx
 2884 009e A1000000 		movl	__ZN13ImageResParam14QUALITY_MEDIUME, %eax
 2884      00
 2885 00a3 89821402 		movl	%eax, 532(%edx)
 2885      0000
 302:../../MMI/Resource/WriteProcess.cpp ****     data->color_num = RES_IMG_COLOR_NUM_UNKNOWN;
 2887              	LM10:
 2888 00a9 8B4508   		movl	8(%ebp), %eax
 2889 00ac C7801802 		movl	$-1, 536(%eax)
 2889      0000FFFF 
 2889      FFFF
 303:../../MMI/Resource/WriteProcess.cpp **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 304:../../MMI/Resource/WriteProcess.cpp ****     data->enfb_flag = 0;
 305:../../MMI/Resource/WriteProcess.cpp ****     data->disable_enfb = 0;
 306:../../MMI/Resource/WriteProcess.cpp **** #endif
 307:../../MMI/Resource/WriteProcess.cpp **** }
 2891              	LM11:
 2892 00b6 C9       		leave
 2893 00b7 C3       		ret
 2894              	LBE2:
 2895              	Lscope0:
 2901 00b8 908DB426 		.align 32
 2901      00000000 
 2902              	LC3:
 2903 00c0 5365744E 		.ascii "SetNFBImage: Populate NFB image: %s\0"
 2903      4642496D 
 2903      6167653A 
 2903      20506F70 
 2903      756C6174 
 2904              	LC4:
 2905 00e4 57524954 		.ascii "WRITEPROCESS\0"
 2905      4550524F 
 2905      43455353 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 8


 2905      00
 2906 00f1 EB0D9090 		.align 32
 2906      90909090 
 2906      90909090 
 2906      909090
 2907              	LC5:
 2908 0100 2E2E5C2E 		.ascii "..\\..\\Customer\\CustResource\\CustNFBProgressImg.h\0"
 2908      2E5C4375 
 2908      73746F6D 
 2908      65725C43 
 2908      75737452 
 2909              	LC6:
 2910 0131 616200   		.ascii "ab\0"
 2911 0134 8DB60000 		.align 32
 2911      00008DBF 
 2911      00000000 
 2912              	LC7:
 2913 0140 5365744E 		.ascii "SetNFBImage: Open NFB image output file: %s, file descriptor: 0x%x\0"
 2913      4642496D 
 2913      6167653A 
 2913      204F7065 
 2913      6E204E46 
 2914 0183 90909090 		.align 32
 2914      90909090 
 2914      90909090 
 2914      90909090 
 2914      90909090 
 2915              	LC8:
 2916 01a0 5365744E 		.ascii "SetNFBImage: File descriptor can't be NULL for %s, retry... \0"
 2916      4642496D 
 2916      6167653A 
 2916      2046696C 
 2916      65206465 
 2917 01dd 8D7600   		.align 32
 2918              	LC9:
 2919 01e0 5365744E 		.ascii "SetNFBImage: Write NFB image data to %s, file descriptor: 0x%x\0"
 2919      4642496D 
 2919      6167653A 
 2919      20577269 
 2919      7465204E 
 2920 021f 90       		.align 32
 2921              	LC10:
 2922 0220 5365744E 		.ascii "SetNFBImage: Close NFB image output file: %s, file descriptor: 0x%x\0"
 2922      4642496D 
 2922      6167653A 
 2922      20436C6F 
 2922      7365204E 
 2923              		.align 2
 2926              	.globl _SetNFBImage
 2928              	_SetNFBImage:
 308:../../MMI/Resource/WriteProcess.cpp **** 
 309:../../MMI/Resource/WriteProcess.cpp **** extern "C" void SetNFBImage(S8 *filename)
 310:../../MMI/Resource/WriteProcess.cpp **** {
 2930              	LM12:
 2931 0264 55       		pushl	%ebp
 2932 0265 89E5     		movl	%esp, %ebp
 2933 0267 57       		pushl	%edi
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 9


 2934 0268 56       		pushl	%esi
 2935 0269 53       		pushl	%ebx
 2936 026a 81EC9C02 		subl	$668, %esp
 2936      0000
 2937 0270 C7859CFD 		movl	$___gxx_personality_sj0, -612(%ebp)
 2937      FFFF0000 
 2937      0000
 2938 027a C785A0FD 		movl	$LLSDA2133, -608(%ebp)
 2938      FFFF0000 
 2938      0000
 2939 0284 8D85A4FD 		leal	-604(%ebp), %eax
 2939      FFFF
 2940 028a 8D55E8   		leal	-24(%ebp), %edx
 2941 028d 8910     		movl	%edx, (%eax)
 2942 028f BAD80400 		movl	$L13, %edx
 2942      00
 2943 0294 895004   		movl	%edx, 4(%eax)
 2944 0297 896008   		movl	%esp, 8(%eax)
 2945 029a 8D8584FD 		leal	-636(%ebp), %eax
 2945      FFFF
 2946 02a0 890424   		movl	%eax, (%esp)
 2947 02a3 E8000000 		call	__Unwind_SjLj_Register
 2947      00
 311:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("SetNFBImage: Populate NFB image: %s", filename);
 2949              	LM13:
 2950              	LBB3:
 2951 02a8 8B4508   		movl	8(%ebp), %eax
 2952 02ab 8944240C 		movl	%eax, 12(%esp)
 2953 02af C7442408 		movl	$LC3, 8(%esp)
 2953      C0000000 
 2954 02b7 C7442404 		movl	$LC4, 4(%esp)
 2954      E4000000 
 2955 02bf C7042401 		movl	$1, (%esp)
 2955      000000
 2956 02c6 C78588FD 		movl	$-1, -632(%ebp)
 2956      FFFFFFFF 
 2956      FFFF
 2957 02d0 E8000000 		call	_reslog_adaptor_log
 2957      00
 312:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 2959              	LM14:
 2960 02d5 A1000000 		movl	__imp___iob, %eax
 2960      00
 2961 02da 83C020   		addl	$32, %eax
 2962 02dd 890424   		movl	%eax, (%esp)
 2963 02e0 E8000000 		call	_fflush
 2963      00
 313:../../MMI/Resource/WriteProcess.cpp **** 
 314:../../MMI/Resource/WriteProcess.cpp ****     SetImageProcessData processData;
 315:../../MMI/Resource/WriteProcess.cpp ****     ResgenImageOutStream outstream;
 2965              	LM15:
 2966 02e5 8D85B8FD 		leal	-584(%ebp), %eax
 2966      FFFF
 2967 02eb 890424   		movl	%eax, (%esp)
 2968 02ee E8000000 		call	__ZN21_ResgenImageOutStreamC1Ev
 2968      00
 316:../../MMI/Resource/WriteProcess.cpp ****     processData.outstream = &outstream;
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 10


 2970              	LM16:
 2971 02f3 8D85B8FD 		leal	-584(%ebp), %eax
 2971      FFFF
 2972 02f9 8945CC   		movl	%eax, -52(%ebp)
 317:../../MMI/Resource/WriteProcess.cpp ****     initImageProcessData(&processData);
 2974              	LM17:
 2975 02fc 8D85C8FD 		leal	-568(%ebp), %eax
 2975      FFFF
 2976 0302 890424   		movl	%eax, (%esp)
 2977 0305 C78588FD 		movl	$1, -632(%ebp)
 2977      FFFF0100 
 2977      0000
 2978 030f E818FDFF 		call	_initImageProcessData
 2978      FF
 318:../../MMI/Resource/WriteProcess.cpp **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 319:../../MMI/Resource/WriteProcess.cpp ****     processData.disable_enfb = 1;
 320:../../MMI/Resource/WriteProcess.cpp **** #endif
 321:../../MMI/Resource/WriteProcess.cpp ****     SetNFBImageImp(filename, &processData);
 2980              	LM18:
 2981 0314 8D85C8FD 		leal	-568(%ebp), %eax
 2981      FFFF
 2982 031a 89442404 		movl	%eax, 4(%esp)
 2983 031e 8B4508   		movl	8(%ebp), %eax
 2984 0321 890424   		movl	%eax, (%esp)
 2985 0324 E8000000 		call	_SetNFBImageImp
 2985      00
 322:../../MMI/Resource/WriteProcess.cpp **** 
 323:../../MMI/Resource/WriteProcess.cpp ****     char *curr_output_data_filename = NFB_IMAGE_DATA_FILENAME;
 2987              	LM19:
 2988 0329 C785B4FD 		movl	$LC5, -588(%ebp)
 2988      FFFF0001 
 2988      0000
 324:../../MMI/Resource/WriteProcess.cpp ****     FILE *output_data_file = NULL;
 2990              	LM20:
 2991 0333 C785B0FD 		movl	$0, -592(%ebp)
 2991      FFFF0000 
 2991      0000
 325:../../MMI/Resource/WriteProcess.cpp ****     output_data_file = fopen(curr_output_data_filename, "ab");
 2993              	LM21:
 2994 033d C7442404 		movl	$LC6, 4(%esp)
 2994      31010000 
 2995 0345 8B85B4FD 		movl	-588(%ebp), %eax
 2995      FFFF
 2996 034b 890424   		movl	%eax, (%esp)
 2997 034e E8000000 		call	_fopen
 2997      00
 2998 0353 8985B0FD 		movl	%eax, -592(%ebp)
 2998      FFFF
 326:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("SetNFBImage: Open NFB image output file: %s, file descriptor: 0x%x", NFB_IMAGE_D
 3000              	LM22:
 3001 0359 8B85B0FD 		movl	-592(%ebp), %eax
 3001      FFFF
 3002 035f 89442410 		movl	%eax, 16(%esp)
 3003 0363 C744240C 		movl	$LC5, 12(%esp)
 3003      00010000 
 3004 036b C7442408 		movl	$LC7, 8(%esp)
 3004      40010000 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 11


 3005 0373 C7442404 		movl	$LC4, 4(%esp)
 3005      E4000000 
 3006 037b C7042401 		movl	$1, (%esp)
 3006      000000
 3007 0382 E8000000 		call	_reslog_adaptor_log
 3007      00
 327:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 3009              	LM23:
 3010 0387 A1000000 		movl	__imp___iob, %eax
 3010      00
 3011 038c 83C020   		addl	$32, %eax
 3012 038f 890424   		movl	%eax, (%esp)
 3013 0392 E8000000 		call	_fflush
 3013      00
 328:../../MMI/Resource/WriteProcess.cpp **** 
 329:../../MMI/Resource/WriteProcess.cpp ****     while (output_data_file == NULL)
 3015              	LM24:
 3016              	L4:
 3017 0397 83BDB0FD 		cmpl	$0, -592(%ebp)
 3017      FFFF00
 3018 039e 7402     		je	L6
 3019 03a0 EB75     		jmp	L5
 3020              	L6:
 330:../../MMI/Resource/WriteProcess.cpp ****     {
 331:../../MMI/Resource/WriteProcess.cpp ****         IMGPROC_LOG_V("SetNFBImage: File descriptor can't be NULL for %s, retry... ", output_data_f
 3022              	LM25:
 3023 03a2 C7442410 		movl	$LC5, 16(%esp)
 3023      00010000 
 3024 03aa 8B85B0FD 		movl	-592(%ebp), %eax
 3024      FFFF
 3025 03b0 8944240C 		movl	%eax, 12(%esp)
 3026 03b4 C7442408 		movl	$LC8, 8(%esp)
 3026      A0010000 
 3027 03bc C7442404 		movl	$LC4, 4(%esp)
 3027      E4000000 
 3028 03c4 C7042401 		movl	$1, (%esp)
 3028      000000
 3029 03cb C78588FD 		movl	$1, -632(%ebp)
 3029      FFFF0100 
 3029      0000
 3030 03d5 E8000000 		call	_reslog_adaptor_log
 3030      00
 332:../../MMI/Resource/WriteProcess.cpp ****         fflush(stdout);
 3032              	LM26:
 3033 03da A1000000 		movl	__imp___iob, %eax
 3033      00
 3034 03df 83C020   		addl	$32, %eax
 3035 03e2 890424   		movl	%eax, (%esp)
 3036 03e5 E8000000 		call	_fflush
 3036      00
 333:../../MMI/Resource/WriteProcess.cpp ****         Sleep(50);
 3038              	LM27:
 3039 03ea C7042432 		movl	$50, (%esp)
 3039      000000
 3040 03f1 E8000000 		call	_Sleep@4
 3040      00
 3041 03f6 83EC04   		subl	$4, %esp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 12


 334:../../MMI/Resource/WriteProcess.cpp ****         output_data_file = fopen(curr_output_data_filename, "ab");
 3043              	LM28:
 3044 03f9 C7442404 		movl	$LC6, 4(%esp)
 3044      31010000 
 3045 0401 8B85B4FD 		movl	-588(%ebp), %eax
 3045      FFFF
 3046 0407 890424   		movl	%eax, (%esp)
 3047 040a E8000000 		call	_fopen
 3047      00
 3048 040f 8985B0FD 		movl	%eax, -592(%ebp)
 3048      FFFF
 3049 0415 EB80     		jmp	L4
 3050              	L5:
 335:../../MMI/Resource/WriteProcess.cpp ****     }
 336:../../MMI/Resource/WriteProcess.cpp **** 
 337:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("SetNFBImage: Write NFB image data to %s, file descriptor: 0x%x", NFB_IMAGE_DATA_
 3052              	LM29:
 3053 0417 8B85B0FD 		movl	-592(%ebp), %eax
 3053      FFFF
 3054 041d 89442410 		movl	%eax, 16(%esp)
 3055 0421 C744240C 		movl	$LC5, 12(%esp)
 3055      00010000 
 3056 0429 C7442408 		movl	$LC9, 8(%esp)
 3056      E0010000 
 3057 0431 C7442404 		movl	$LC4, 4(%esp)
 3057      E4000000 
 3058 0439 C7042401 		movl	$1, (%esp)
 3058      000000
 3059 0440 C78588FD 		movl	$1, -632(%ebp)
 3059      FFFF0100 
 3059      0000
 3060 044a E8000000 		call	_reslog_adaptor_log
 3060      00
 338:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 3062              	LM30:
 3063 044f A1000000 		movl	__imp___iob, %eax
 3063      00
 3064 0454 83C020   		addl	$32, %eax
 3065 0457 890424   		movl	%eax, (%esp)
 3066 045a E8000000 		call	_fflush
 3066      00
 339:../../MMI/Resource/WriteProcess.cpp ****     ImageOutStreamOutputFile(&outstream, output_data_file);
 3068              	LM31:
 3069 045f 8B85B0FD 		movl	-592(%ebp), %eax
 3069      FFFF
 3070 0465 89442404 		movl	%eax, 4(%esp)
 3071 0469 8D85B8FD 		leal	-584(%ebp), %eax
 3071      FFFF
 3072 046f 890424   		movl	%eax, (%esp)
 3073 0472 E87F1800 		call	_ImageOutStreamOutputFile
 3073      00
 340:../../MMI/Resource/WriteProcess.cpp **** 
 341:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("SetNFBImage: Close NFB image output file: %s, file descriptor: 0x%x", NFB_IMAGE_
 3075              	LM32:
 3076 0477 8B85B0FD 		movl	-592(%ebp), %eax
 3076      FFFF
 3077 047d 89442410 		movl	%eax, 16(%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 13


 3078 0481 C744240C 		movl	$LC5, 12(%esp)
 3078      00010000 
 3079 0489 C7442408 		movl	$LC10, 8(%esp)
 3079      20020000 
 3080 0491 C7442404 		movl	$LC4, 4(%esp)
 3080      E4000000 
 3081 0499 C7042401 		movl	$1, (%esp)
 3081      000000
 3082 04a0 E8000000 		call	_reslog_adaptor_log
 3082      00
 342:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 3084              	LM33:
 3085 04a5 A1000000 		movl	__imp___iob, %eax
 3085      00
 3086 04aa 83C020   		addl	$32, %eax
 3087 04ad 890424   		movl	%eax, (%esp)
 3088 04b0 E8000000 		call	_fflush
 3088      00
 343:../../MMI/Resource/WriteProcess.cpp ****     MYFCLOSE(output_data_file);
 3090              	LM34:
 3091 04b5 83BDB0FD 		cmpl	$0, -592(%ebp)
 3091      FFFF00
 3092 04bc 7467     		je	L10
 3093 04be 8B85B0FD 		movl	-592(%ebp), %eax
 3093      FFFF
 3094 04c4 890424   		movl	%eax, (%esp)
 3095 04c7 E8000000 		call	_fclose
 3095      00
 3096 04cc C785B0FD 		movl	$0, -592(%ebp)
 3096      FFFF0000 
 3096      0000
 3097 04d6 EB4D     		jmp	L10
 3098              	L13:
 3099 04d8 8D6D18   		leal	24(%ebp), %ebp
 3100 04db 8B858CFD 		movl	-628(%ebp), %eax
 3100      FFFF
 3101 04e1 89857CFD 		movl	%eax, -644(%ebp)
 3101      FFFF
 3102              	L9:
 3103 04e7 8B957CFD 		movl	-644(%ebp), %edx
 3103      FFFF
 3104 04ed 899580FD 		movl	%edx, -640(%ebp)
 3104      FFFF
 3105 04f3 8D85B8FD 		leal	-584(%ebp), %eax
 3105      FFFF
 3106 04f9 890424   		movl	%eax, (%esp)
 3107 04fc E8000000 		call	__ZN21_ResgenImageOutStreamD1Ev
 3107      00
 3108 0501 8B8580FD 		movl	-640(%ebp), %eax
 3108      FFFF
 3109 0507 89857CFD 		movl	%eax, -644(%ebp)
 3109      FFFF
 3110              	L11:
 3111 050d 8B957CFD 		movl	-644(%ebp), %edx
 3111      FFFF
 3112 0513 891424   		movl	%edx, (%esp)
 3113 0516 C78588FD 		movl	$-1, -632(%ebp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 14


 3113      FFFFFFFF 
 3113      FFFF
 3114 0520 E8000000 		call	__Unwind_SjLj_Resume
 3114      00
 3115              	L10:
 3116 0525 8D85B8FD 		leal	-584(%ebp), %eax
 3116      FFFF
 3117 052b 890424   		movl	%eax, (%esp)
 3118 052e E8000000 		call	__ZN21_ResgenImageOutStreamD1Ev
 3118      00
 344:../../MMI/Resource/WriteProcess.cpp **** }
 3120              	LM35:
 3121              	L3:
 3122 0533 8D8584FD 		leal	-636(%ebp), %eax
 3122      FFFF
 3123 0539 890424   		movl	%eax, (%esp)
 3124 053c E8000000 		call	__Unwind_SjLj_Unregister
 3124      00
 3125 0541 8D65F4   		leal	-12(%ebp), %esp
 3126 0544 5B       		popl	%ebx
 3127 0545 5E       		popl	%esi
 3128 0546 5F       		popl	%edi
 3129 0547 5D       		popl	%ebp
 3130 0548 C3       		ret
 3131              	LBE3:
 3132              		.section	.gcc_except_table,""
 3133              	LLSDA2133:
 3134 0000 FF       		.byte	0xff
 3135 0001 FF       		.byte	0xff
 3136 0002 01       		.byte	0x1
 3137 0003 02       		.uleb128 LLSDACSE2133-LLSDACSB2133
 3138              	LLSDACSB2133:
 3139 0004 00       		.uleb128 0x0
 3140 0005 00       		.uleb128 0x0
 3141              	LLSDACSE2133:
 3142              		.text
 3149              	Lscope1:
 3151 0549 90       		.align 2
 3156              	.globl _SetImage
 3158              	_SetImage:
 345:../../MMI/Resource/WriteProcess.cpp **** 
 346:../../MMI/Resource/WriteProcess.cpp **** /*****************************************************************************
 347:../../MMI/Resource/WriteProcess.cpp **** * FUNCTION
 348:../../MMI/Resource/WriteProcess.cpp **** *  SetImage
 349:../../MMI/Resource/WriteProcess.cpp **** * DESCRIPTION
 350:../../MMI/Resource/WriteProcess.cpp **** *  Function to Update the Customizable Image Filename & Mapping Array.
 351:../../MMI/Resource/WriteProcess.cpp **** * PARAMETERS
 352:../../MMI/Resource/WriteProcess.cpp **** *  ImgId           [IN]
 353:../../MMI/Resource/WriteProcess.cpp **** *  filename        [?]
 354:../../MMI/Resource/WriteProcess.cpp **** *  enum_value      [?]
 355:../../MMI/Resource/WriteProcess.cpp **** *  U16(?)          [OUT]       Image Number which is Mapped with the ImageId.
 356:../../MMI/Resource/WriteProcess.cpp **** * RETURNS
 357:../../MMI/Resource/WriteProcess.cpp **** *  Image Number which is mapped with the ImageId.(?)
 358:../../MMI/Resource/WriteProcess.cpp **** *****************************************************************************/
 359:../../MMI/Resource/WriteProcess.cpp **** extern "C" void SetImage(U16 ImgId, S8 *filename, S8 *enum_value)  /* 120304 Calvin modified for me
 360:../../MMI/Resource/WriteProcess.cpp **** {
 3160              	LM36:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 15


 3161 054a 55       		pushl	%ebp
 3162 054b 89E5     		movl	%esp, %ebp
 3163 054d 83EC18   		subl	$24, %esp
 3164 0550 8B4508   		movl	8(%ebp), %eax
 3165 0553 668945FE 		movw	%ax, -2(%ebp)
 361:../../MMI/Resource/WriteProcess.cpp ****     /*----------------------------------------------------------------*/
 362:../../MMI/Resource/WriteProcess.cpp ****     /* Local Variables                                                */
 363:../../MMI/Resource/WriteProcess.cpp ****     /*----------------------------------------------------------------*/
 364:../../MMI/Resource/WriteProcess.cpp **** 
 365:../../MMI/Resource/WriteProcess.cpp ****     /*----------------------------------------------------------------*/
 366:../../MMI/Resource/WriteProcess.cpp ****     /* Code Body                                                      */
 367:../../MMI/Resource/WriteProcess.cpp ****     /*----------------------------------------------------------------*/
 368:../../MMI/Resource/WriteProcess.cpp ****     SetImageWithBuffer(ImgId, filename, enum_value, FALSE);       /* 040805 CustPack: Calvin revise
 3167              	LM37:
 3168              	LBB4:
 3169 0557 C744240C 		movl	$0, 12(%esp)
 3169      00000000 
 3170 055f 8B4510   		movl	16(%ebp), %eax
 3171 0562 89442408 		movl	%eax, 8(%esp)
 3172 0566 8B450C   		movl	12(%ebp), %eax
 3173 0569 89442404 		movl	%eax, 4(%esp)
 3174 056d 0FB745FE 		movzwl	-2(%ebp), %eax
 3175 0571 890424   		movl	%eax, (%esp)
 3176 0574 E83B0000 		call	_SetImageWithBuffer
 3176      00
 369:../../MMI/Resource/WriteProcess.cpp **** }
 3178              	LM38:
 3179 0579 C9       		leave
 3180 057a C3       		ret
 3181              	LBE4:
 3183              	Lscope2:
 3185 057b 90       		.align 2
 3192              	.globl _SetImageWithBufferForceType
 3194              	_SetImageWithBufferForceType:
 370:../../MMI/Resource/WriteProcess.cpp **** 
 371:../../MMI/Resource/WriteProcess.cpp **** /*****************************************************************************
 372:../../MMI/Resource/WriteProcess.cpp **** * FUNCTION
 373:../../MMI/Resource/WriteProcess.cpp **** *  SetImageWithBufferForceType
 374:../../MMI/Resource/WriteProcess.cpp **** * DESCRIPTION
 375:../../MMI/Resource/WriteProcess.cpp **** *  Function to copy the image file to buffer use force type
 376:../../MMI/Resource/WriteProcess.cpp **** * PARAMETERS
 377:../../MMI/Resource/WriteProcess.cpp **** *  nImgId              [IN]
 378:../../MMI/Resource/WriteProcess.cpp **** *  filename            [?]
 379:../../MMI/Resource/WriteProcess.cpp **** *  enum_value          [?]
 380:../../MMI/Resource/WriteProcess.cpp **** *  imgFlag             [IN]
 381:../../MMI/Resource/WriteProcess.cpp **** *  S8(?)               [OUT]       -> filename of the image to be displayed.
 382:../../MMI/Resource/WriteProcess.cpp **** *  U16(?)              [IN]        -> ImageId
 383:../../MMI/Resource/WriteProcess.cpp **** * RETURNS
 384:../../MMI/Resource/WriteProcess.cpp **** *  void
 385:../../MMI/Resource/WriteProcess.cpp **** *****************************************************************************/
 386:../../MMI/Resource/WriteProcess.cpp **** extern "C" void SetImageWithBufferForceType(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag,
 387:../../MMI/Resource/WriteProcess.cpp **** {
 3196              	LM39:
 3197 057c 55       		pushl	%ebp
 3198 057d 89E5     		movl	%esp, %ebp
 3199 057f 83EC18   		subl	$24, %esp
 3200 0582 8B4508   		movl	8(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 16


 3201 0585 668945FE 		movw	%ax, -2(%ebp)
 388:../../MMI/Resource/WriteProcess.cpp ****     SetImageWithBufferEx(nImgId, filename, enum_value, imgFlag, force_type);
 3203              	LM40:
 3204              	LBB5:
 3205 0589 8B4518   		movl	24(%ebp), %eax
 3206 058c 89442410 		movl	%eax, 16(%esp)
 3207 0590 8B4514   		movl	20(%ebp), %eax
 3208 0593 8944240C 		movl	%eax, 12(%esp)
 3209 0597 8B4510   		movl	16(%ebp), %eax
 3210 059a 89442408 		movl	%eax, 8(%esp)
 3211 059e 8B450C   		movl	12(%ebp), %eax
 3212 05a1 89442404 		movl	%eax, 4(%esp)
 3213 05a5 0FB745FE 		movzwl	-2(%ebp), %eax
 3214 05a9 890424   		movl	%eax, (%esp)
 3215 05ac E8370100 		call	__Z20SetImageWithBufferExtPcS_ii
 3215      00
 389:../../MMI/Resource/WriteProcess.cpp **** }
 3217              	LM41:
 3218 05b1 C9       		leave
 3219 05b2 C3       		ret
 3220              	LBE5:
 3222              	Lscope3:
 3224 05b3 90       		.align 2
 3230              	.globl _SetImageWithBuffer
 3232              	_SetImageWithBuffer:
 390:../../MMI/Resource/WriteProcess.cpp **** 
 391:../../MMI/Resource/WriteProcess.cpp **** /*****************************************************************************
 392:../../MMI/Resource/WriteProcess.cpp **** * FUNCTION
 393:../../MMI/Resource/WriteProcess.cpp **** *  SetImageWithBuffer
 394:../../MMI/Resource/WriteProcess.cpp **** * DESCRIPTION
 395:../../MMI/Resource/WriteProcess.cpp **** *  Function to copy the image file to buffer
 396:../../MMI/Resource/WriteProcess.cpp **** * PARAMETERS
 397:../../MMI/Resource/WriteProcess.cpp **** *  nImgId              [IN]
 398:../../MMI/Resource/WriteProcess.cpp **** *  filename            [?]
 399:../../MMI/Resource/WriteProcess.cpp **** *  enum_value          [?]
 400:../../MMI/Resource/WriteProcess.cpp **** *  imgFlag             [IN]
 401:../../MMI/Resource/WriteProcess.cpp **** *  S8(?)               [OUT]       -> filename of the image to be displayed.
 402:../../MMI/Resource/WriteProcess.cpp **** *  U16(?)              [IN]        -> ImageId
 403:../../MMI/Resource/WriteProcess.cpp **** * RETURNS
 404:../../MMI/Resource/WriteProcess.cpp **** *  void
 405:../../MMI/Resource/WriteProcess.cpp **** *****************************************************************************/
 406:../../MMI/Resource/WriteProcess.cpp **** extern "C" void SetImageWithBuffer(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag)      /* 
 407:../../MMI/Resource/WriteProcess.cpp **** {
 3234              	LM42:
 3235 05b4 55       		pushl	%ebp
 3236 05b5 89E5     		movl	%esp, %ebp
 3237 05b7 83EC18   		subl	$24, %esp
 3238 05ba 8B4508   		movl	8(%ebp), %eax
 3239 05bd 668945FE 		movw	%ax, -2(%ebp)
 408:../../MMI/Resource/WriteProcess.cpp ****     SetImageWithBufferEx(nImgId, filename, enum_value, imgFlag, AUTO_TYPE);
 3241              	LM43:
 3242              	LBB6:
 3243 05c1 C7442410 		movl	$0, 16(%esp)
 3243      00000000 
 3244 05c9 8B4514   		movl	20(%ebp), %eax
 3245 05cc 8944240C 		movl	%eax, 12(%esp)
 3246 05d0 8B4510   		movl	16(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 17


 3247 05d3 89442408 		movl	%eax, 8(%esp)
 3248 05d7 8B450C   		movl	12(%ebp), %eax
 3249 05da 89442404 		movl	%eax, 4(%esp)
 3250 05de 0FB745FE 		movzwl	-2(%ebp), %eax
 3251 05e2 890424   		movl	%eax, (%esp)
 3252 05e5 E8FE0000 		call	__Z20SetImageWithBufferExtPcS_ii
 3252      00
 409:../../MMI/Resource/WriteProcess.cpp **** }
 3254              	LM44:
 3255 05ea C9       		leave
 3256 05eb C3       		ret
 3257              	LBE6:
 3259              	Lscope4:
 3261              		.align 2
 3268              	.globl _SetImageQWithBuffer
 3270              	_SetImageQWithBuffer:
 410:../../MMI/Resource/WriteProcess.cpp **** 
 411:../../MMI/Resource/WriteProcess.cpp **** extern "C" void SetImageQWithBuffer(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag, S32 qua
 412:../../MMI/Resource/WriteProcess.cpp **** {
 3272              	LM45:
 3273 05ec 55       		pushl	%ebp
 3274 05ed 89E5     		movl	%esp, %ebp
 3275 05ef 83EC28   		subl	$40, %esp
 3276 05f2 8B4508   		movl	8(%ebp), %eax
 3277 05f5 668945FE 		movw	%ax, -2(%ebp)
 413:../../MMI/Resource/WriteProcess.cpp ****     SetImageQWithBufferEx(nImgId, filename, enum_value, imgFlag, AUTO_TYPE, quality);
 3279              	LM46:
 3280              	LBB7:
 3281 05f9 8B4518   		movl	24(%ebp), %eax
 3282 05fc 89442414 		movl	%eax, 20(%esp)
 3283 0600 C7442410 		movl	$0, 16(%esp)
 3283      00000000 
 3284 0608 8B4514   		movl	20(%ebp), %eax
 3285 060b 8944240C 		movl	%eax, 12(%esp)
 3286 060f 8B4510   		movl	16(%ebp), %eax
 3287 0612 89442408 		movl	%eax, 8(%esp)
 3288 0616 8B450C   		movl	12(%ebp), %eax
 3289 0619 89442404 		movl	%eax, 4(%esp)
 3290 061d 0FB745FE 		movzwl	-2(%ebp), %eax
 3291 0621 890424   		movl	%eax, (%esp)
 3292 0624 E8230100 		call	__Z21SetImageQWithBufferExtPcS_iii
 3292      00
 414:../../MMI/Resource/WriteProcess.cpp **** }
 3294              	LM47:
 3295 0629 C9       		leave
 3296 062a C3       		ret
 3297              	LBE7:
 3299              	Lscope5:
 3301 062b 90       		.align 2
 3309              	.globl _SetImageQWithBufferForceType
 3311              	_SetImageQWithBufferForceType:
 415:../../MMI/Resource/WriteProcess.cpp **** 
 416:../../MMI/Resource/WriteProcess.cpp **** extern "C" void SetImageQWithBufferForceType(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag
 417:../../MMI/Resource/WriteProcess.cpp **** {
 3313              	LM48:
 3314 062c 55       		pushl	%ebp
 3315 062d 89E5     		movl	%esp, %ebp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 18


 3316 062f 83EC28   		subl	$40, %esp
 3317 0632 8B4508   		movl	8(%ebp), %eax
 3318 0635 668945FE 		movw	%ax, -2(%ebp)
 418:../../MMI/Resource/WriteProcess.cpp ****     SetImageQWithBufferEx(nImgId, filename, enum_value, imgFlag, force_type,quality);
 3320              	LM49:
 3321              	LBB8:
 3322 0639 8B451C   		movl	28(%ebp), %eax
 3323 063c 89442414 		movl	%eax, 20(%esp)
 3324 0640 8B4518   		movl	24(%ebp), %eax
 3325 0643 89442410 		movl	%eax, 16(%esp)
 3326 0647 8B4514   		movl	20(%ebp), %eax
 3327 064a 8944240C 		movl	%eax, 12(%esp)
 3328 064e 8B4510   		movl	16(%ebp), %eax
 3329 0651 89442408 		movl	%eax, 8(%esp)
 3330 0655 8B450C   		movl	12(%ebp), %eax
 3331 0658 89442404 		movl	%eax, 4(%esp)
 3332 065c 0FB745FE 		movzwl	-2(%ebp), %eax
 3333 0660 890424   		movl	%eax, (%esp)
 3334 0663 E8E40000 		call	__Z21SetImageQWithBufferExtPcS_iii
 3334      00
 419:../../MMI/Resource/WriteProcess.cpp **** }
 3336              	LM50:
 3337 0668 C9       		leave
 3338 0669 C3       		ret
 3339              	LBE8:
 3341              	Lscope6:
 3351              	.lcomm _g_resgen_png_image_list,16
 3360              	.lcomm _g_log_binary_data_list,16
 3361              		.align 2
 3365              	__Z13stringToUpperSs:
 420:../../MMI/Resource/WriteProcess.cpp **** 
 421:../../MMI/Resource/WriteProcess.cpp **** struct ProcessImageData
 422:../../MMI/Resource/WriteProcess.cpp **** {
 423:../../MMI/Resource/WriteProcess.cpp ****     ProcessImageData(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag, S32 force_type):
 424:../../MMI/Resource/WriteProcess.cpp **** m_nImgId(nImgId),
 425:../../MMI/Resource/WriteProcess.cpp **** m_filename(filename),
 426:../../MMI/Resource/WriteProcess.cpp **** m_enum_value(enum_value),
 427:../../MMI/Resource/WriteProcess.cpp **** m_imgFlag(imgFlag),
 428:../../MMI/Resource/WriteProcess.cpp **** m_force_type(force_type)
 429:../../MMI/Resource/WriteProcess.cpp **** {
 430:../../MMI/Resource/WriteProcess.cpp ****     initImageProcessData(&m_processData);
 431:../../MMI/Resource/WriteProcess.cpp ****     m_processData.outstream = &m_outstream;
 432:../../MMI/Resource/WriteProcess.cpp **** }
 433:../../MMI/Resource/WriteProcess.cpp **** 
 434:../../MMI/Resource/WriteProcess.cpp **** ProcessImageData(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag, S32 force_type, S32 qualit
 435:../../MMI/Resource/WriteProcess.cpp **** m_nImgId(nImgId),
 436:../../MMI/Resource/WriteProcess.cpp **** m_filename(filename),
 437:../../MMI/Resource/WriteProcess.cpp **** m_enum_value(enum_value),
 438:../../MMI/Resource/WriteProcess.cpp **** m_imgFlag(imgFlag),
 439:../../MMI/Resource/WriteProcess.cpp **** m_force_type(force_type)
 440:../../MMI/Resource/WriteProcess.cpp **** {
 441:../../MMI/Resource/WriteProcess.cpp ****     initImageProcessData(&m_processData);
 442:../../MMI/Resource/WriteProcess.cpp ****     m_processData.outstream = &m_outstream;
 443:../../MMI/Resource/WriteProcess.cpp ****     m_processData.quality = quality;
 444:../../MMI/Resource/WriteProcess.cpp **** }
 445:../../MMI/Resource/WriteProcess.cpp **** 
 446:../../MMI/Resource/WriteProcess.cpp **** 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 19


 447:../../MMI/Resource/WriteProcess.cpp **** ProcessImageData(const ProcessImageData & src)
 448:../../MMI/Resource/WriteProcess.cpp **** {
 449:../../MMI/Resource/WriteProcess.cpp ****     m_nImgId = src.m_nImgId;
 450:../../MMI/Resource/WriteProcess.cpp ****     m_filename = src.m_filename;
 451:../../MMI/Resource/WriteProcess.cpp ****     m_enum_value = src.m_enum_value;
 452:../../MMI/Resource/WriteProcess.cpp ****     m_imgFlag = src.m_imgFlag;
 453:../../MMI/Resource/WriteProcess.cpp ****     m_force_type = src.m_force_type;
 454:../../MMI/Resource/WriteProcess.cpp ****     m_processData = src.m_processData;
 455:../../MMI/Resource/WriteProcess.cpp ****     m_outstream = src.m_outstream;
 456:../../MMI/Resource/WriteProcess.cpp ****     m_processData.outstream = &m_outstream;
 457:../../MMI/Resource/WriteProcess.cpp ****     m_processData.quality =src.m_processData.quality;
 458:../../MMI/Resource/WriteProcess.cpp **** 
 459:../../MMI/Resource/WriteProcess.cpp **** }
 460:../../MMI/Resource/WriteProcess.cpp **** ProcessImageData & operator= (const ProcessImageData & src)
 461:../../MMI/Resource/WriteProcess.cpp **** {
 462:../../MMI/Resource/WriteProcess.cpp ****     m_nImgId = src.m_nImgId;
 463:../../MMI/Resource/WriteProcess.cpp ****     m_filename = src.m_filename;
 464:../../MMI/Resource/WriteProcess.cpp ****     m_enum_value = src.m_enum_value;
 465:../../MMI/Resource/WriteProcess.cpp ****     m_imgFlag = src.m_imgFlag;
 466:../../MMI/Resource/WriteProcess.cpp ****     m_force_type = src.m_force_type;
 467:../../MMI/Resource/WriteProcess.cpp ****     m_processData = src.m_processData;
 468:../../MMI/Resource/WriteProcess.cpp ****     m_outstream = src.m_outstream;
 469:../../MMI/Resource/WriteProcess.cpp ****     m_processData.outstream = &m_outstream;
 470:../../MMI/Resource/WriteProcess.cpp ****     m_processData.quality =src.m_processData.quality;
 471:../../MMI/Resource/WriteProcess.cpp **** 
 472:../../MMI/Resource/WriteProcess.cpp ****     return *this;
 473:../../MMI/Resource/WriteProcess.cpp **** }
 474:../../MMI/Resource/WriteProcess.cpp **** 
 475:../../MMI/Resource/WriteProcess.cpp **** U16     m_nImgId;
 476:../../MMI/Resource/WriteProcess.cpp **** string  m_filename;
 477:../../MMI/Resource/WriteProcess.cpp **** string  m_enum_value;
 478:../../MMI/Resource/WriteProcess.cpp **** BOOL    m_imgFlag;
 479:../../MMI/Resource/WriteProcess.cpp **** S32     m_force_type;
 480:../../MMI/Resource/WriteProcess.cpp **** SetImageProcessData m_processData;
 481:../../MMI/Resource/WriteProcess.cpp **** ResgenImageOutStream m_outstream;
 482:../../MMI/Resource/WriteProcess.cpp **** };
 483:../../MMI/Resource/WriteProcess.cpp **** 
 484:../../MMI/Resource/WriteProcess.cpp **** typedef list<ProcessImageData> ProcessImageList;
 485:../../MMI/Resource/WriteProcess.cpp **** static ProcessImageList g_resgen_png_image_list;
 486:../../MMI/Resource/WriteProcess.cpp **** 
 487:../../MMI/Resource/WriteProcess.cpp **** struct LogBinaryData
 488:../../MMI/Resource/WriteProcess.cpp **** {
 489:../../MMI/Resource/WriteProcess.cpp ****     U16     m_res_id;
 490:../../MMI/Resource/WriteProcess.cpp ****     string  m_filename;
 491:../../MMI/Resource/WriteProcess.cpp ****     int     m_binary_type;
 492:../../MMI/Resource/WriteProcess.cpp **** 
 493:../../MMI/Resource/WriteProcess.cpp ****     LogBinaryData(U16 res_id, char * filename, int binary_type):
 494:../../MMI/Resource/WriteProcess.cpp ****     m_res_id(res_id),
 495:../../MMI/Resource/WriteProcess.cpp ****         m_filename(filename),
 496:../../MMI/Resource/WriteProcess.cpp ****         m_binary_type(binary_type)
 497:../../MMI/Resource/WriteProcess.cpp ****     {
 498:../../MMI/Resource/WriteProcess.cpp ****     }
 499:../../MMI/Resource/WriteProcess.cpp **** };
 500:../../MMI/Resource/WriteProcess.cpp **** 
 501:../../MMI/Resource/WriteProcess.cpp **** typedef list<LogBinaryData> LogBinaryDataList;
 502:../../MMI/Resource/WriteProcess.cpp **** static LogBinaryDataList g_log_binary_data_list;
 503:../../MMI/Resource/WriteProcess.cpp **** 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 20


 504:../../MMI/Resource/WriteProcess.cpp **** static string stringToUpper(string str)
 505:../../MMI/Resource/WriteProcess.cpp **** {
 3367              	LM51:
 3368 066a 55       		pushl	%ebp
 3369 066b 89E5     		movl	%esp, %ebp
 3370 066d 53       		pushl	%ebx
 3371 066e 83EC14   		subl	$20, %esp
 506:../../MMI/Resource/WriteProcess.cpp ****     const int length = str.length();
 3373              	LM52:
 3374 0671 8B450C   		movl	12(%ebp), %eax
 3375              	LBB9:
 3376 0674 890424   		movl	%eax, (%esp)
 3377 0677 E8000000 		call	__ZNKSs6lengthEv
 3377      00
 3378 067c 8945F8   		movl	%eax, -8(%ebp)
 507:../../MMI/Resource/WriteProcess.cpp ****     for(int i=0; i!=length ; ++i)
 3380              	LM53:
 3381              	LBB10:
 3382 067f C745F400 		movl	$0, -12(%ebp)
 3382      000000
 3383              	L20:
 3384 0686 8B45F4   		movl	-12(%ebp), %eax
 3385 0689 3B45F8   		cmpl	-8(%ebp), %eax
 3386 068c 7502     		jne	L23
 3387 068e EB3A     		jmp	L21
 3388              	L23:
 508:../../MMI/Resource/WriteProcess.cpp ****     {
 509:../../MMI/Resource/WriteProcess.cpp ****         str[i] = toupper(str[i]);
 3390              	LM54:
 3391 0690 8B45F4   		movl	-12(%ebp), %eax
 3392 0693 89442404 		movl	%eax, 4(%esp)
 3393 0697 8B450C   		movl	12(%ebp), %eax
 3394 069a 890424   		movl	%eax, (%esp)
 3395 069d E8000000 		call	__ZNSsixEj
 3395      00
 3396 06a2 89C3     		movl	%eax, %ebx
 3397 06a4 8B45F4   		movl	-12(%ebp), %eax
 3398 06a7 89442404 		movl	%eax, 4(%esp)
 3399 06ab 8B450C   		movl	12(%ebp), %eax
 3400 06ae 890424   		movl	%eax, (%esp)
 3401 06b1 E8000000 		call	__ZNSsixEj
 3401      00
 3402 06b6 0FBE00   		movsbl	(%eax),%eax
 3403 06b9 890424   		movl	%eax, (%esp)
 3404 06bc E8000000 		call	_toupper
 3404      00
 3405 06c1 8803     		movb	%al, (%ebx)
 3407              	LM55:
 3408 06c3 8D45F4   		leal	-12(%ebp), %eax
 3409 06c6 FF00     		incl	(%eax)
 3410 06c8 EBBC     		jmp	L20
 3411              	L21:
 510:../../MMI/Resource/WriteProcess.cpp ****     }
 511:../../MMI/Resource/WriteProcess.cpp ****     return str;
 3413              	LM56:
 3414 06ca 8B450C   		movl	12(%ebp), %eax
 3415              	LBE10:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 21


 3416 06cd 89442404 		movl	%eax, 4(%esp)
 3417 06d1 8B4508   		movl	8(%ebp), %eax
 3418 06d4 890424   		movl	%eax, (%esp)
 3419 06d7 E8000000 		call	__ZNSsC1ERKSs
 3419      00
 512:../../MMI/Resource/WriteProcess.cpp **** }
 3421              	LM57:
 3422              	LBE9:
 3423 06dc 8B4508   		movl	8(%ebp), %eax
 3424 06df 83C414   		addl	$20, %esp
 3425 06e2 5B       		popl	%ebx
 3426 06e3 5D       		popl	%ebp
 3427 06e4 C20400   		ret	$4
 3435              	Lscope7:
 3437 06e7 90       		.align 2
 3444              	.globl __Z20SetImageWithBufferExtPcS_ii
 3446              	__Z20SetImageWithBufferExtPcS_ii:
 513:../../MMI/Resource/WriteProcess.cpp **** 
 514:../../MMI/Resource/WriteProcess.cpp **** void SetImageWithBufferEx(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag, S32 force_type){
 3448              	LM58:
 3449 06e8 55       		pushl	%ebp
 3450 06e9 89E5     		movl	%esp, %ebp
 3451 06eb 83EC28   		subl	$40, %esp
 3452 06ee 8B4508   		movl	8(%ebp), %eax
 3453 06f1 668945FE 		movw	%ax, -2(%ebp)
 515:../../MMI/Resource/WriteProcess.cpp ****     SetImageQWithBufferEx(nImgId,filename,enum_value,imgFlag,force_type,OFFLINE_IMAGE_PARAM_QUALITY
 3455              	LM59:
 3456              	LBB11:
 3457 06f5 C7442414 		movl	$1, 20(%esp)
 3457      01000000 
 3458 06fd 8B4518   		movl	24(%ebp), %eax
 3459 0700 89442410 		movl	%eax, 16(%esp)
 3460 0704 8B4514   		movl	20(%ebp), %eax
 3461 0707 8944240C 		movl	%eax, 12(%esp)
 3462 070b 8B4510   		movl	16(%ebp), %eax
 3463 070e 89442408 		movl	%eax, 8(%esp)
 3464 0712 8B450C   		movl	12(%ebp), %eax
 3465 0715 89442404 		movl	%eax, 4(%esp)
 3466 0719 0FB745FE 		movzwl	-2(%ebp), %eax
 3467 071d 890424   		movl	%eax, (%esp)
 3468 0720 E8270000 		call	__Z21SetImageQWithBufferExtPcS_iii
 3468      00
 516:../../MMI/Resource/WriteProcess.cpp **** 
 517:../../MMI/Resource/WriteProcess.cpp **** }
 3470              	LM60:
 3471 0725 C9       		leave
 3472 0726 C3       		ret
 3473              	LBE11:
 3475              	Lscope8:
 3478              	LC11:
 3479 0727 66696C65 		.ascii "file name%d = %s \12\0"
 3479      206E616D 
 3479      65256420 
 3479      3D202573 
 3479      200A00
 3480              	LC12:
 3481 073a 496D6167 		.ascii "Image\0"
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 22


 3481      6500
 3482              	LC13:
 3483 0740 25640925 		.ascii "%d\11%s\11\11%s\12\0"
 3483      73090925 
 3483      730A00
 3484 074b 90       		.align 2
 3492              	.globl __Z21SetImageQWithBufferExtPcS_iii
 3494              	__Z21SetImageQWithBufferExtPcS_iii:
 518:../../MMI/Resource/WriteProcess.cpp **** void SetImageQWithBufferEx(U16 nImgId, S8 *filename, S8 *enum_value, BOOL imgFlag, S32 force_type, 
 519:../../MMI/Resource/WriteProcess.cpp **** {
 3496              	LM61:
 3497 074c 55       		pushl	%ebp
 3498 074d 89E5     		movl	%esp, %ebp
 3499 074f 57       		pushl	%edi
 3500 0750 56       		pushl	%esi
 3501 0751 53       		pushl	%ebx
 3502 0752 81ECFC04 		subl	$1276, %esp
 3502      0000
 3503 0758 8B4508   		movl	8(%ebp), %eax
 3504 075b 668945E6 		movw	%ax, -26(%ebp)
 3505 075f C78540FB 		movl	$___gxx_personality_sj0, -1216(%ebp)
 3505      FFFF0000 
 3505      0000
 3506 0769 C78544FB 		movl	$LLSDA2187, -1212(%ebp)
 3506      FFFF0600 
 3506      0000
 3507 0773 8D8548FB 		leal	-1208(%ebp), %eax
 3507      FFFF
 3508 0779 8D55E8   		leal	-24(%ebp), %edx
 3509 077c 8910     		movl	%edx, (%eax)
 3510 077e BA5D0A00 		movl	$L42, %edx
 3510      00
 3511 0783 895004   		movl	%edx, 4(%eax)
 3512 0786 896008   		movl	%esp, 8(%eax)
 3513 0789 8D8528FB 		leal	-1240(%ebp), %eax
 3513      FFFF
 3514 078f 890424   		movl	%eax, (%esp)
 3515 0792 E8000000 		call	__Unwind_SjLj_Register
 3515      00
 520:../../MMI/Resource/WriteProcess.cpp ****     // preprocess
 521:../../MMI/Resource/WriteProcess.cpp **** #if defined(__MULTIPLE_BINARY_FILES__) && defined(__MMI_RESOURCE_ENFB_SUPPORT__)
 522:../../MMI/Resource/WriteProcess.cpp ****     if (CustPack_ENFB_image_test(filename, 0 /* disable_enfb */) == MMI_TRUE)
 523:../../MMI/Resource/WriteProcess.cpp ****     {
 524:../../MMI/Resource/WriteProcess.cpp ****         imgFlag = MMI_TRUE;
 525:../../MMI/Resource/WriteProcess.cpp ****     }
 526:../../MMI/Resource/WriteProcess.cpp **** #endif /* defined(__MULTIPLE_BINARY_FILES__) && defined(__MMI_RESOURCE_ENFB_SUPPORT__) */
 527:../../MMI/Resource/WriteProcess.cpp **** 
 528:../../MMI/Resource/WriteProcess.cpp ****     CUSTOM_IMAGE_MAP *pImageIdMap;
 529:../../MMI/Resource/WriteProcess.cpp ****     unsigned short *pCurrMaxImageNum;
 530:../../MMI/Resource/WriteProcess.cpp ****     IMAGENAME_LIST *pImageNameList;
 531:../../MMI/Resource/WriteProcess.cpp **** 
 532:../../MMI/Resource/WriteProcess.cpp ****     if (imgFlag == TRUE)
 3517              	LM62:
 3518              	LBB12:
 3519 0797 837D1401 		cmpl	$1, 20(%ebp)
 3520 079b 7517     		jne	L26
 533:../../MMI/Resource/WriteProcess.cpp ****     {
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 23


 534:../../MMI/Resource/WriteProcess.cpp ****         pImageIdMap = ImageIdMapEXT;
 3522              	LM63:
 3523 079d C745E000 		movl	$_ImageIdMapEXT, -32(%ebp)
 3523      000000
 535:../../MMI/Resource/WriteProcess.cpp ****         pImageNameList = ImageNameListEXT;
 3525              	LM64:
 3526 07a4 C745D800 		movl	$_ImageNameListEXT, -40(%ebp)
 3526      000000
 536:../../MMI/Resource/WriteProcess.cpp ****         pCurrMaxImageNum = &CurrMaxImageNumEXT;
 3528              	LM65:
 3529 07ab C745DC00 		movl	$_CurrMaxImageNumEXT, -36(%ebp)
 3529      000000
 3530 07b2 EB15     		jmp	L27
 3531              	L26:
 537:../../MMI/Resource/WriteProcess.cpp ****     }
 538:../../MMI/Resource/WriteProcess.cpp ****     else
 539:../../MMI/Resource/WriteProcess.cpp ****     {
 540:../../MMI/Resource/WriteProcess.cpp ****         pImageIdMap = ImageIdMap;
 3533              	LM66:
 3534 07b4 C745E000 		movl	$_ImageIdMap, -32(%ebp)
 3534      000000
 541:../../MMI/Resource/WriteProcess.cpp ****         pImageNameList = ImageNameList;
 3536              	LM67:
 3537 07bb C745D800 		movl	$_ImageNameList, -40(%ebp)
 3537      000000
 542:../../MMI/Resource/WriteProcess.cpp ****         pCurrMaxImageNum = &CurrMaxImageNum;
 3539              	LM68:
 3540 07c2 C745DC00 		movl	$_CurrMaxImageNum, -36(%ebp)
 3540      000000
 3541              	L27:
 543:../../MMI/Resource/WriteProcess.cpp ****     }
 544:../../MMI/Resource/WriteProcess.cpp **** 
 545:../../MMI/Resource/WriteProcess.cpp ****     fprintf(OutputImgIDFile, "file name%d = %s \n", image_idx++, filename);
 3543              	LM69:
 3544 07c9 8B450C   		movl	12(%ebp), %eax
 3545 07cc 8944240C 		movl	%eax, 12(%esp)
 3546 07d0 A1000000 		movl	_image_idx, %eax
 3546      00
 3547 07d5 89442408 		movl	%eax, 8(%esp)
 3548 07d9 FF050000 		incl	_image_idx
 3548      0000
 3549 07df C7442404 		movl	$LC11, 4(%esp)
 3549      27070000 
 3550 07e7 A1000000 		movl	_OutputImgIDFile, %eax
 3550      00
 3551 07ec 890424   		movl	%eax, (%esp)
 3552 07ef E8000000 		call	_fprintf
 3552      00
 546:../../MMI/Resource/WriteProcess.cpp **** 
 547:../../MMI/Resource/WriteProcess.cpp ****     if (strlen(filename) >= MAX_FILENAME_LEN)
 3554              	LM70:
 3555 07f4 8B450C   		movl	12(%ebp), %eax
 3556 07f7 890424   		movl	%eax, (%esp)
 3557 07fa E8000000 		call	_strlen
 3557      00
 3558 07ff 3DFF0100 		cmpl	$511, %eax
 3558      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 24


 3559 0804 760B     		jbe	L28
 548:../../MMI/Resource/WriteProcess.cpp ****     {
 549:../../MMI/Resource/WriteProcess.cpp ****         filename[MAX_FILENAME_LEN - 1] = '\0';
 3561              	LM71:
 3562 0806 8B450C   		movl	12(%ebp), %eax
 3563 0809 05FF0100 		addl	$511, %eax
 3563      00
 3564 080e C60000   		movb	$0, (%eax)
 3565              	L28:
 550:../../MMI/Resource/WriteProcess.cpp ****     }
 551:../../MMI/Resource/WriteProcess.cpp **** 
 552:../../MMI/Resource/WriteProcess.cpp ****     if (pImageIdMap[nImgId].nImageNum != (U16)-1)
 3567              	LM72:
 3568 0811 0FB745E6 		movzwl	-26(%ebp), %eax
 3569 0815 8D1400   		leal	(%eax,%eax), %edx
 3570 0818 8B45E0   		movl	-32(%ebp), %eax
 3571 081b 66833C10 		cmpw	$-1, (%eax,%edx)
 3571      FF
 3572 0820 7431     		je	L29
 553:../../MMI/Resource/WriteProcess.cpp ****     {
 554:../../MMI/Resource/WriteProcess.cpp ****         fprintf(RepeatIDListFile, "%d\t%s\t\t%s\n", nImgId, enum_value, "Image");
 3574              	LM73:
 3575 0822 C7442410 		movl	$LC12, 16(%esp)
 3575      3A070000 
 3576 082a 8B4510   		movl	16(%ebp), %eax
 3577 082d 8944240C 		movl	%eax, 12(%esp)
 3578 0831 0FB745E6 		movzwl	-26(%ebp), %eax
 3579 0835 89442408 		movl	%eax, 8(%esp)
 3580 0839 C7442404 		movl	$LC13, 4(%esp)
 3580      40070000 
 3581 0841 A1000000 		movl	_RepeatIDListFile, %eax
 3581      00
 3582 0846 890424   		movl	%eax, (%esp)
 3583 0849 E8000000 		call	_fprintf
 3583      00
 555:../../MMI/Resource/WriteProcess.cpp ****         return;
 3585              	LM74:
 3586 084e E9650200 		jmp	L25
 3586      00
 3587              	L29:
 556:../../MMI/Resource/WriteProcess.cpp ****     }
 557:../../MMI/Resource/WriteProcess.cpp **** 
 558:../../MMI/Resource/WriteProcess.cpp ****     S16 nStrlen = strlen(filename);
 3589              	LM75:
 3590 0853 8B450C   		movl	12(%ebp), %eax
 3591 0856 890424   		movl	%eax, (%esp)
 3592 0859 E8000000 		call	_strlen
 3592      00
 3593 085e 668945D6 		movw	%ax, -42(%ebp)
 559:../../MMI/Resource/WriteProcess.cpp ****     S8 upperFileName[MAX_FILENAME_LEN];
 560:../../MMI/Resource/WriteProcess.cpp ****     while (nStrlen >= 0)
 3595              	LM76:
 3596              	L30:
 3597 0862 66837DD6 		cmpw	$0, -42(%ebp)
 3597      00
 3598 0867 7902     		jns	L32
 3599 0869 EB35     		jmp	L31
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 25


 3600              	L32:
 561:../../MMI/Resource/WriteProcess.cpp ****     {
 562:../../MMI/Resource/WriteProcess.cpp ****         upperFileName[nStrlen] = toupper(filename[nStrlen]);
 3602              	LM77:
 3603 086b 0FBF45D6 		movswl	-42(%ebp),%eax
 3604 086f 898524FB 		movl	%eax, -1244(%ebp)
 3604      FFFF
 3605 0875 0FBF55D6 		movswl	-42(%ebp),%edx
 3606 0879 8B450C   		movl	12(%ebp), %eax
 3607 087c 0FBE0402 		movsbl	(%edx,%eax),%eax
 3608 0880 890424   		movl	%eax, (%esp)
 3609 0883 E8000000 		call	_toupper
 3609      00
 3610 0888 8B9524FB 		movl	-1244(%ebp), %edx
 3610      FFFF
 3611 088e 888415C8 		movb	%al, -568(%ebp,%edx)
 3611      FDFFFF
 563:../../MMI/Resource/WriteProcess.cpp ****         --nStrlen;
 3613              	LM78:
 3614 0895 0FB745D6 		movzwl	-42(%ebp), %eax
 3615 0899 48       		decl	%eax
 3616 089a 668945D6 		movw	%ax, -42(%ebp)
 3617 089e EBC2     		jmp	L30
 3618              	L31:
 564:../../MMI/Resource/WriteProcess.cpp ****     }
 565:../../MMI/Resource/WriteProcess.cpp **** 
 566:../../MMI/Resource/WriteProcess.cpp ****     pImageIdMap[nImgId].nImageNum = 0;
 3620              	LM79:
 3621 08a0 0FB745E6 		movzwl	-26(%ebp), %eax
 3622 08a4 8D1400   		leal	(%eax,%eax), %edx
 3623 08a7 8B45E0   		movl	-32(%ebp), %eax
 3624 08aa 66C70410 		movw	$0, (%eax,%edx)
 3624      0000
 567:../../MMI/Resource/WriteProcess.cpp **** 
 568:../../MMI/Resource/WriteProcess.cpp ****     ProcessImageData data(nImgId, upperFileName, enum_value, imgFlag, force_type, quality);
 3626              	LM80:
 3627 08b0 8B451C   		movl	28(%ebp), %eax
 3628 08b3 89442418 		movl	%eax, 24(%esp)
 3629 08b7 8B4518   		movl	24(%ebp), %eax
 3630 08ba 89442414 		movl	%eax, 20(%esp)
 3631 08be 8B4514   		movl	20(%ebp), %eax
 3632 08c1 89442410 		movl	%eax, 16(%esp)
 3633 08c5 8B4510   		movl	16(%ebp), %eax
 3634 08c8 8944240C 		movl	%eax, 12(%esp)
 3635 08cc 8D85C8FD 		leal	-568(%ebp), %eax
 3635      FFFF
 3636 08d2 89442408 		movl	%eax, 8(%esp)
 3637 08d6 0FB745E6 		movzwl	-26(%ebp), %eax
 3638 08da 89442404 		movl	%eax, 4(%esp)
 3639 08de 8D8588FB 		leal	-1144(%ebp), %eax
 3639      FFFF
 3640 08e4 890424   		movl	%eax, (%esp)
 3641 08e7 C7852CFB 		movl	$-1, -1236(%ebp)
 3641      FFFFFFFF 
 3641      FFFF
 3642 08f1 E8000000 		call	__ZN16ProcessImageDataC1EtPcS0_iii
 3642      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 26


 569:../../MMI/Resource/WriteProcess.cpp **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 570:../../MMI/Resource/WriteProcess.cpp ****     if (disableENFB)
 571:../../MMI/Resource/WriteProcess.cpp ****     {
 572:../../MMI/Resource/WriteProcess.cpp ****         data.m_processData.disable_enfb = 1;
 573:../../MMI/Resource/WriteProcess.cpp ****     }
 574:../../MMI/Resource/WriteProcess.cpp **** #endif
 575:../../MMI/Resource/WriteProcess.cpp **** 
 576:../../MMI/Resource/WriteProcess.cpp ****     // init the process data
 577:../../MMI/Resource/WriteProcess.cpp ****     data.m_processData.res_size = 0;
 3644              	LM81:
 3645 08f6 C7859CFD 		movl	$0, -612(%ebp)
 3645      FFFF0000 
 3645      0000
 578:../../MMI/Resource/WriteProcess.cpp ****     strcpy(data.m_processData.real_filename, filename);
 3647              	LM82:
 3648 0900 8B450C   		movl	12(%ebp), %eax
 3649 0903 89442404 		movl	%eax, 4(%esp)
 3650 0907 8D8588FB 		leal	-1144(%ebp), %eax
 3650      FFFF
 3651 090d 83C014   		addl	$20, %eax
 3652 0910 890424   		movl	%eax, (%esp)
 3653 0913 E8000000 		call	_strcpy
 3653      00
 579:../../MMI/Resource/WriteProcess.cpp **** 
 580:../../MMI/Resource/WriteProcess.cpp ****     ProcessImageList::iterator i = g_resgen_png_image_list.begin();
 3655              	LM83:
 3656 0918 8D8578FB 		leal	-1160(%ebp), %eax
 3656      FFFF
 3657 091e C7442404 		movl	$_g_resgen_png_image_list, 4(%esp)
 3657      10000000 
 3658 0926 890424   		movl	%eax, (%esp)
 3659 0929 C7852CFB 		movl	$1, -1236(%ebp)
 3659      FFFF0100 
 3659      0000
 3660 0933 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv
 3660      00
 3661 0938 83EC04   		subl	$4, %esp
 581:../../MMI/Resource/WriteProcess.cpp ****     U32 index = 0;
 3663              	LM84:
 3664 093b C78574FB 		movl	$0, -1164(%ebp)
 3664      FFFF0000 
 3664      0000
 582:../../MMI/Resource/WriteProcess.cpp ****     for (; i != g_resgen_png_image_list.end(); ++i, ++index)
 3666              	LM85:
 3667              	L33:
 3668              	LBB13:
 3669 0945 8D8558FB 		leal	-1192(%ebp), %eax
 3669      FFFF
 3670 094b C7442404 		movl	$_g_resgen_png_image_list, 4(%esp)
 3670      10000000 
 3671 0953 890424   		movl	%eax, (%esp)
 3672 0956 C7852CFB 		movl	$1, -1236(%ebp)
 3672      FFFF0100 
 3672      0000
 3673 0960 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE3endEv
 3673      00
 3674 0965 83EC04   		subl	$4, %esp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 27


 3675 0968 8D8558FB 		leal	-1192(%ebp), %eax
 3675      FFFF
 3676 096e 89442404 		movl	%eax, 4(%esp)
 3677 0972 8D8578FB 		leal	-1160(%ebp), %eax
 3677      FFFF
 3678 0978 890424   		movl	%eax, (%esp)
 3679 097b E8000000 		call	__ZNKSt19_List_iterator_baseneERKS_
 3679      00
 3680 0980 84C0     		testb	%al, %al
 3681 0982 7505     		jne	L36
 3682 0984 E9930000 		jmp	L34
 3682      00
 3683              	L36:
 583:../../MMI/Resource/WriteProcess.cpp ****     {
 584:../../MMI/Resource/WriteProcess.cpp ****         ProcessImageData & ref = *i;
 3685              	LM86:
 3686              	LBB14:
 3687              	LBB15:
 3688 0989 8D8578FB 		leal	-1160(%ebp), %eax
 3688      FFFF
 3689 098f 890424   		movl	%eax, (%esp)
 3690 0992 C7852CFB 		movl	$1, -1236(%ebp)
 3690      FFFF0100 
 3690      0000
 3691 099c E8000000 		call	__ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv
 3691      00
 3692 09a1 898554FB 		movl	%eax, -1196(%ebp)
 3692      FFFF
 585:../../MMI/Resource/WriteProcess.cpp ****         if (ref.m_imgFlag == imgFlag && strcmp(ref.m_filename.c_str(), upperFileName) == 0)
 3694              	LM87:
 3695 09a7 8B8554FB 		movl	-1196(%ebp), %eax
 3695      FFFF
 3696 09ad 8B400C   		movl	12(%eax), %eax
 3697 09b0 3B4514   		cmpl	20(%ebp), %eax
 3698 09b3 7542     		jne	L35
 3699 09b5 8B8554FB 		movl	-1196(%ebp), %eax
 3699      FFFF
 3700 09bb 83C004   		addl	$4, %eax
 3701 09be 890424   		movl	%eax, (%esp)
 3702 09c1 E8000000 		call	__ZNKSs5c_strEv
 3702      00
 3703 09c6 8D95C8FD 		leal	-568(%ebp), %edx
 3703      FFFF
 3704 09cc 89542404 		movl	%edx, 4(%esp)
 3705 09d0 890424   		movl	%eax, (%esp)
 3706 09d3 E8000000 		call	_strcmp
 3706      00
 3707 09d8 85C0     		testl	%eax, %eax
 3708 09da 751B     		jne	L35
 586:../../MMI/Resource/WriteProcess.cpp ****         {
 587:../../MMI/Resource/WriteProcess.cpp ****             data.m_processData.duplicated = MMI_TRUE;
 3710              	LM88:
 3711 09dc C785A8FD 		movl	$1, -600(%ebp)
 3711      FFFF0100 
 3711      0000
 588:../../MMI/Resource/WriteProcess.cpp ****             data.m_processData.duplicatedInstance = &ref.m_processData;
 3713              	LM89:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 28


 3714 09e6 8B8554FB 		movl	-1196(%ebp), %eax
 3714      FFFF
 3715 09ec 83C014   		addl	$20, %eax
 3716 09ef 8985ACFD 		movl	%eax, -596(%ebp)
 3716      FFFF
 589:../../MMI/Resource/WriteProcess.cpp ****             break;
 3718              	LM90:
 3719 09f5 EB25     		jmp	L34
 3721              	LM91:
 3722              	L35:
 3723              	LBE15:
 3724              	LBE14:
 3725 09f7 8D8578FB 		leal	-1160(%ebp), %eax
 3725      FFFF
 3726 09fd 890424   		movl	%eax, (%esp)
 3727 0a00 C7852CFB 		movl	$1, -1236(%ebp)
 3727      FFFF0100 
 3727      0000
 3728 0a0a E8000000 		call	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv
 3728      00
 3729 0a0f 8D8574FB 		leal	-1164(%ebp), %eax
 3729      FFFF
 3730 0a15 FF00     		incl	(%eax)
 3731 0a17 E929FFFF 		jmp	L33
 3731      FF
 3732              	L34:
 590:../../MMI/Resource/WriteProcess.cpp ****         }
 591:../../MMI/Resource/WriteProcess.cpp ****     }
 592:../../MMI/Resource/WriteProcess.cpp **** 
 593:../../MMI/Resource/WriteProcess.cpp ****     //if (getResgenImgPostProcess() )
 594:../../MMI/Resource/WriteProcess.cpp **** #define RESGEN_IMG_POST_PROCESS
 595:../../MMI/Resource/WriteProcess.cpp **** 
 596:../../MMI/Resource/WriteProcess.cpp **** #ifdef RESGEN_IMG_POST_PROCESS
 597:../../MMI/Resource/WriteProcess.cpp ****     S32 ext_type = ExtractExtension(upperFileName, RES_IMAGE);
 3734              	LM92:
 3735              	LBE13:
 3736 0a1c C7442404 		movl	$0, 4(%esp)
 3736      00000000 
 3737 0a24 8D85C8FD 		leal	-568(%ebp), %eax
 3737      FFFF
 3738 0a2a 890424   		movl	%eax, (%esp)
 3739 0a2d C7852CFB 		movl	$1, -1236(%ebp)
 3739      FFFF0100 
 3739      0000
 3740 0a37 E8000000 		call	_ExtractExtension
 3740      00
 3741 0a3c 0FB6C0   		movzbl	%al, %eax
 3742 0a3f 898554FB 		movl	%eax, -1196(%ebp)
 3742      FFFF
 598:../../MMI/Resource/WriteProcess.cpp **** 
 599:../../MMI/Resource/WriteProcess.cpp ****     // add to list
 600:../../MMI/Resource/WriteProcess.cpp ****     g_resgen_png_image_list.push_back(data);
 3744              	LM93:
 3745 0a45 8D8588FB 		leal	-1144(%ebp), %eax
 3745      FFFF
 3746 0a4b 89442404 		movl	%eax, 4(%esp)
 3747 0a4f C7042410 		movl	$_g_resgen_png_image_list, (%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 29


 3747      000000
 3748 0a56 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE9push_backERKS0_
 3748      00
 3749 0a5b EB4D     		jmp	L39
 3750              	L42:
 3751 0a5d 8D6D18   		leal	24(%ebp), %ebp
 3752 0a60 8B8530FB 		movl	-1232(%ebp), %eax
 3752      FFFF
 3753 0a66 89851CFB 		movl	%eax, -1252(%ebp)
 3753      FFFF
 3754              	L38:
 3755 0a6c 8B951CFB 		movl	-1252(%ebp), %edx
 3755      FFFF
 3756 0a72 899520FB 		movl	%edx, -1248(%ebp)
 3756      FFFF
 3757 0a78 8D8588FB 		leal	-1144(%ebp), %eax
 3757      FFFF
 3758 0a7e 890424   		movl	%eax, (%esp)
 3759 0a81 E8000000 		call	__ZN16ProcessImageDataD1Ev
 3759      00
 3760 0a86 8B8520FB 		movl	-1248(%ebp), %eax
 3760      FFFF
 3761 0a8c 89851CFB 		movl	%eax, -1252(%ebp)
 3761      FFFF
 3762              	L40:
 3763 0a92 8B951CFB 		movl	-1252(%ebp), %edx
 3763      FFFF
 3764 0a98 891424   		movl	%edx, (%esp)
 3765 0a9b C7852CFB 		movl	$-1, -1236(%ebp)
 3765      FFFFFFFF 
 3765      FFFF
 3766 0aa5 E8000000 		call	__Unwind_SjLj_Resume
 3766      00
 3767              	L39:
 3768 0aaa 8D8588FB 		leal	-1144(%ebp), %eax
 3768      FFFF
 3769 0ab0 890424   		movl	%eax, (%esp)
 3770 0ab3 E8000000 		call	__ZN16ProcessImageDataD1Ev
 3770      00
 601:../../MMI/Resource/WriteProcess.cpp **** 
 602:../../MMI/Resource/WriteProcess.cpp **** #else // RESGEN_IMG_POST_PROCESS
 603:../../MMI/Resource/WriteProcess.cpp ****     SetImageWithBufferExImp(data.m_nImgId, (S8*)data.m_filename.c_str(),
 604:../../MMI/Resource/WriteProcess.cpp ****         (S8*)data.m_enum_value.c_str(), data.m_imgFlag,
 605:../../MMI/Resource/WriteProcess.cpp ****         data.m_force_type, &data.m_processData);
 606:../../MMI/Resource/WriteProcess.cpp **** 
 607:../../MMI/Resource/WriteProcess.cpp **** #endif // RESGEN_IMG_POST_PROCESS
 608:../../MMI/Resource/WriteProcess.cpp **** }
 3772              	LM94:
 3773              	L25:
 3774 0ab8 8D8528FB 		leal	-1240(%ebp), %eax
 3774      FFFF
 3775 0abe 890424   		movl	%eax, (%esp)
 3776 0ac1 E8000000 		call	__Unwind_SjLj_Unregister
 3776      00
 3777 0ac6 8D65F4   		leal	-12(%ebp), %esp
 3778 0ac9 5B       		popl	%ebx
 3779 0aca 5E       		popl	%esi
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 30


 3780 0acb 5F       		popl	%edi
 3781 0acc 5D       		popl	%ebp
 3782 0acd C3       		ret
 3783              	LBE12:
 3784              		.section	.gcc_except_table,""
 3785              	LLSDA2187:
 3786 0006 FF       		.byte	0xff
 3787 0007 FF       		.byte	0xff
 3788 0008 01       		.byte	0x1
 3789 0009 02       		.uleb128 LLSDACSE2187-LLSDACSB2187
 3790              	LLSDACSB2187:
 3791 000a 00       		.uleb128 0x0
 3792 000b 00       		.uleb128 0x0
 3793              	LLSDACSE2187:
 3794              		.text
 3810              	Lscope9:
 3812 0ace 90909090 		.align 32
 3812      90909090 
 3812      90909090 
 3812      90909090 
 3812      9090
 3813              	LC14:
 3814 0ae0 5F5F5F5F 		.ascii "________CUSTOMER__IMAGES__DEFAULT_BMP\0"
 3814      5F5F5F5F 
 3814      43555354 
 3814      4F4D4552 
 3814      5F5F494D 
 3815              	LC15:
 3816 0b06 4E4F5F41 		.ascii "NO_APP\0"
 3816      505000
 3817              	LC16:
 3818 0b0d 25730925 		.ascii "%s\11%d\11%d\11%s\11%d\11%s\11NA\12\0"
 3818      64092564 
 3818      09257309 
 3818      25640925 
 3818      73094E41 
 3819              	LC17:
 3820 0b23 25730925 		.ascii "%s\11%d\11%d\12\0"
 3820      64092564 
 3820      0A00
 3821 0b2d 90       		.align 2
 3824              	.globl __Z28ProcessResgenPngImagesMapIdsR16ProcessImageData
 3826              	__Z28ProcessResgenPngImagesMapIdsR16ProcessImageData:
 609:../../MMI/Resource/WriteProcess.cpp **** 
 610:../../MMI/Resource/WriteProcess.cpp **** void ProcessResgenPngImagesMapIds(ProcessImageData & data)
 611:../../MMI/Resource/WriteProcess.cpp **** {
 3828              	LM95:
 3829 0b2e 55       		pushl	%ebp
 3830 0b2f 89E5     		movl	%esp, %ebp
 3831 0b31 83EC48   		subl	$72, %esp
 612:../../MMI/Resource/WriteProcess.cpp ****     unsigned short *pCurrMaxImageNum;
 613:../../MMI/Resource/WriteProcess.cpp ****     CUSTOM_IMAGE_MAP *pImageIdMap;
 614:../../MMI/Resource/WriteProcess.cpp ****     IMAGENAME_LIST *pImageNameList;
 615:../../MMI/Resource/WriteProcess.cpp ****     unsigned short *pCurrMaxImageId;
 616:../../MMI/Resource/WriteProcess.cpp ****     image_type_enum extImageFlag = SYSTEM_IMAGE;
 3833              	LM96:
 3834              	LBB16:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 31


 3835 0b34 C745EC00 		movl	$0, -20(%ebp)
 3835      000000
 617:../../MMI/Resource/WriteProcess.cpp **** 
 618:../../MMI/Resource/WriteProcess.cpp ****     if (data.m_imgFlag == TRUE)
 3837              	LM97:
 3838 0b3b 8B4508   		movl	8(%ebp), %eax
 3839 0b3e 83780C01 		cmpl	$1, 12(%eax)
 3840 0b42 7525     		jne	L44
 619:../../MMI/Resource/WriteProcess.cpp ****     {
 620:../../MMI/Resource/WriteProcess.cpp ****         extImageFlag = EXT_IMAGE;
 3842              	LM98:
 3843 0b44 C745EC01 		movl	$1, -20(%ebp)
 3843      000000
 621:../../MMI/Resource/WriteProcess.cpp ****         pCurrMaxImageId = &CurrMaxImageIdEXT;
 3845              	LM99:
 3846 0b4b C745F000 		movl	$_CurrMaxImageIdEXT, -16(%ebp)
 3846      000000
 622:../../MMI/Resource/WriteProcess.cpp ****         pCurrMaxImageNum = &CurrMaxImageNumEXT;
 3848              	LM100:
 3849 0b52 C745FC00 		movl	$_CurrMaxImageNumEXT, -4(%ebp)
 3849      000000
 623:../../MMI/Resource/WriteProcess.cpp ****         pImageNameList = ImageNameListEXT;
 3851              	LM101:
 3852 0b59 C745F400 		movl	$_ImageNameListEXT, -12(%ebp)
 3852      000000
 624:../../MMI/Resource/WriteProcess.cpp ****         pImageIdMap = ImageIdMapEXT;
 3854              	LM102:
 3855 0b60 C745F800 		movl	$_ImageIdMapEXT, -8(%ebp)
 3855      000000
 3856 0b67 EB23     		jmp	L45
 3857              	L44:
 625:../../MMI/Resource/WriteProcess.cpp ****     }
 626:../../MMI/Resource/WriteProcess.cpp ****     else
 627:../../MMI/Resource/WriteProcess.cpp ****     {
 628:../../MMI/Resource/WriteProcess.cpp ****         extImageFlag = SYSTEM_IMAGE;
 3859              	LM103:
 3860 0b69 C745EC00 		movl	$0, -20(%ebp)
 3860      000000
 629:../../MMI/Resource/WriteProcess.cpp ****         pCurrMaxImageId = &CurrMaxImageId;
 3862              	LM104:
 3863 0b70 C745F000 		movl	$_CurrMaxImageId, -16(%ebp)
 3863      000000
 630:../../MMI/Resource/WriteProcess.cpp ****         pCurrMaxImageNum = &CurrMaxImageNum;
 3865              	LM105:
 3866 0b77 C745FC00 		movl	$_CurrMaxImageNum, -4(%ebp)
 3866      000000
 631:../../MMI/Resource/WriteProcess.cpp ****         pImageNameList = ImageNameList;
 3868              	LM106:
 3869 0b7e C745F400 		movl	$_ImageNameList, -12(%ebp)
 3869      000000
 632:../../MMI/Resource/WriteProcess.cpp ****         pImageIdMap = ImageIdMap;
 3871              	LM107:
 3872 0b85 C745F800 		movl	$_ImageIdMap, -8(%ebp)
 3872      000000
 3873              	L45:
 633:../../MMI/Resource/WriteProcess.cpp ****     }
 634:../../MMI/Resource/WriteProcess.cpp **** 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 32


 635:../../MMI/Resource/WriteProcess.cpp ****     if (data.m_processData.failed)
 3875              	LM108:
 3876              	LBB17:
 3877 0b8c 8B4508   		movl	8(%ebp), %eax
 3878 0b8f 83B81C02 		cmpl	$0, 540(%eax)
 3878      000000
 3879 0b96 7474     		je	L46
 636:../../MMI/Resource/WriteProcess.cpp ****     {
 637:../../MMI/Resource/WriteProcess.cpp ****         strcpy(ImageNameList[CurrMaxImageNum].filename, DEFAULT_FILEBUFFER);
 3881              	LM109:
 3882 0b98 C7442404 		movl	$LC14, 4(%esp)
 3882      E00A0000 
 3883 0ba0 0FB70500 		movzwl	_CurrMaxImageNum, %eax
 3883      000000
 3884 0ba7 C1E009   		sall	$9, %eax
 3885 0baa 05000000 		addl	$_ImageNameList, %eax
 3885      00
 3886 0baf 890424   		movl	%eax, (%esp)
 3887 0bb2 E8000000 		call	_strcpy
 3887      00
 638:../../MMI/Resource/WriteProcess.cpp ****         ImageIdMap[data.m_nImgId].nImageNum = CurrMaxImageNum;
 3889              	LM110:
 3890 0bb7 8B4508   		movl	8(%ebp), %eax
 3891 0bba 0FB710   		movzwl	(%eax), %edx
 3892 0bbd 0FB70500 		movzwl	_CurrMaxImageNum, %eax
 3892      000000
 3893 0bc4 66898412 		movw	%ax, _ImageIdMap(%edx,%edx)
 3893      00000000 
 639:../../MMI/Resource/WriteProcess.cpp ****         CurrMaxImageNum++;
 3895              	LM111:
 3896 0bcc 0FB70500 		movzwl	_CurrMaxImageNum, %eax
 3896      000000
 3897 0bd3 40       		incl	%eax
 3898 0bd4 66A30000 		movw	%ax, _CurrMaxImageNum
 3898      0000
 640:../../MMI/Resource/WriteProcess.cpp ****         CurrMaxImageId++;
 3900              	LM112:
 3901 0bda 0FB70500 		movzwl	_CurrMaxImageId, %eax
 3901      000000
 3902 0be1 40       		incl	%eax
 3903 0be2 66A30000 		movw	%ax, _CurrMaxImageId
 3903      0000
 641:../../MMI/Resource/WriteProcess.cpp ****         if (data.m_imgFlag == TRUE)
 3905              	LM113:
 3906 0be8 8B4508   		movl	8(%ebp), %eax
 3907 0beb 83780C01 		cmpl	$1, 12(%eax)
 3908 0bef 0F858C04 		jne	L43
 3908      0000
 642:../../MMI/Resource/WriteProcess.cpp ****         {
 643:../../MMI/Resource/WriteProcess.cpp ****             pImageIdMap[data.m_nImgId].nImageNum = -1;
 3910              	LM114:
 3911 0bf5 8B4508   		movl	8(%ebp), %eax
 3912 0bf8 0FB700   		movzwl	(%eax), %eax
 3913 0bfb 8D1400   		leal	(%eax,%eax), %edx
 3914 0bfe 8B45F8   		movl	-8(%ebp), %eax
 3915 0c01 66C70410 		movw	$-1, (%eax,%edx)
 3915      FFFF
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 33


 3916 0c07 E9750400 		jmp	L43
 3916      00
 3917              	L46:
 644:../../MMI/Resource/WriteProcess.cpp ****         }
 645:../../MMI/Resource/WriteProcess.cpp ****     }
 646:../../MMI/Resource/WriteProcess.cpp ****     else if (data.m_processData.duplicated)
 3919              	LM115:
 3920              	LBB18:
 3921              	LBB19:
 3922 0c0c 8B4508   		movl	8(%ebp), %eax
 3923 0c0f 83B82002 		cmpl	$0, 544(%eax)
 3923      000000
 3924 0c16 0F844C02 		je	L49
 3924      0000
 647:../../MMI/Resource/WriteProcess.cpp ****     {
 648:../../MMI/Resource/WriteProcess.cpp **** 
 649:../../MMI/Resource/WriteProcess.cpp ****         U32 i;
 650:../../MMI/Resource/WriteProcess.cpp ****         for (i = 0; i < *pCurrMaxImageNum; i++)
 3926              	LM116:
 3927              	LBB20:
 3928 0c1c C745E800 		movl	$0, -24(%ebp)
 3928      000000
 3929              	L50:
 3930 0c23 8B45FC   		movl	-4(%ebp), %eax
 3931 0c26 0FB700   		movzwl	(%eax), %eax
 3932 0c29 3945E8   		cmpl	%eax, -24(%ebp)
 3933 0c2c 7202     		jb	L53
 3934 0c2e EB3D     		jmp	L51
 3935              	L53:
 651:../../MMI/Resource/WriteProcess.cpp ****         {
 652:../../MMI/Resource/WriteProcess.cpp ****             if (!strcmp(pImageNameList[i].filename, data.m_filename.c_str()))
 3937              	LM117:
 3938 0c30 8B4508   		movl	8(%ebp), %eax
 3939 0c33 83C004   		addl	$4, %eax
 3940 0c36 890424   		movl	%eax, (%esp)
 3941 0c39 E8000000 		call	__ZNKSs5c_strEv
 3941      00
 3942 0c3e 89442404 		movl	%eax, 4(%esp)
 3943 0c42 8B45E8   		movl	-24(%ebp), %eax
 3944 0c45 C1E009   		sall	$9, %eax
 3945 0c48 0345F4   		addl	-12(%ebp), %eax
 3946 0c4b 890424   		movl	%eax, (%esp)
 3947 0c4e E8000000 		call	_strcmp
 3947      00
 3948 0c53 85C0     		testl	%eax, %eax
 3949 0c55 750F     		jne	L52
 653:../../MMI/Resource/WriteProcess.cpp ****             {
 654:../../MMI/Resource/WriteProcess.cpp ****                 data.m_processData.duplicated = MMI_TRUE;
 3951              	LM118:
 3952 0c57 8B4508   		movl	8(%ebp), %eax
 3953 0c5a C7802002 		movl	$1, 544(%eax)
 3953      00000100 
 3953      0000
 655:../../MMI/Resource/WriteProcess.cpp ****                 break;
 3955              	LM119:
 3956 0c64 EB07     		jmp	L51
 3958              	LM120:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 34


 3959              	L52:
 3960 0c66 8D45E8   		leal	-24(%ebp), %eax
 3961 0c69 FF00     		incl	(%eax)
 3962 0c6b EBB6     		jmp	L50
 3963              	L51:
 656:../../MMI/Resource/WriteProcess.cpp ****             }
 657:../../MMI/Resource/WriteProcess.cpp ****         }
 658:../../MMI/Resource/WriteProcess.cpp **** 
 659:../../MMI/Resource/WriteProcess.cpp ****         //pImageIdMap[data.m_nImgId].nImageNum = data.m_processData.duplicatedIndex;
 660:../../MMI/Resource/WriteProcess.cpp ****         pImageIdMap[data.m_nImgId].nImageNum = i;
 3965              	LM121:
 3966 0c6d 8B4508   		movl	8(%ebp), %eax
 3967 0c70 0FB700   		movzwl	(%eax), %eax
 3968 0c73 8D0C00   		leal	(%eax,%eax), %ecx
 3969 0c76 8B55F8   		movl	-8(%ebp), %edx
 3970 0c79 8B45E8   		movl	-24(%ebp), %eax
 3971 0c7c 6689040A 		movw	%ax, (%edx,%ecx)
 661:../../MMI/Resource/WriteProcess.cpp ****         (*pCurrMaxImageId)++;
 3973              	LM122:
 3974 0c80 8B55F0   		movl	-16(%ebp), %edx
 3975 0c83 8B45F0   		movl	-16(%ebp), %eax
 3976 0c86 0FB700   		movzwl	(%eax), %eax
 3977 0c89 40       		incl	%eax
 3978 0c8a 668902   		movw	%ax, (%edx)
 662:../../MMI/Resource/WriteProcess.cpp **** 
 663:../../MMI/Resource/WriteProcess.cpp ****         {
 664:../../MMI/Resource/WriteProcess.cpp ****             U32 i;
 665:../../MMI/Resource/WriteProcess.cpp **** 
 666:../../MMI/Resource/WriteProcess.cpp ****             for (i = 0; i < g_resimg_count; i++)
 3980              	LM123:
 3981              	LBB21:
 3982 0c8d C745E400 		movl	$0, -28(%ebp)
 3982      000000
 3983              	L55:
 3984 0c94 8B45E4   		movl	-28(%ebp), %eax
 3985 0c97 3B050000 		cmpl	_g_resimg_count, %eax
 3985      0000
 3986 0c9d 7202     		jb	L58
 3987 0c9f EB7E     		jmp	L56
 3988              	L58:
 667:../../MMI/Resource/WriteProcess.cpp ****             {
 668:../../MMI/Resource/WriteProcess.cpp ****                 if (strcmp(data.m_filename.c_str(), g_resimg_table[i].filename) == 0)
 3990              	LM124:
 3991 0ca1 8B4508   		movl	8(%ebp), %eax
 3992 0ca4 83C004   		addl	$4, %eax
 3993 0ca7 890424   		movl	%eax, (%esp)
 3994 0caa E8000000 		call	__ZNKSs5c_strEv
 3994      00
 3995 0caf 89C1     		movl	%eax, %ecx
 3996 0cb1 8B55E4   		movl	-28(%ebp), %edx
 3997 0cb4 89D0     		movl	%edx, %eax
 3998 0cb6 C1E008   		sall	$8, %eax
 3999 0cb9 01D0     		addl	%edx, %eax
 4000 0cbb C1E002   		sall	$2, %eax
 4001 0cbe 05000000 		addl	$_g_resimg_table, %eax
 4001      00
 4002 0cc3 89442404 		movl	%eax, 4(%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 35


 4003 0cc7 890C24   		movl	%ecx, (%esp)
 4004 0cca E8000000 		call	_strcmp
 4004      00
 4005 0ccf 85C0     		testl	%eax, %eax
 4006 0cd1 7542     		jne	L57
 669:../../MMI/Resource/WriteProcess.cpp ****                 {
 670:../../MMI/Resource/WriteProcess.cpp ****                     data.m_processData.res_size = g_resimg_table[i].size;
 4008              	LM125:
 4009 0cd3 8B4D08   		movl	8(%ebp), %ecx
 4010 0cd6 8B55E4   		movl	-28(%ebp), %edx
 4011 0cd9 89D0     		movl	%edx, %eax
 4012 0cdb C1E008   		sall	$8, %eax
 4013 0cde 01D0     		addl	%edx, %eax
 4014 0ce0 C1E002   		sall	$2, %eax
 4015 0ce3 8B800004 		movl	_g_resimg_table+1024(%eax), %eax
 4015      0000
 4016 0ce9 89811402 		movl	%eax, 532(%ecx)
 4016      0000
 671:../../MMI/Resource/WriteProcess.cpp ****                     strcpy(data.m_processData.real_filename, g_resimg_table[i].real_filename);
 4018              	LM126:
 4019 0cef 8B55E4   		movl	-28(%ebp), %edx
 4020 0cf2 89D0     		movl	%edx, %eax
 4021 0cf4 C1E008   		sall	$8, %eax
 4022 0cf7 01D0     		addl	%edx, %eax
 4023 0cf9 C1E002   		sall	$2, %eax
 4024 0cfc 05000200 		addl	$_g_resimg_table+512, %eax
 4024      00
 4025 0d01 89442404 		movl	%eax, 4(%esp)
 4026 0d05 8B4508   		movl	8(%ebp), %eax
 4027 0d08 83C014   		addl	$20, %eax
 4028 0d0b 890424   		movl	%eax, (%esp)
 4029 0d0e E8000000 		call	_strcpy
 4029      00
 672:../../MMI/Resource/WriteProcess.cpp ****                     break;
 4031              	LM127:
 4032 0d13 EB0A     		jmp	L56
 4034              	LM128:
 4035              	L57:
 4036 0d15 8D45E4   		leal	-28(%ebp), %eax
 4037 0d18 FF00     		incl	(%eax)
 4038 0d1a E975FFFF 		jmp	L55
 4038      FF
 4039              	L56:
 673:../../MMI/Resource/WriteProcess.cpp ****                 }
 674:../../MMI/Resource/WriteProcess.cpp ****             }
 675:../../MMI/Resource/WriteProcess.cpp ****         }
 676:../../MMI/Resource/WriteProcess.cpp ****         RESPRTONERECORD_IMG_EXT(fpImageResourceUsage, fpImageResourceUsageExt, data.m_nImgId, data.
 4041              	LM129:
 4042              	LBE21:
 4043              	LBB22:
 4044              	LBB23:
 4045              	LBB24:
 4046 0d1f 833D0000 		cmpl	$0, _fpImageResourceUsage
 4046      000000
 4047 0d26 0F84FE00 		je	L61
 4047      0000
 4048 0d2c 8B4508   		movl	8(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 36


 4049              	LBB25:
 4050 0d2f 83C008   		addl	$8, %eax
 4051 0d32 890424   		movl	%eax, (%esp)
 4052 0d35 E8000000 		call	__ZNKSs5c_strEv
 4052      00
 4053 0d3a 89442404 		movl	%eax, 4(%esp)
 4054 0d3e 8B4508   		movl	8(%ebp), %eax
 4055 0d41 0FB700   		movzwl	(%eax), %eax
 4056 0d44 890424   		movl	%eax, (%esp)
 4057 0d47 E8000000 		call	_GetOffsetFromResourceBase
 4057      00
 4058 0d4c 8945E4   		movl	%eax, -28(%ebp)
 4059 0d4f 837DE4FF 		cmpl	$-1, -28(%ebp)
 4060 0d53 755C     		jne	L63
 4061 0d55 8B4508   		movl	8(%ebp), %eax
 4062 0d58 83C008   		addl	$8, %eax
 4063 0d5b 890424   		movl	%eax, (%esp)
 4064 0d5e E8000000 		call	__ZNKSs5c_strEv
 4064      00
 4065 0d63 89C2     		movl	%eax, %edx
 4066 0d65 8B4508   		movl	8(%ebp), %eax
 4067 0d68 83C014   		addl	$20, %eax
 4068 0d6b 8944241C 		movl	%eax, 28(%esp)
 4069 0d6f 8B4508   		movl	8(%ebp), %eax
 4070 0d72 8B801402 		movl	532(%eax), %eax
 4070      0000
 4071 0d78 89442418 		movl	%eax, 24(%esp)
 4072 0d7c 89542414 		movl	%edx, 20(%esp)
 4073 0d80 8B4508   		movl	8(%ebp), %eax
 4074 0d83 0FB700   		movzwl	(%eax), %eax
 4075 0d86 89442410 		movl	%eax, 16(%esp)
 4076 0d8a C744240C 		movl	$-1, 12(%esp)
 4076      FFFFFFFF 
 4077 0d92 C7442408 		movl	$LC15, 8(%esp)
 4077      060B0000 
 4078 0d9a C7442404 		movl	$LC16, 4(%esp)
 4078      0D0B0000 
 4079 0da2 A1000000 		movl	_fpImageResourceUsage, %eax
 4079      00
 4080 0da7 890424   		movl	%eax, (%esp)
 4081 0daa E8000000 		call	_fprintf
 4081      00
 4082 0daf EB79     		jmp	L61
 4083              	L63:
 4084 0db1 8B4508   		movl	8(%ebp), %eax
 4085 0db4 83C008   		addl	$8, %eax
 4086 0db7 890424   		movl	%eax, (%esp)
 4087 0dba E8000000 		call	__ZNKSs5c_strEv
 4087      00
 4088 0dbf 89C2     		movl	%eax, %edx
 4089 0dc1 8B4508   		movl	8(%ebp), %eax
 4090 0dc4 83C014   		addl	$20, %eax
 4091 0dc7 8944241C 		movl	%eax, 28(%esp)
 4092 0dcb 8B4508   		movl	8(%ebp), %eax
 4093 0dce 8B801402 		movl	532(%eax), %eax
 4093      0000
 4094 0dd4 89442418 		movl	%eax, 24(%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 37


 4095 0dd8 89542414 		movl	%edx, 20(%esp)
 4096 0ddc 8B4508   		movl	8(%ebp), %eax
 4097 0ddf 0FB700   		movzwl	(%eax), %eax
 4098 0de2 89442410 		movl	%eax, 16(%esp)
 4099 0de6 8B55E4   		movl	-28(%ebp), %edx
 4100 0de9 89D0     		movl	%edx, %eax
 4101 0deb C1E006   		sall	$6, %eax
 4102 0dee 01D0     		addl	%edx, %eax
 4103 0df0 C1E003   		sall	$3, %eax
 4104 0df3 0FB78004 		movzwl	_g_mmi_resource_base_table+4(%eax), %eax
 4104      000000
 4105 0dfa 8944240C 		movl	%eax, 12(%esp)
 4106 0dfe 8B55E4   		movl	-28(%ebp), %edx
 4107 0e01 89D0     		movl	%edx, %eax
 4108 0e03 C1E006   		sall	$6, %eax
 4109 0e06 01D0     		addl	%edx, %eax
 4110 0e08 C1E003   		sall	$3, %eax
 4111 0e0b 8B800000 		movl	_g_mmi_resource_base_table(%eax), %eax
 4111      0000
 4112 0e11 89442408 		movl	%eax, 8(%esp)
 4113 0e15 C7442404 		movl	$LC16, 4(%esp)
 4113      0D0B0000 
 4114 0e1d A1000000 		movl	_fpImageResourceUsage, %eax
 4114      00
 4115 0e22 890424   		movl	%eax, (%esp)
 4116 0e25 E8000000 		call	_fprintf
 4116      00
 4117              	L61:
 4118              	LBE25:
 4119              	LBE24:
 4120              	LBE23:
 4121 0e2a 8B4508   		movl	8(%ebp), %eax
 4122 0e2d 8B801402 		movl	532(%eax), %eax
 4122      0000
 4123 0e33 89442410 		movl	%eax, 16(%esp)
 4124 0e37 8B4508   		movl	8(%ebp), %eax
 4125 0e3a 8B802C02 		movl	556(%eax), %eax
 4125      0000
 4126 0e40 8944240C 		movl	%eax, 12(%esp)
 4127 0e44 8B4508   		movl	8(%ebp), %eax
 4128 0e47 83C014   		addl	$20, %eax
 4129 0e4a 89442408 		movl	%eax, 8(%esp)
 4130 0e4e C7442404 		movl	$LC17, 4(%esp)
 4130      230B0000 
 4131 0e56 A1000000 		movl	_fpImageResourceUsageExt, %eax
 4131      00
 4132 0e5b 890424   		movl	%eax, (%esp)
 4133 0e5e E8000000 		call	_fprintf
 4133      00
 4134              	LBE22:
 4135              	LBE20:
 4136 0e63 E9190200 		jmp	L43
 4136      00
 4137              	L49:
 677:../../MMI/Resource/WriteProcess.cpp ****     }
 678:../../MMI/Resource/WriteProcess.cpp ****     else
 679:../../MMI/Resource/WriteProcess.cpp ****     {
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 38


 680:../../MMI/Resource/WriteProcess.cpp ****         strcpy(pImageNameList[*pCurrMaxImageNum].filename, data.m_filename.c_str());
 4139              	LM130:
 4140 0e68 8B4508   		movl	8(%ebp), %eax
 4141              	LBB26:
 4142 0e6b 83C004   		addl	$4, %eax
 4143 0e6e 890424   		movl	%eax, (%esp)
 4144 0e71 E8000000 		call	__ZNKSs5c_strEv
 4144      00
 4145 0e76 89442404 		movl	%eax, 4(%esp)
 4146 0e7a 8B45FC   		movl	-4(%ebp), %eax
 4147 0e7d 0FB700   		movzwl	(%eax), %eax
 4148 0e80 C1E009   		sall	$9, %eax
 4149 0e83 0345F4   		addl	-12(%ebp), %eax
 4150 0e86 890424   		movl	%eax, (%esp)
 4151 0e89 E8000000 		call	_strcpy
 4151      00
 681:../../MMI/Resource/WriteProcess.cpp ****         pImageIdMap[data.m_nImgId].nImageNum = *pCurrMaxImageNum;
 4153              	LM131:
 4154 0e8e 8B4508   		movl	8(%ebp), %eax
 4155 0e91 0FB700   		movzwl	(%eax), %eax
 4156 0e94 8D0C00   		leal	(%eax,%eax), %ecx
 4157 0e97 8B55F8   		movl	-8(%ebp), %edx
 4158 0e9a 8B45FC   		movl	-4(%ebp), %eax
 4159 0e9d 0FB700   		movzwl	(%eax), %eax
 4160 0ea0 6689040A 		movw	%ax, (%edx,%ecx)
 682:../../MMI/Resource/WriteProcess.cpp ****         (*pCurrMaxImageNum)++;
 4162              	LM132:
 4163 0ea4 8B55FC   		movl	-4(%ebp), %edx
 4164 0ea7 8B45FC   		movl	-4(%ebp), %eax
 4165 0eaa 0FB700   		movzwl	(%eax), %eax
 4166 0ead 40       		incl	%eax
 4167 0eae 668902   		movw	%ax, (%edx)
 683:../../MMI/Resource/WriteProcess.cpp ****         (*pCurrMaxImageId)++;
 4169              	LM133:
 4170 0eb1 8B55F0   		movl	-16(%ebp), %edx
 4171 0eb4 8B45F0   		movl	-16(%ebp), %eax
 4172 0eb7 0FB700   		movzwl	(%eax), %eax
 4173 0eba 40       		incl	%eax
 4174 0ebb 668902   		movw	%ax, (%edx)
 684:../../MMI/Resource/WriteProcess.cpp **** 
 685:../../MMI/Resource/WriteProcess.cpp ****         g_resimg_table[g_resimg_count].size = data.m_processData.res_size;
 4176              	LM134:
 4177 0ebe 8B150000 		movl	_g_resimg_count, %edx
 4177      0000
 4178 0ec4 89D0     		movl	%edx, %eax
 4179 0ec6 C1E008   		sall	$8, %eax
 4180 0ec9 01D0     		addl	%edx, %eax
 4181 0ecb 8D148500 		leal	0(,%eax,4), %edx
 4181      000000
 4182 0ed2 8B4508   		movl	8(%ebp), %eax
 4183 0ed5 8B801402 		movl	532(%eax), %eax
 4183      0000
 4184 0edb 89820004 		movl	%eax, _g_resimg_table+1024(%edx)
 4184      0000
 686:../../MMI/Resource/WriteProcess.cpp ****         strcpy(g_resimg_table[g_resimg_count].filename, data.m_filename.c_str());
 4186              	LM135:
 4187 0ee1 8B4508   		movl	8(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 39


 4188 0ee4 83C004   		addl	$4, %eax
 4189 0ee7 890424   		movl	%eax, (%esp)
 4190 0eea E8000000 		call	__ZNKSs5c_strEv
 4190      00
 4191 0eef 89442404 		movl	%eax, 4(%esp)
 4192 0ef3 8B150000 		movl	_g_resimg_count, %edx
 4192      0000
 4193 0ef9 89D0     		movl	%edx, %eax
 4194 0efb C1E008   		sall	$8, %eax
 4195 0efe 01D0     		addl	%edx, %eax
 4196 0f00 C1E002   		sall	$2, %eax
 4197 0f03 05000000 		addl	$_g_resimg_table, %eax
 4197      00
 4198 0f08 890424   		movl	%eax, (%esp)
 4199 0f0b E8000000 		call	_strcpy
 4199      00
 687:../../MMI/Resource/WriteProcess.cpp ****         strcpy(g_resimg_table[g_resimg_count].real_filename, data.m_processData.real_filename);
 4201              	LM136:
 4202 0f10 8B4508   		movl	8(%ebp), %eax
 4203 0f13 83C014   		addl	$20, %eax
 4204 0f16 89442404 		movl	%eax, 4(%esp)
 4205 0f1a 8B150000 		movl	_g_resimg_count, %edx
 4205      0000
 4206 0f20 89D0     		movl	%edx, %eax
 4207 0f22 C1E008   		sall	$8, %eax
 4208 0f25 01D0     		addl	%edx, %eax
 4209 0f27 C1E002   		sall	$2, %eax
 4210 0f2a 05000200 		addl	$_g_resimg_table+512, %eax
 4210      00
 4211 0f2f 890424   		movl	%eax, (%esp)
 4212 0f32 E8000000 		call	_strcpy
 4212      00
 688:../../MMI/Resource/WriteProcess.cpp ****         g_resimg_count ++;
 4214              	LM137:
 4215 0f37 FF050000 		incl	_g_resimg_count
 4215      0000
 689:../../MMI/Resource/WriteProcess.cpp ****         RESPRTONERECORD_IMG_EXT(fpImageResourceUsage, fpImageResourceUsageExt, data.m_nImgId, data.
 4217              	LM138:
 4218              	LBB27:
 4219              	LBB28:
 4220              	LBB29:
 4221 0f3d 833D0000 		cmpl	$0, _fpImageResourceUsage
 4221      000000
 4222 0f44 0F84FE00 		je	L70
 4222      0000
 4223 0f4a 8B4508   		movl	8(%ebp), %eax
 4224              	LBB30:
 4225 0f4d 83C008   		addl	$8, %eax
 4226 0f50 890424   		movl	%eax, (%esp)
 4227 0f53 E8000000 		call	__ZNKSs5c_strEv
 4227      00
 4228 0f58 89442404 		movl	%eax, 4(%esp)
 4229 0f5c 8B4508   		movl	8(%ebp), %eax
 4230 0f5f 0FB700   		movzwl	(%eax), %eax
 4231 0f62 890424   		movl	%eax, (%esp)
 4232 0f65 E8000000 		call	_GetOffsetFromResourceBase
 4232      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 40


 4233 0f6a 8945E4   		movl	%eax, -28(%ebp)
 4234 0f6d 837DE4FF 		cmpl	$-1, -28(%ebp)
 4235 0f71 755C     		jne	L72
 4236 0f73 8B4508   		movl	8(%ebp), %eax
 4237 0f76 83C008   		addl	$8, %eax
 4238 0f79 890424   		movl	%eax, (%esp)
 4239 0f7c E8000000 		call	__ZNKSs5c_strEv
 4239      00
 4240 0f81 89C2     		movl	%eax, %edx
 4241 0f83 8B4508   		movl	8(%ebp), %eax
 4242 0f86 83C014   		addl	$20, %eax
 4243 0f89 8944241C 		movl	%eax, 28(%esp)
 4244 0f8d 8B4508   		movl	8(%ebp), %eax
 4245 0f90 8B801402 		movl	532(%eax), %eax
 4245      0000
 4246 0f96 89442418 		movl	%eax, 24(%esp)
 4247 0f9a 89542414 		movl	%edx, 20(%esp)
 4248 0f9e 8B4508   		movl	8(%ebp), %eax
 4249 0fa1 0FB700   		movzwl	(%eax), %eax
 4250 0fa4 89442410 		movl	%eax, 16(%esp)
 4251 0fa8 C744240C 		movl	$-1, 12(%esp)
 4251      FFFFFFFF 
 4252 0fb0 C7442408 		movl	$LC15, 8(%esp)
 4252      060B0000 
 4253 0fb8 C7442404 		movl	$LC16, 4(%esp)
 4253      0D0B0000 
 4254 0fc0 A1000000 		movl	_fpImageResourceUsage, %eax
 4254      00
 4255 0fc5 890424   		movl	%eax, (%esp)
 4256 0fc8 E8000000 		call	_fprintf
 4256      00
 4257 0fcd EB79     		jmp	L70
 4258              	L72:
 4259 0fcf 8B4508   		movl	8(%ebp), %eax
 4260 0fd2 83C008   		addl	$8, %eax
 4261 0fd5 890424   		movl	%eax, (%esp)
 4262 0fd8 E8000000 		call	__ZNKSs5c_strEv
 4262      00
 4263 0fdd 89C2     		movl	%eax, %edx
 4264 0fdf 8B4508   		movl	8(%ebp), %eax
 4265 0fe2 83C014   		addl	$20, %eax
 4266 0fe5 8944241C 		movl	%eax, 28(%esp)
 4267 0fe9 8B4508   		movl	8(%ebp), %eax
 4268 0fec 8B801402 		movl	532(%eax), %eax
 4268      0000
 4269 0ff2 89442418 		movl	%eax, 24(%esp)
 4270 0ff6 89542414 		movl	%edx, 20(%esp)
 4271 0ffa 8B4508   		movl	8(%ebp), %eax
 4272 0ffd 0FB700   		movzwl	(%eax), %eax
 4273 1000 89442410 		movl	%eax, 16(%esp)
 4274 1004 8B55E4   		movl	-28(%ebp), %edx
 4275 1007 89D0     		movl	%edx, %eax
 4276 1009 C1E006   		sall	$6, %eax
 4277 100c 01D0     		addl	%edx, %eax
 4278 100e C1E003   		sall	$3, %eax
 4279 1011 0FB78004 		movzwl	_g_mmi_resource_base_table+4(%eax), %eax
 4279      000000
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 41


 4280 1018 8944240C 		movl	%eax, 12(%esp)
 4281 101c 8B55E4   		movl	-28(%ebp), %edx
 4282 101f 89D0     		movl	%edx, %eax
 4283 1021 C1E006   		sall	$6, %eax
 4284 1024 01D0     		addl	%edx, %eax
 4285 1026 C1E003   		sall	$3, %eax
 4286 1029 8B800000 		movl	_g_mmi_resource_base_table(%eax), %eax
 4286      0000
 4287 102f 89442408 		movl	%eax, 8(%esp)
 4288 1033 C7442404 		movl	$LC16, 4(%esp)
 4288      0D0B0000 
 4289 103b A1000000 		movl	_fpImageResourceUsage, %eax
 4289      00
 4290 1040 890424   		movl	%eax, (%esp)
 4291 1043 E8000000 		call	_fprintf
 4291      00
 4292              	L70:
 4293              	LBE30:
 4294              	LBE29:
 4295              	LBE28:
 4296 1048 8B4508   		movl	8(%ebp), %eax
 4297 104b 8B801402 		movl	532(%eax), %eax
 4297      0000
 4298 1051 89442410 		movl	%eax, 16(%esp)
 4299 1055 8B4508   		movl	8(%ebp), %eax
 4300 1058 8B802C02 		movl	556(%eax), %eax
 4300      0000
 4301 105e 8944240C 		movl	%eax, 12(%esp)
 4302 1062 8B4508   		movl	8(%ebp), %eax
 4303 1065 83C014   		addl	$20, %eax
 4304 1068 89442408 		movl	%eax, 8(%esp)
 4305 106c C7442404 		movl	$LC17, 4(%esp)
 4305      230B0000 
 4306 1074 A1000000 		movl	_fpImageResourceUsageExt, %eax
 4306      00
 4307 1079 890424   		movl	%eax, (%esp)
 4308 107c E8000000 		call	_fprintf
 4308      00
 690:../../MMI/Resource/WriteProcess.cpp ****     }
 691:../../MMI/Resource/WriteProcess.cpp **** }
 4310              	LM139:
 4311              	L43:
 4312 1081 C9       		leave
 4313 1082 C3       		ret
 4314              	LBE27:
 4315              	LBE26:
 4316              	LBE19:
 4317              	LBE18:
 4318              	LBE17:
 4319              	LBE16:
 4339              	Lscope10:
 4341 1083 90       		.align 2
 4344              	__Z18getMaxThreadNumberv:
 692:../../MMI/Resource/WriteProcess.cpp **** 
 693:../../MMI/Resource/WriteProcess.cpp **** class ConvertRequest : public ThreadPool::IRunObject
 694:../../MMI/Resource/WriteProcess.cpp **** {
 695:../../MMI/Resource/WriteProcess.cpp **** public:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 42


 696:../../MMI/Resource/WriteProcess.cpp ****     ConvertRequest(ProcessImageData & data) : m_data(data)
 697:../../MMI/Resource/WriteProcess.cpp ****     {
 698:../../MMI/Resource/WriteProcess.cpp ****     }
 699:../../MMI/Resource/WriteProcess.cpp **** 
 700:../../MMI/Resource/WriteProcess.cpp ****     void Run()
 701:../../MMI/Resource/WriteProcess.cpp ****     {
 702:../../MMI/Resource/WriteProcess.cpp ****         SetImageWithBufferExImp(m_data.m_nImgId, (S8*)m_data.m_filename.c_str(),
 703:../../MMI/Resource/WriteProcess.cpp ****             (S8*)m_data.m_enum_value.c_str(), m_data.m_imgFlag,
 704:../../MMI/Resource/WriteProcess.cpp ****             m_data.m_force_type, &m_data.m_processData);
 705:../../MMI/Resource/WriteProcess.cpp ****         delete this;
 706:../../MMI/Resource/WriteProcess.cpp ****     }
 707:../../MMI/Resource/WriteProcess.cpp **** 
 708:../../MMI/Resource/WriteProcess.cpp ****     bool AutoDelete()
 709:../../MMI/Resource/WriteProcess.cpp ****     {
 710:../../MMI/Resource/WriteProcess.cpp ****         return false;
 711:../../MMI/Resource/WriteProcess.cpp ****     }
 712:../../MMI/Resource/WriteProcess.cpp **** 
 713:../../MMI/Resource/WriteProcess.cpp **** private:
 714:../../MMI/Resource/WriteProcess.cpp ****     ProcessImageData & m_data;
 715:../../MMI/Resource/WriteProcess.cpp **** };
 716:../../MMI/Resource/WriteProcess.cpp **** 
 717:../../MMI/Resource/WriteProcess.cpp **** static DWORD getMaxThreadNumber(){
 4346              	LM140:
 4347 1084 55       		pushl	%ebp
 4348 1085 89E5     		movl	%esp, %ebp
 4349 1087 83EC58   		subl	$88, %esp
 718:../../MMI/Resource/WriteProcess.cpp ****     DWORD threadCount = 1;
 4351              	LM141:
 4352              	LBB31:
 4353 108a C745F401 		movl	$1, -12(%ebp)
 4353      000000
 719:../../MMI/Resource/WriteProcess.cpp ****     DWORD maxThreadCount = 1;
 4355              	LM142:
 4356 1091 C745F001 		movl	$1, -16(%ebp)
 4356      000000
 720:../../MMI/Resource/WriteProcess.cpp ****     // Set max numebr of concurrent threads in image processing thread pool
 721:../../MMI/Resource/WriteProcess.cpp ****     SYSTEM_INFO sysinfo;
 722:../../MMI/Resource/WriteProcess.cpp ****     GetSystemInfo( &sysinfo );
 4358              	LM143:
 4359 1098 8D45B8   		leal	-72(%ebp), %eax
 4360 109b 890424   		movl	%eax, (%esp)
 4361 109e E8000000 		call	_GetSystemInfo@4
 4361      00
 4362 10a3 83EC04   		subl	$4, %esp
 723:../../MMI/Resource/WriteProcess.cpp ****     maxThreadCount = resconfig_adaptor_get_max_thread_numebr();
 4364              	LM144:
 4365 10a6 E8000000 		call	_resconfig_adaptor_get_max_thread_numebr
 4365      00
 4366 10ab 8945F0   		movl	%eax, -16(%ebp)
 724:../../MMI/Resource/WriteProcess.cpp ****     if(sysinfo.dwNumberOfProcessors * 2 > maxThreadCount)
 4368              	LM145:
 4369 10ae 8B45CC   		movl	-52(%ebp), %eax
 4370 10b1 01C0     		addl	%eax, %eax
 4371 10b3 3B45F0   		cmpl	-16(%ebp), %eax
 4372 10b6 7608     		jbe	L78
 725:../../MMI/Resource/WriteProcess.cpp ****     {
 726:../../MMI/Resource/WriteProcess.cpp ****         threadCount = maxThreadCount;
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 43


 4374              	LM146:
 4375 10b8 8B45F0   		movl	-16(%ebp), %eax
 4376 10bb 8945F4   		movl	%eax, -12(%ebp)
 4377 10be EB08     		jmp	L79
 4378              	L78:
 727:../../MMI/Resource/WriteProcess.cpp ****     }
 728:../../MMI/Resource/WriteProcess.cpp ****     else
 729:../../MMI/Resource/WriteProcess.cpp ****     {
 730:../../MMI/Resource/WriteProcess.cpp ****         threadCount = sysinfo.dwNumberOfProcessors * 2;;
 4380              	LM147:
 4381 10c0 8B45CC   		movl	-52(%ebp), %eax
 4382 10c3 01C0     		addl	%eax, %eax
 4383 10c5 8945F4   		movl	%eax, -12(%ebp)
 4384              	L79:
 731:../../MMI/Resource/WriteProcess.cpp ****     }
 732:../../MMI/Resource/WriteProcess.cpp **** 
 733:../../MMI/Resource/WriteProcess.cpp **** #ifdef __MMI_RESOURCE_ENFB_SUPPORT__
 734:../../MMI/Resource/WriteProcess.cpp ****     threadCount = 1;
 735:../../MMI/Resource/WriteProcess.cpp **** #endif
 736:../../MMI/Resource/WriteProcess.cpp **** 
 737:../../MMI/Resource/WriteProcess.cpp ****     return threadCount;
 4386              	LM148:
 4387 10c8 8B45F4   		movl	-12(%ebp), %eax
 738:../../MMI/Resource/WriteProcess.cpp **** }
 4389              	LM149:
 4390 10cb C9       		leave
 4391 10cc C3       		ret
 4392              	LBE31:
 4398              	Lscope11:
 4400 10cd 90909090 		.align 32
 4400      90909090 
 4400      90909090 
 4400      90909090 
 4400      909090
 4401              	LC18:
 4402 10e0 43726561 		.ascii "Creating Thread pool, threadCount = %d\0"
 4402      74696E67 
 4402      20546872 
 4402      65616420 
 4402      706F6F6C 
 4403 1107 90909090 		.align 32
 4403      90909090 
 4403      90909090 
 4403      90909090 
 4403      90909090 
 4404              	LC19:
 4405 1120 54687265 		.ascii "Thread pool is created successfully\0"
 4405      61642070 
 4405      6F6F6C20 
 4405      69732063 
 4405      72656174 
 4406 1144 90909090 		.align 32
 4406      90909090 
 4406      90909090 
 4406      90909090 
 4406      90909090 
 4407              	LC20:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 44


 4408 1160 6D746B5F 		.ascii "mtk_resgenerator.exe Wait for threads timed out\0"
 4408      72657367 
 4408      656E6572 
 4408      61746F72 
 4408      2E657865 
 4409 1190 90909090 		.align 32
 4409      90909090 
 4409      90909090 
 4409      90909090 
 4410              	LC21:
 4411 11a0 2E2E5C2E 		.ascii "..\\..\\Customer\\CustResource\\CustImgDataHW.h\0"
 4411      2E5C4375 
 4411      73746F6D 
 4411      65725C43 
 4411      75737452 
 4412 11cc 90909090 		.align 32
 4412      90909090 
 4412      90909090 
 4412      90909090 
 4412      90909090 
 4413              	LC22:
 4414 11e0 2E2E5C2E 		.ascii "..\\..\\Customer\\CustResource\\CustImgDataHWExt.h\0"
 4414      2E5C4375 
 4414      73746F6D 
 4414      65725C43 
 4414      75737452 
 4415              	LC23:
 4416 120f 50726F63 		.ascii "Process IMG %d(%s), file: %s\0"
 4416      65737320 
 4416      494D4720 
 4416      25642825 
 4416      73292C20 
 4417              	LC24:
 4418 122c 50726F63 		.ascii "Process IMG %d, file: %s\0"
 4418      65737320 
 4418      494D4720 
 4418      25642C20 
 4418      66696C65 
 4419              	LC25:
 4420 1245 4475706C 		.ascii "Duplicated Image: ID = %d.\0"
 4420      69636174 
 4420      65642049 
 4420      6D616765 
 4420      3A204944 
 4421              		.align 32
 4422              	LC26:
 4423 1260 2E2E5C2E 		.ascii "..\\..\\Customer\\CustResource\\CustImgDataMeta.txt\0"
 4423      2E5C4375 
 4423      73746F6D 
 4423      65725C43 
 4423      75737452 
 4424 1290 90909090 		.align 32
 4424      90909090 
 4424      90909090 
 4424      90909090 
 4425              	LC27:
 4426 12a0 4F757470 		.ascii "Output Image Group Content Meta: %s\0"
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 45


 4426      75742049 
 4426      6D616765 
 4426      2047726F 
 4426      75702043 
 4427              	LC28:
 4428 12c4 436C6F73 		.ascii "Close FILE: %s\0"
 4428      65204649 
 4428      4C453A20 
 4428      257300
 4429              	LC29:
 4430 12d3 436C6561 		.ascii "Clean g_resgen_png_image_list\0"
 4430      6E20675F 
 4430      72657367 
 4430      656E5F70 
 4430      6E675F69 
 4431 12f1 90       		.align 2
 4433              	.globl _ProcessResgenPngImages
 4435              	_ProcessResgenPngImages:
 739:../../MMI/Resource/WriteProcess.cpp **** 
 740:../../MMI/Resource/WriteProcess.cpp **** void ProcessResgenPngImages()
 741:../../MMI/Resource/WriteProcess.cpp **** {
 4437              	LM150:
 4438 12f2 55       		pushl	%ebp
 4439 12f3 89E5     		movl	%esp, %ebp
 4440 12f5 57       		pushl	%edi
 4441 12f6 56       		pushl	%esi
 4442 12f7 53       		pushl	%ebx
 4443 12f8 81ECDC00 		subl	$220, %esp
 4443      0000
 4444 12fe C7459400 		movl	$___gxx_personality_sj0, -108(%ebp)
 4444      000000
 4445 1305 C745980C 		movl	$LLSDA2207, -104(%ebp)
 4445      000000
 4446 130c 8D459C   		leal	-100(%ebp), %eax
 4447 130f 8D55E8   		leal	-24(%ebp), %edx
 4448 1312 8910     		movl	%edx, (%eax)
 4449 1314 BA6C1500 		movl	$L137, %edx
 4449      00
 4450 1319 895004   		movl	%edx, 4(%eax)
 4451 131c 896008   		movl	%esp, 8(%eax)
 4452 131f 8D857CFF 		leal	-132(%ebp), %eax
 4452      FFFF
 4453 1325 890424   		movl	%eax, (%esp)
 4454 1328 E8000000 		call	__Unwind_SjLj_Register
 4454      00
 742:../../MMI/Resource/WriteProcess.cpp ****     //Max numebr of concurrent threads in image processing thread pool
 743:../../MMI/Resource/WriteProcess.cpp ****     DWORD threadCount = getMaxThreadNumber();
 4456              	LM151:
 4457 132d C74580FF 		movl	$-1, -128(%ebp)
 4457      FFFFFF
 4458              	LBB32:
 4459 1334 E84BFDFF 		call	__Z18getMaxThreadNumberv
 4459      FF
 4460 1339 8945E4   		movl	%eax, -28(%ebp)
 744:../../MMI/Resource/WriteProcess.cpp **** 
 745:../../MMI/Resource/WriteProcess.cpp **** 	ImageGroupContentMetaCreator * contentMetacreator = new ImageGroupContentMetaCreator();
 4462              	LM152:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 46


 4463 133c C7042418 		movl	$24, (%esp)
 4463      000000
 4464 1343 E8000000 		call	__Znwj
 4464      00
 4465 1348 898578FF 		movl	%eax, -136(%ebp)
 4465      FFFF
 4466 134e C68577FF 		movb	$1, -137(%ebp)
 4466      FFFF01
 4467 1355 8B8578FF 		movl	-136(%ebp), %eax
 4467      FFFF
 4468 135b 890424   		movl	%eax, (%esp)
 4469 135e C7458003 		movl	$3, -128(%ebp)
 4469      000000
 4470 1365 E8000000 		call	__ZN28ImageGroupContentMetaCreatorC1Ev
 4470      00
 4471 136a C68577FF 		movb	$0, -137(%ebp)
 4471      FFFF00
 4472 1371 8B9578FF 		movl	-136(%ebp), %edx
 4472      FFFF
 4473 1377 8955E0   		movl	%edx, -32(%ebp)
 4474 137a EB44     		jmp	L82
 4475              	L81:
 4476 137c 8B856CFF 		movl	-148(%ebp), %eax
 4476      FFFF
 4477 1382 898570FF 		movl	%eax, -144(%ebp)
 4477      FFFF
 4478 1388 80BD77FF 		cmpb	$0, -137(%ebp)
 4478      FFFF00
 4479 138f 740E     		je	L84
 4480 1391 8B9578FF 		movl	-136(%ebp), %edx
 4480      FFFF
 4481 1397 891424   		movl	%edx, (%esp)
 4482 139a E8000000 		call	__ZdlPv
 4482      00
 4483              	L84:
 4484 139f 8B8570FF 		movl	-144(%ebp), %eax
 4484      FFFF
 4485 13a5 89856CFF 		movl	%eax, -148(%ebp)
 4485      FFFF
 4486              	L85:
 4487 13ab 8B956CFF 		movl	-148(%ebp), %edx
 4487      FFFF
 4488 13b1 891424   		movl	%edx, (%esp)
 4489 13b4 C74580FF 		movl	$-1, -128(%ebp)
 4489      FFFFFF
 4490 13bb E8000000 		call	__Unwind_SjLj_Resume
 4490      00
 4491              	L82:
 746:../../MMI/Resource/WriteProcess.cpp ****     // process binary data
 747:../../MMI/Resource/WriteProcess.cpp ****     ProcessBinaryData();
 4493              	LM153:
 4494 13c0 C74580FF 		movl	$-1, -128(%ebp)
 4494      FFFFFF
 4495 13c7 E8900D00 		call	__Z17ProcessBinaryDatav
 4495      00
 748:../../MMI/Resource/WriteProcess.cpp **** 
 749:../../MMI/Resource/WriteProcess.cpp ****     // execute_ext_command("echo resgen_time before Iloads %time%");
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 47


 750:../../MMI/Resource/WriteProcess.cpp **** 
 751:../../MMI/Resource/WriteProcess.cpp ****     // Create thread pool
 752:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("Creating Thread pool, threadCount = %d", threadCount);
 4497              	LM154:
 4498 13cc 8B45E4   		movl	-28(%ebp), %eax
 4499 13cf 8944240C 		movl	%eax, 12(%esp)
 4500 13d3 C7442408 		movl	$LC18, 8(%esp)
 4500      E0100000 
 4501 13db C7442404 		movl	$LC4, 4(%esp)
 4501      E4000000 
 4502 13e3 C7042401 		movl	$1, (%esp)
 4502      000000
 4503 13ea E8000000 		call	_reslog_adaptor_log
 4503      00
 753:../../MMI/Resource/WriteProcess.cpp ****     ThreadPool * myPool = new ThreadPool(threadCount);
 4505              	LM155:
 4506 13ef C7042434 		movl	$52, (%esp)
 4506      000000
 4507 13f6 E8000000 		call	__Znwj
 4507      00
 4508 13fb 898568FF 		movl	%eax, -152(%ebp)
 4508      FFFF
 4509 1401 C68567FF 		movb	$1, -153(%ebp)
 4509      FFFF01
 4510 1408 C7442408 		movl	$5000, 8(%esp)
 4510      88130000 
 4511 1410 8B45E4   		movl	-28(%ebp), %eax
 4512 1413 89442404 		movl	%eax, 4(%esp)
 4513 1417 8B8568FF 		movl	-152(%ebp), %eax
 4513      FFFF
 4514 141d 890424   		movl	%eax, (%esp)
 4515 1420 C7458002 		movl	$2, -128(%ebp)
 4515      000000
 4516 1427 E8000000 		call	__ZN10ThreadPoolC1Eii
 4516      00
 4517 142c C68567FF 		movb	$0, -153(%ebp)
 4517      FFFF00
 4518 1433 8B9568FF 		movl	-152(%ebp), %edx
 4518      FFFF
 4519 1439 8955DC   		movl	%edx, -36(%ebp)
 4520 143c EB44     		jmp	L88
 4521              	L87:
 4522 143e 8B856CFF 		movl	-148(%ebp), %eax
 4522      FFFF
 4523 1444 898560FF 		movl	%eax, -160(%ebp)
 4523      FFFF
 4524 144a 80BD67FF 		cmpb	$0, -153(%ebp)
 4524      FFFF00
 4525 1451 740E     		je	L90
 4526 1453 8B9568FF 		movl	-152(%ebp), %edx
 4526      FFFF
 4527 1459 891424   		movl	%edx, (%esp)
 4528 145c E8000000 		call	__ZdlPv
 4528      00
 4529              	L90:
 4530 1461 8B8560FF 		movl	-160(%ebp), %eax
 4530      FFFF
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 48


 4531 1467 89856CFF 		movl	%eax, -148(%ebp)
 4531      FFFF
 4532              	L91:
 4533 146d 8B956CFF 		movl	-148(%ebp), %edx
 4533      FFFF
 4534 1473 891424   		movl	%edx, (%esp)
 4535 1476 C74580FF 		movl	$-1, -128(%ebp)
 4535      FFFFFF
 4536 147d E8000000 		call	__Unwind_SjLj_Resume
 4536      00
 4537              	L88:
 754:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("Thread pool is created successfully");
 4539              	LM156:
 4540 1482 C7442408 		movl	$LC19, 8(%esp)
 4540      20110000 
 4541 148a C7442404 		movl	$LC4, 4(%esp)
 4541      E4000000 
 4542 1492 C7042401 		movl	$1, (%esp)
 4542      000000
 4543 1499 C74580FF 		movl	$-1, -128(%ebp)
 4543      FFFFFF
 4544 14a0 E8000000 		call	_reslog_adaptor_log
 4544      00
 755:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 4546              	LM157:
 4547 14a5 A1000000 		movl	__imp___iob, %eax
 4547      00
 4548 14aa 83C020   		addl	$32, %eax
 4549 14ad 890424   		movl	%eax, (%esp)
 4550 14b0 E8000000 		call	_fflush
 4550      00
 756:../../MMI/Resource/WriteProcess.cpp **** 
 757:../../MMI/Resource/WriteProcess.cpp ****     ProcessImageList::iterator i = g_resgen_png_image_list.begin();
 4552              	LM158:
 4553 14b5 8D45C8   		leal	-56(%ebp), %eax
 4554 14b8 C7442404 		movl	$_g_resgen_png_image_list, 4(%esp)
 4554      10000000 
 4555 14c0 890424   		movl	%eax, (%esp)
 4556 14c3 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv
 4556      00
 4557 14c8 83EC04   		subl	$4, %esp
 758:../../MMI/Resource/WriteProcess.cpp ****     for (; i != g_resgen_png_image_list.end(); ++i)
 4559              	LM159:
 4560              	L93:
 4561              	LBB33:
 4562 14cb 8D45B8   		leal	-72(%ebp), %eax
 4563 14ce C7442404 		movl	$_g_resgen_png_image_list, 4(%esp)
 4563      10000000 
 4564 14d6 890424   		movl	%eax, (%esp)
 4565 14d9 C74580FF 		movl	$-1, -128(%ebp)
 4565      FFFFFF
 4566 14e0 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE3endEv
 4566      00
 4567 14e5 83EC04   		subl	$4, %esp
 4568 14e8 8D45B8   		leal	-72(%ebp), %eax
 4569 14eb 89442404 		movl	%eax, 4(%esp)
 4570 14ef 8D45C8   		leal	-56(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 49


 4571 14f2 890424   		movl	%eax, (%esp)
 4572 14f5 E8000000 		call	__ZNKSt19_List_iterator_baseneERKS_
 4572      00
 4573 14fa 84C0     		testb	%al, %al
 4574 14fc 7505     		jne	L96
 4575 14fe E9F30000 		jmp	L94
 4575      00
 4576              	L96:
 759:../../MMI/Resource/WriteProcess.cpp ****     {
 760:../../MMI/Resource/WriteProcess.cpp ****         ProcessImageData & data = *i;
 4578              	LM160:
 4579              	LBB34:
 4580              	LBB35:
 4581 1503 8D45C8   		leal	-56(%ebp), %eax
 4582 1506 890424   		movl	%eax, (%esp)
 4583 1509 C74580FF 		movl	$-1, -128(%ebp)
 4583      FFFFFF
 4584 1510 E8000000 		call	__ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv
 4584      00
 4585 1515 8945B4   		movl	%eax, -76(%ebp)
 761:../../MMI/Resource/WriteProcess.cpp ****         myPool->Run(new ConvertRequest(data) );
 4587              	LM161:
 4588 1518 C7042408 		movl	$8, (%esp)
 4588      000000
 4589 151f E8000000 		call	__Znwj
 4589      00
 4590 1524 89855CFF 		movl	%eax, -164(%ebp)
 4590      FFFF
 4591 152a 8B45B4   		movl	-76(%ebp), %eax
 4592 152d 89442404 		movl	%eax, 4(%esp)
 4593 1531 8B855CFF 		movl	-164(%ebp), %eax
 4593      FFFF
 4594 1537 890424   		movl	%eax, (%esp)
 4595 153a E8000000 		call	__ZN14ConvertRequestC1ER16ProcessImageData
 4595      00
 4596 153f C6855BFF 		movb	$0, -165(%ebp)
 4596      FFFF00
 4597 1546 8B855CFF 		movl	-164(%ebp), %eax
 4597      FFFF
 4598 154c C7442408 		movl	$1, 8(%esp)
 4598      01000000 
 4599 1554 89442404 		movl	%eax, 4(%esp)
 4600 1558 8B45DC   		movl	-36(%ebp), %eax
 4601 155b 890424   		movl	%eax, (%esp)
 4602 155e C7458001 		movl	$1, -128(%ebp)
 4602      000000
 4603 1565 E8000000 		call	__ZN10ThreadPool3RunEPNS_10IRunObjectENS_14ThreadPriorityE
 4603      00
 4604 156a EB73     		jmp	L95
 4605              	L137:
 4606 156c 8D6D18   		leal	24(%ebp), %ebp
 4607 156f 8B5580   		movl	-128(%ebp), %edx
 4608 1572 899544FF 		movl	%edx, -188(%ebp)
 4608      FFFF
 4609 1578 8B4584   		movl	-124(%ebp), %eax
 4610 157b 89856CFF 		movl	%eax, -148(%ebp)
 4610      FFFF
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 50


 4611 1581 83BD44FF 		cmpl	$1, -188(%ebp)
 4611      FFFF01
 4612 1588 0F84B0FE 		je	L87
 4612      FFFF
 4613 158e 83BD44FF 		cmpl	$2, -188(%ebp)
 4613      FFFF02
 4614 1595 0F84E1FD 		je	L81
 4614      FFFF
 4615              	L97:
 4616 159b 8B956CFF 		movl	-148(%ebp), %edx
 4616      FFFF
 4617 15a1 899554FF 		movl	%edx, -172(%ebp)
 4617      FFFF
 4618 15a7 80BD5BFF 		cmpb	$0, -165(%ebp)
 4618      FFFF00
 4619 15ae 740E     		je	L100
 4620 15b0 8B855CFF 		movl	-164(%ebp), %eax
 4620      FFFF
 4621 15b6 890424   		movl	%eax, (%esp)
 4622 15b9 E8000000 		call	__ZdlPv
 4622      00
 4623              	L100:
 4624 15be 8B9554FF 		movl	-172(%ebp), %edx
 4624      FFFF
 4625 15c4 89956CFF 		movl	%edx, -148(%ebp)
 4625      FFFF
 4626              	L101:
 4627 15ca 8B856CFF 		movl	-148(%ebp), %eax
 4627      FFFF
 4628 15d0 890424   		movl	%eax, (%esp)
 4629 15d3 C74580FF 		movl	$-1, -128(%ebp)
 4629      FFFFFF
 4630 15da E8000000 		call	__Unwind_SjLj_Resume
 4630      00
 4632              	LM162:
 4633              	L95:
 4634              	LBE35:
 4635              	LBE34:
 4636 15df 8D45C8   		leal	-56(%ebp), %eax
 4637 15e2 890424   		movl	%eax, (%esp)
 4638 15e5 C74580FF 		movl	$-1, -128(%ebp)
 4638      FFFFFF
 4639 15ec E8000000 		call	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv
 4639      00
 4640 15f1 E9D5FEFF 		jmp	L93
 4640      FF
 4641              	L94:
 762:../../MMI/Resource/WriteProcess.cpp ****     }
 763:../../MMI/Resource/WriteProcess.cpp **** 
 764:../../MMI/Resource/WriteProcess.cpp ****     //execute_ext_command("echo resgen_time waiting for threads %time%");
 765:../../MMI/Resource/WriteProcess.cpp ****     int waitCount = 0;
 4643              	LM163:
 4644              	LBE33:
 4645 15f6 C745B400 		movl	$0, -76(%ebp)
 4645      000000
 4646              	L103:
 766:../../MMI/Resource/WriteProcess.cpp ****     while (true)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 51


 767:../../MMI/Resource/WriteProcess.cpp ****     {
 768:../../MMI/Resource/WriteProcess.cpp ****         if (myPool->GetWorkingThreadCount() == 0)
 4648              	LM164:
 4649 15fd 8B45DC   		movl	-36(%ebp), %eax
 4650 1600 890424   		movl	%eax, (%esp)
 4651 1603 C74580FF 		movl	$-1, -128(%ebp)
 4651      FFFFFF
 4652 160a E8000000 		call	__ZN10ThreadPool21GetWorkingThreadCountEv
 4652      00
 4653 160f 85C0     		testl	%eax, %eax
 4654 1611 7502     		jne	L106
 769:../../MMI/Resource/WriteProcess.cpp ****         {
 770:../../MMI/Resource/WriteProcess.cpp ****             break;
 4656              	LM165:
 4657 1613 EB64     		jmp	L104
 4658              	L106:
 771:../../MMI/Resource/WriteProcess.cpp ****         }
 772:../../MMI/Resource/WriteProcess.cpp ****         ::Sleep(500);
 4660              	LM166:
 4661 1615 C70424F4 		movl	$500, (%esp)
 4661      010000
 4662 161c C74580FF 		movl	$-1, -128(%ebp)
 4662      FFFFFF
 4663 1623 E8000000 		call	_Sleep@4
 4663      00
 4664 1628 83EC04   		subl	$4, %esp
 773:../../MMI/Resource/WriteProcess.cpp ****         waitCount += 1;
 4666              	LM167:
 4667 162b 8D45B4   		leal	-76(%ebp), %eax
 4668 162e FF00     		incl	(%eax)
 774:../../MMI/Resource/WriteProcess.cpp ****         if (waitCount > 7200)
 4670              	LM168:
 4671 1630 817DB420 		cmpl	$7200, -76(%ebp)
 4671      1C0000
 4672 1637 7EC4     		jle	L103
 775:../../MMI/Resource/WriteProcess.cpp ****         {
 776:../../MMI/Resource/WriteProcess.cpp ****             IMGPROC_LOG_E("mtk_resgenerator.exe Wait for threads timed out");
 4674              	LM169:
 4675 1639 C7442408 		movl	$LC20, 8(%esp)
 4675      60110000 
 4676 1641 C7442404 		movl	$LC4, 4(%esp)
 4676      E4000000 
 4677 1649 C7042403 		movl	$3, (%esp)
 4677      000000
 4678 1650 E8000000 		call	_reslog_adaptor_log
 4678      00
 777:../../MMI/Resource/WriteProcess.cpp ****             delete myPool;
 4680              	LM170:
 4681 1655 837DDC00 		cmpl	$0, -36(%ebp)
 4682 1659 7412     		je	L109
 4683 165b 8B45DC   		movl	-36(%ebp), %eax
 4684 165e 8B10     		movl	(%eax), %edx
 4685 1660 83C204   		addl	$4, %edx
 4686 1663 8B45DC   		movl	-36(%ebp), %eax
 4687 1666 890424   		movl	%eax, (%esp)
 4688 1669 8B02     		movl	(%edx), %eax
 4689 166b FFD0     		call	*%eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 52


 4690              	L109:
 778:../../MMI/Resource/WriteProcess.cpp ****             exit(2);
 4692              	LM171:
 4693 166d C7042402 		movl	$2, (%esp)
 4693      000000
 4694 1674 E8000000 		call	_exit
 4694      00
 4695              	L104:
 779:../../MMI/Resource/WriteProcess.cpp ****         }
 780:../../MMI/Resource/WriteProcess.cpp ****     }
 781:../../MMI/Resource/WriteProcess.cpp **** 
 782:../../MMI/Resource/WriteProcess.cpp ****     //execute_ext_command("echo resgen_time after Iloads %time%");
 783:../../MMI/Resource/WriteProcess.cpp ****     FILE *output = fopen(OUTPUT_DATA_FILENAME, "ab");
 4697              	LM172:
 4698 1679 C7442404 		movl	$LC6, 4(%esp)
 4698      31010000 
 4699 1681 C70424A0 		movl	$LC21, (%esp)
 4699      110000
 4700 1688 C74580FF 		movl	$-1, -128(%ebp)
 4700      FFFFFF
 4701 168f E8000000 		call	_fopen
 4701      00
 4702 1694 8945B0   		movl	%eax, -80(%ebp)
 784:../../MMI/Resource/WriteProcess.cpp ****     FILE *outputExt = fopen(OUTPUT_DATA_FILENAME_EXT, "ab");
 4704              	LM173:
 4705 1697 C7442404 		movl	$LC6, 4(%esp)
 4705      31010000 
 4706 169f C70424E0 		movl	$LC22, (%esp)
 4706      110000
 4707 16a6 E8000000 		call	_fopen
 4707      00
 4708 16ab 8945AC   		movl	%eax, -84(%ebp)
 785:../../MMI/Resource/WriteProcess.cpp ****     while (output == NULL)
 4710              	LM174:
 4711              	L110:
 4712 16ae 837DB000 		cmpl	$0, -80(%ebp)
 4713 16b2 7402     		je	L112
 4714 16b4 EB2F     		jmp	L111
 4715              	L112:
 786:../../MMI/Resource/WriteProcess.cpp ****     {
 787:../../MMI/Resource/WriteProcess.cpp ****         Sleep(50);
 4717              	LM175:
 4718 16b6 C7042432 		movl	$50, (%esp)
 4718      000000
 4719 16bd C74580FF 		movl	$-1, -128(%ebp)
 4719      FFFFFF
 4720 16c4 E8000000 		call	_Sleep@4
 4720      00
 4721 16c9 83EC04   		subl	$4, %esp
 788:../../MMI/Resource/WriteProcess.cpp ****         output = fopen(OUTPUT_DATA_FILENAME, "ab");
 4723              	LM176:
 4724 16cc C7442404 		movl	$LC6, 4(%esp)
 4724      31010000 
 4725 16d4 C70424A0 		movl	$LC21, (%esp)
 4725      110000
 4726 16db E8000000 		call	_fopen
 4726      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 53


 4727 16e0 8945B0   		movl	%eax, -80(%ebp)
 4728 16e3 EBC9     		jmp	L110
 4729              	L111:
 4730 16e5 90       		nop
 789:../../MMI/Resource/WriteProcess.cpp ****     }
 790:../../MMI/Resource/WriteProcess.cpp ****     while (outputExt == NULL)
 4732              	LM177:
 4733              	L113:
 4734 16e6 837DAC00 		cmpl	$0, -84(%ebp)
 4735 16ea 7402     		je	L115
 4736 16ec EB2F     		jmp	L114
 4737              	L115:
 791:../../MMI/Resource/WriteProcess.cpp ****     {
 792:../../MMI/Resource/WriteProcess.cpp ****         Sleep(50);
 4739              	LM178:
 4740 16ee C7042432 		movl	$50, (%esp)
 4740      000000
 4741 16f5 C74580FF 		movl	$-1, -128(%ebp)
 4741      FFFFFF
 4742 16fc E8000000 		call	_Sleep@4
 4742      00
 4743 1701 83EC04   		subl	$4, %esp
 793:../../MMI/Resource/WriteProcess.cpp ****         outputExt = fopen(OUTPUT_DATA_FILENAME_EXT, "ab");
 4745              	LM179:
 4746 1704 C7442404 		movl	$LC6, 4(%esp)
 4746      31010000 
 4747 170c C70424E0 		movl	$LC22, (%esp)
 4747      110000
 4748 1713 E8000000 		call	_fopen
 4748      00
 4749 1718 8945AC   		movl	%eax, -84(%ebp)
 4750 171b EBC9     		jmp	L113
 4751              	L114:
 794:../../MMI/Resource/WriteProcess.cpp ****     }
 795:../../MMI/Resource/WriteProcess.cpp ****     for (i = g_resgen_png_image_list.begin(); i != g_resgen_png_image_list.end(); ++i)
 4753              	LM180:
 4754              	LBB36:
 4755 171d 8D45B8   		leal	-72(%ebp), %eax
 4756 1720 C7442404 		movl	$_g_resgen_png_image_list, 4(%esp)
 4756      10000000 
 4757 1728 890424   		movl	%eax, (%esp)
 4758 172b C74580FF 		movl	$-1, -128(%ebp)
 4758      FFFFFF
 4759 1732 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv
 4759      00
 4760 1737 83EC04   		subl	$4, %esp
 4761 173a 8B45B8   		movl	-72(%ebp), %eax
 4762 173d 8945C8   		movl	%eax, -56(%ebp)
 4763              	L116:
 4764 1740 8D45B8   		leal	-72(%ebp), %eax
 4765 1743 C7442404 		movl	$_g_resgen_png_image_list, 4(%esp)
 4765      10000000 
 4766 174b 890424   		movl	%eax, (%esp)
 4767 174e C74580FF 		movl	$-1, -128(%ebp)
 4767      FFFFFF
 4768 1755 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE3endEv
 4768      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 54


 4769 175a 83EC04   		subl	$4, %esp
 4770 175d 8D45B8   		leal	-72(%ebp), %eax
 4771 1760 89442404 		movl	%eax, 4(%esp)
 4772 1764 8D45C8   		leal	-56(%ebp), %eax
 4773 1767 890424   		movl	%eax, (%esp)
 4774 176a E8000000 		call	__ZNKSt19_List_iterator_baseneERKS_
 4774      00
 4775 176f 84C0     		testb	%al, %al
 4776 1771 7505     		jne	L119
 4777 1773 E97C0200 		jmp	L117
 4777      00
 4778              	L119:
 796:../../MMI/Resource/WriteProcess.cpp ****     {
 797:../../MMI/Resource/WriteProcess.cpp ****         ProcessImageData & data = *i;
 4780              	LM181:
 4781              	LBB37:
 4782              	LBB38:
 4783 1778 8D45C8   		leal	-56(%ebp), %eax
 4784 177b 890424   		movl	%eax, (%esp)
 4785 177e C74580FF 		movl	$-1, -128(%ebp)
 4785      FFFFFF
 4786 1785 E8000000 		call	__ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv
 4786      00
 4787 178a 8945A8   		movl	%eax, -88(%ebp)
 798:../../MMI/Resource/WriteProcess.cpp **** 
 799:../../MMI/Resource/WriteProcess.cpp ****         // Show progress log in console
 800:../../MMI/Resource/WriteProcess.cpp ****         if(!data.m_filename.empty())
 4789              	LM182:
 4790 178d 8B45A8   		movl	-88(%ebp), %eax
 4791 1790 83C004   		addl	$4, %eax
 4792 1793 890424   		movl	%eax, (%esp)
 4793 1796 E8000000 		call	__ZNKSs5emptyEv
 4793      00
 4794 179b 84C0     		testb	%al, %al
 4795 179d 0F85DE00 		jne	L120
 4795      0000
 801:../../MMI/Resource/WriteProcess.cpp ****         {
 802:../../MMI/Resource/WriteProcess.cpp ****             if(!data.m_filename.empty())
 4797              	LM183:
 4798 17a3 8B45A8   		movl	-88(%ebp), %eax
 4799 17a6 83C004   		addl	$4, %eax
 4800 17a9 890424   		movl	%eax, (%esp)
 4801 17ac E8000000 		call	__ZNKSs5emptyEv
 4801      00
 4802 17b1 84C0     		testb	%al, %al
 4803 17b3 7558     		jne	L121
 803:../../MMI/Resource/WriteProcess.cpp ****             {
 804:../../MMI/Resource/WriteProcess.cpp ****                 IMGPROC_LOG_V("Process IMG %d(%s), file: %s", data.m_nImgId, data.m_enum_value.c_st
 4805              	LM184:
 4806 17b5 8B45A8   		movl	-88(%ebp), %eax
 4807 17b8 83C004   		addl	$4, %eax
 4808 17bb 890424   		movl	%eax, (%esp)
 4809 17be E8000000 		call	__ZNKSs5c_strEv
 4809      00
 4810 17c3 898550FF 		movl	%eax, -176(%ebp)
 4810      FFFF
 4811 17c9 8B45A8   		movl	-88(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 55


 4812 17cc 83C008   		addl	$8, %eax
 4813 17cf 890424   		movl	%eax, (%esp)
 4814 17d2 E8000000 		call	__ZNKSs5c_strEv
 4814      00
 4815 17d7 8B9550FF 		movl	-176(%ebp), %edx
 4815      FFFF
 4816 17dd 89542414 		movl	%edx, 20(%esp)
 4817 17e1 89442410 		movl	%eax, 16(%esp)
 4818 17e5 8B45A8   		movl	-88(%ebp), %eax
 4819 17e8 0FB700   		movzwl	(%eax), %eax
 4820 17eb 8944240C 		movl	%eax, 12(%esp)
 4821 17ef C7442408 		movl	$LC23, 8(%esp)
 4821      0F120000 
 4822 17f7 C7442404 		movl	$LC4, 4(%esp)
 4822      E4000000 
 4823 17ff C7042401 		movl	$1, (%esp)
 4823      000000
 4824 1806 E8000000 		call	_reslog_adaptor_log
 4824      00
 4825 180b EB5D     		jmp	L122
 4826              	L121:
 805:../../MMI/Resource/WriteProcess.cpp ****             }
 806:../../MMI/Resource/WriteProcess.cpp ****             else
 807:../../MMI/Resource/WriteProcess.cpp ****             {
 808:../../MMI/Resource/WriteProcess.cpp ****                 IMGPROC_LOG_V("Process IMG %d, file: %s", data.m_nImgId, data.m_enum_value.c_str(),
 4828              	LM185:
 4829 180d 8B45A8   		movl	-88(%ebp), %eax
 4830 1810 83C004   		addl	$4, %eax
 4831 1813 890424   		movl	%eax, (%esp)
 4832 1816 E8000000 		call	__ZNKSs5c_strEv
 4832      00
 4833 181b 89854CFF 		movl	%eax, -180(%ebp)
 4833      FFFF
 4834 1821 8B45A8   		movl	-88(%ebp), %eax
 4835 1824 83C008   		addl	$8, %eax
 4836 1827 890424   		movl	%eax, (%esp)
 4837 182a E8000000 		call	__ZNKSs5c_strEv
 4837      00
 4838 182f 8B954CFF 		movl	-180(%ebp), %edx
 4838      FFFF
 4839 1835 89542414 		movl	%edx, 20(%esp)
 4840 1839 89442410 		movl	%eax, 16(%esp)
 4841 183d 8B45A8   		movl	-88(%ebp), %eax
 4842 1840 0FB700   		movzwl	(%eax), %eax
 4843 1843 8944240C 		movl	%eax, 12(%esp)
 4844 1847 C7442408 		movl	$LC24, 8(%esp)
 4844      2C120000 
 4845 184f C7442404 		movl	$LC4, 4(%esp)
 4845      E4000000 
 4846 1857 C7042401 		movl	$1, (%esp)
 4846      000000
 4847 185e C74580FF 		movl	$-1, -128(%ebp)
 4847      FFFFFF
 4848 1865 E8000000 		call	_reslog_adaptor_log
 4848      00
 4849              	L122:
 809:../../MMI/Resource/WriteProcess.cpp ****             }
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 56


 810:../../MMI/Resource/WriteProcess.cpp ****             fflush(stdout);
 4851              	LM186:
 4852 186a A1000000 		movl	__imp___iob, %eax
 4852      00
 4853 186f 83C020   		addl	$32, %eax
 4854 1872 890424   		movl	%eax, (%esp)
 4855 1875 C74580FF 		movl	$-1, -128(%ebp)
 4855      FFFFFF
 4856 187c E8000000 		call	_fflush
 4856      00
 4857              	L120:
 811:../../MMI/Resource/WriteProcess.cpp ****         }
 812:../../MMI/Resource/WriteProcess.cpp **** 
 813:../../MMI/Resource/WriteProcess.cpp ****         if (data.m_processData.duplicated)
 4859              	LM187:
 4860 1881 8B45A8   		movl	-88(%ebp), %eax
 4861 1884 83B82002 		cmpl	$0, 544(%eax)
 4861      000000
 4862 188b 744C     		je	L123
 814:../../MMI/Resource/WriteProcess.cpp ****         {
 815:../../MMI/Resource/WriteProcess.cpp ****             IMGPROC_LOG_V("Duplicated Image: ID = %d.", data.m_nImgId);
 4864              	LM188:
 4865 188d 8B45A8   		movl	-88(%ebp), %eax
 4866 1890 0FB700   		movzwl	(%eax), %eax
 4867 1893 8944240C 		movl	%eax, 12(%esp)
 4868 1897 C7442408 		movl	$LC25, 8(%esp)
 4868      45120000 
 4869 189f C7442404 		movl	$LC4, 4(%esp)
 4869      E4000000 
 4870 18a7 C7042401 		movl	$1, (%esp)
 4870      000000
 4871 18ae C74580FF 		movl	$-1, -128(%ebp)
 4871      FFFFFF
 4872 18b5 E8000000 		call	_reslog_adaptor_log
 4872      00
 816:../../MMI/Resource/WriteProcess.cpp ****             //if (g_resgen_png_image_list[data.m_processData.duplicatedIndex].failed)
 817:../../MMI/Resource/WriteProcess.cpp ****             if (data.m_processData.duplicatedInstance->failed)
 4874              	LM189:
 4875 18ba 8B45A8   		movl	-88(%ebp), %eax
 4876 18bd 8B802402 		movl	548(%eax), %eax
 4876      0000
 4877 18c3 83B80802 		cmpl	$0, 520(%eax)
 4877      000000
 4878 18ca 740D     		je	L123
 818:../../MMI/Resource/WriteProcess.cpp ****             {
 819:../../MMI/Resource/WriteProcess.cpp ****                 data.m_processData.failed = MMI_TRUE;
 4880              	LM190:
 4881 18cc 8B45A8   		movl	-88(%ebp), %eax
 4882 18cf C7801C02 		movl	$1, 540(%eax)
 4882      00000100 
 4882      0000
 4883              	L123:
 820:../../MMI/Resource/WriteProcess.cpp ****             }
 821:../../MMI/Resource/WriteProcess.cpp ****         }
 822:../../MMI/Resource/WriteProcess.cpp **** 
 823:../../MMI/Resource/WriteProcess.cpp ****         ProcessResgenPngImagesMapIds(data);
 4885              	LM191:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 57


 4886 18d9 8B45A8   		movl	-88(%ebp), %eax
 4887 18dc 890424   		movl	%eax, (%esp)
 4888 18df C74580FF 		movl	$-1, -128(%ebp)
 4888      FFFFFF
 4889 18e6 E843F2FF 		call	__Z28ProcessResgenPngImagesMapIdsR16ProcessImageData
 4889      FF
 824:../../MMI/Resource/WriteProcess.cpp **** 
 825:../../MMI/Resource/WriteProcess.cpp **** 		// Add the image content to Generator object
 826:../../MMI/Resource/WriteProcess.cpp ****         if (data.m_processData.failed)
 4891              	LM192:
 4892 18eb 8B45A8   		movl	-88(%ebp), %eax
 4893 18ee 83B81C02 		cmpl	$0, 540(%eax)
 4893      000000
 4894 18f5 7405     		je	L125
 827:../../MMI/Resource/WriteProcess.cpp ****         {
 828:../../MMI/Resource/WriteProcess.cpp ****             continue;
 4896              	LM193:
 4897 18f7 E9E10000 		jmp	L118
 4897      00
 4898              	L125:
 829:../../MMI/Resource/WriteProcess.cpp ****         }
 830:../../MMI/Resource/WriteProcess.cpp **** 		// Let contenMetaCreator handle the duplicated issue
 831:../../MMI/Resource/WriteProcess.cpp **** 		if(data.m_processData.duplicated){
 4900              	LM194:
 4901 18fc 8B45A8   		movl	-88(%ebp), %eax
 4902 18ff 83B82002 		cmpl	$0, 544(%eax)
 4902      000000
 4903 1906 744D     		je	L126
 832:../../MMI/Resource/WriteProcess.cpp **** 			contentMetacreator->addImage(data.m_filename.c_str(),data.m_outstream.data, data.m_outstream.dat
 4905              	LM195:
 4906 1908 8B45A8   		movl	-88(%ebp), %eax
 4907 190b 83C004   		addl	$4, %eax
 4908 190e 890424   		movl	%eax, (%esp)
 4909 1911 E8000000 		call	__ZNKSs5c_strEv
 4909      00
 4910 1916 89C2     		movl	%eax, %edx
 4911 1918 C7442410 		movl	$1, 16(%esp)
 4911      01000000 
 4912 1920 8B45A8   		movl	-88(%ebp), %eax
 4913 1923 8B803002 		movl	560(%eax), %eax
 4913      0000
 4914 1929 8944240C 		movl	%eax, 12(%esp)
 4915 192d 8B45A8   		movl	-88(%ebp), %eax
 4916 1930 8B803402 		movl	564(%eax), %eax
 4916      0000
 4917 1936 89442408 		movl	%eax, 8(%esp)
 4918 193a 89542404 		movl	%edx, 4(%esp)
 4919 193e 8B45E0   		movl	-32(%ebp), %eax
 4920 1941 890424   		movl	%eax, (%esp)
 4921 1944 C74580FF 		movl	$-1, -128(%ebp)
 4921      FFFFFF
 4922 194b E8000000 		call	__ZN28ImageGroupContentMetaCreator8addImageEPKcPcii
 4922      00
 833:../../MMI/Resource/WriteProcess.cpp **** 			continue;
 4924              	LM196:
 4925 1950 E9880000 		jmp	L118
 4925      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 58


 4926              	L126:
 834:../../MMI/Resource/WriteProcess.cpp **** 		}
 835:../../MMI/Resource/WriteProcess.cpp ****         if (data.m_imgFlag)
 4928              	LM197:
 4929 1955 8B45A8   		movl	-88(%ebp), %eax
 4930 1958 83780C00 		cmpl	$0, 12(%eax)
 4931 195c 7420     		je	L127
 836:../../MMI/Resource/WriteProcess.cpp ****         {
 837:../../MMI/Resource/WriteProcess.cpp ****             ImageOutStreamOutputFile(&data.m_outstream, outputExt);
 4933              	LM198:
 4934 195e 8B45AC   		movl	-84(%ebp), %eax
 4935 1961 89442404 		movl	%eax, 4(%esp)
 4936 1965 8B45A8   		movl	-88(%ebp), %eax
 4937 1968 05300200 		addl	$560, %eax
 4937      00
 4938 196d 890424   		movl	%eax, (%esp)
 4939 1970 C74580FF 		movl	$-1, -128(%ebp)
 4939      FFFFFF
 4940 1977 E87A0300 		call	_ImageOutStreamOutputFile
 4940      00
 4941 197c EB5F     		jmp	L118
 4942              	L127:
 838:../../MMI/Resource/WriteProcess.cpp ****         }
 839:../../MMI/Resource/WriteProcess.cpp ****         else
 840:../../MMI/Resource/WriteProcess.cpp ****         {
 841:../../MMI/Resource/WriteProcess.cpp **** 			contentMetacreator->addImage(data.m_filename.c_str(),data.m_outstream.data, data.m_outstream.dat
 4944              	LM199:
 4945 197e 8B45A8   		movl	-88(%ebp), %eax
 4946 1981 83C004   		addl	$4, %eax
 4947 1984 890424   		movl	%eax, (%esp)
 4948 1987 E8000000 		call	__ZNKSs5c_strEv
 4948      00
 4949 198c 89C2     		movl	%eax, %edx
 4950 198e C7442410 		movl	$1, 16(%esp)
 4950      01000000 
 4951 1996 8B45A8   		movl	-88(%ebp), %eax
 4952 1999 8B803002 		movl	560(%eax), %eax
 4952      0000
 4953 199f 8944240C 		movl	%eax, 12(%esp)
 4954 19a3 8B45A8   		movl	-88(%ebp), %eax
 4955 19a6 8B803402 		movl	564(%eax), %eax
 4955      0000
 4956 19ac 89442408 		movl	%eax, 8(%esp)
 4957 19b0 89542404 		movl	%edx, 4(%esp)
 4958 19b4 8B45E0   		movl	-32(%ebp), %eax
 4959 19b7 890424   		movl	%eax, (%esp)
 4960 19ba C74580FF 		movl	$-1, -128(%ebp)
 4960      FFFFFF
 4961 19c1 E8000000 		call	__ZN28ImageGroupContentMetaCreator8addImageEPKcPcii
 4961      00
 842:../../MMI/Resource/WriteProcess.cpp ****             ImageOutStreamOutputFile(&data.m_outstream, output);
 4963              	LM200:
 4964 19c6 8B45B0   		movl	-80(%ebp), %eax
 4965 19c9 89442404 		movl	%eax, 4(%esp)
 4966 19cd 8B45A8   		movl	-88(%ebp), %eax
 4967 19d0 05300200 		addl	$560, %eax
 4967      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 59


 4968 19d5 890424   		movl	%eax, (%esp)
 4969 19d8 E8190300 		call	_ImageOutStreamOutputFile
 4969      00
 4971              	LM201:
 4972              	L118:
 4973              	LBE38:
 4974              	LBE37:
 4975 19dd 8D45C8   		leal	-56(%ebp), %eax
 4976 19e0 890424   		movl	%eax, (%esp)
 4977 19e3 C74580FF 		movl	$-1, -128(%ebp)
 4977      FFFFFF
 4978 19ea E8000000 		call	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv
 4978      00
 4979 19ef E94CFDFF 		jmp	L116
 4979      FF
 4980              	L117:
 843:../../MMI/Resource/WriteProcess.cpp ****         }
 844:../../MMI/Resource/WriteProcess.cpp ****     }
 845:../../MMI/Resource/WriteProcess.cpp **** 	IMGPROC_LOG_V("Output Image Group Content Meta: %s",OUTPUT_IMG_GROUP_CONTENT_META_FILENAME);
 4982              	LM202:
 4983              	LBE36:
 4984 19f4 C744240C 		movl	$LC26, 12(%esp)
 4984      60120000 
 4985 19fc C7442408 		movl	$LC27, 8(%esp)
 4985      A0120000 
 4986 1a04 C7442404 		movl	$LC4, 4(%esp)
 4986      E4000000 
 4987 1a0c C7042401 		movl	$1, (%esp)
 4987      000000
 4988 1a13 C74580FF 		movl	$-1, -128(%ebp)
 4988      FFFFFF
 4989 1a1a E8000000 		call	_reslog_adaptor_log
 4989      00
 846:../../MMI/Resource/WriteProcess.cpp **** 	contentMetacreator->generateMetaFile(OUTPUT_IMG_GROUP_CONTENT_META_FILENAME);
 4991              	LM203:
 4992 1a1f C7442404 		movl	$LC26, 4(%esp)
 4992      60120000 
 4993 1a27 8B45E0   		movl	-32(%ebp), %eax
 4994 1a2a 890424   		movl	%eax, (%esp)
 4995 1a2d E8000000 		call	__ZN28ImageGroupContentMetaCreator16generateMetaFileEPKc
 4995      00
 847:../../MMI/Resource/WriteProcess.cpp **** 
 848:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("Close FILE: %s",OUTPUT_DATA_FILENAME);
 4997              	LM204:
 4998 1a32 C744240C 		movl	$LC21, 12(%esp)
 4998      A0110000 
 4999 1a3a C7442408 		movl	$LC28, 8(%esp)
 4999      C4120000 
 5000 1a42 C7442404 		movl	$LC4, 4(%esp)
 5000      E4000000 
 5001 1a4a C7042401 		movl	$1, (%esp)
 5001      000000
 5002 1a51 E8000000 		call	_reslog_adaptor_log
 5002      00
 849:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 5004              	LM205:
 5005 1a56 A1000000 		movl	__imp___iob, %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 60


 5005      00
 5006 1a5b 83C020   		addl	$32, %eax
 5007 1a5e 890424   		movl	%eax, (%esp)
 5008 1a61 E8000000 		call	_fflush
 5008      00
 850:../../MMI/Resource/WriteProcess.cpp ****     MYFCLOSE(output);
 5010              	LM206:
 5011 1a66 837DB000 		cmpl	$0, -80(%ebp)
 5012 1a6a 7412     		je	L129
 5013 1a6c 8B45B0   		movl	-80(%ebp), %eax
 5014 1a6f 890424   		movl	%eax, (%esp)
 5015 1a72 E8000000 		call	_fclose
 5015      00
 5016 1a77 C745B000 		movl	$0, -80(%ebp)
 5016      000000
 5017              	L129:
 851:../../MMI/Resource/WriteProcess.cpp **** 
 852:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("Close FILE: %s",OUTPUT_DATA_FILENAME_EXT);
 5019              	LM207:
 5020 1a7e C744240C 		movl	$LC22, 12(%esp)
 5020      E0110000 
 5021 1a86 C7442408 		movl	$LC28, 8(%esp)
 5021      C4120000 
 5022 1a8e C7442404 		movl	$LC4, 4(%esp)
 5022      E4000000 
 5023 1a96 C7042401 		movl	$1, (%esp)
 5023      000000
 5024 1a9d C74580FF 		movl	$-1, -128(%ebp)
 5024      FFFFFF
 5025 1aa4 E8000000 		call	_reslog_adaptor_log
 5025      00
 853:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 5027              	LM208:
 5028 1aa9 A1000000 		movl	__imp___iob, %eax
 5028      00
 5029 1aae 83C020   		addl	$32, %eax
 5030 1ab1 890424   		movl	%eax, (%esp)
 5031 1ab4 E8000000 		call	_fflush
 5031      00
 854:../../MMI/Resource/WriteProcess.cpp ****     MYFCLOSE(outputExt);
 5033              	LM209:
 5034 1ab9 837DAC00 		cmpl	$0, -84(%ebp)
 5035 1abd 7412     		je	L131
 5036 1abf 8B45AC   		movl	-84(%ebp), %eax
 5037 1ac2 890424   		movl	%eax, (%esp)
 5038 1ac5 E8000000 		call	_fclose
 5038      00
 5039 1aca C745AC00 		movl	$0, -84(%ebp)
 5039      000000
 5040              	L131:
 855:../../MMI/Resource/WriteProcess.cpp **** 
 856:../../MMI/Resource/WriteProcess.cpp ****     IMGPROC_LOG_V("Clean g_resgen_png_image_list");
 5042              	LM210:
 5043 1ad1 C7442408 		movl	$LC29, 8(%esp)
 5043      D3120000 
 5044 1ad9 C7442404 		movl	$LC4, 4(%esp)
 5044      E4000000 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 61


 5045 1ae1 C7042401 		movl	$1, (%esp)
 5045      000000
 5046 1ae8 C74580FF 		movl	$-1, -128(%ebp)
 5046      FFFFFF
 5047 1aef E8000000 		call	_reslog_adaptor_log
 5047      00
 857:../../MMI/Resource/WriteProcess.cpp ****     fflush(stdout);
 5049              	LM211:
 5050 1af4 A1000000 		movl	__imp___iob, %eax
 5050      00
 5051 1af9 83C020   		addl	$32, %eax
 5052 1afc 890424   		movl	%eax, (%esp)
 5053 1aff E8000000 		call	_fflush
 5053      00
 858:../../MMI/Resource/WriteProcess.cpp ****     g_resgen_png_image_list.clear();
 5055              	LM212:
 5056 1b04 C7042410 		movl	$_g_resgen_png_image_list, (%esp)
 5056      000000
 5057 1b0b E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE5clearEv
 5057      00
 859:../../MMI/Resource/WriteProcess.cpp **** 
 860:../../MMI/Resource/WriteProcess.cpp **** 	delete contentMetacreator;
 5059              	LM213:
 5060 1b10 8B45E0   		movl	-32(%ebp), %eax
 5061 1b13 898548FF 		movl	%eax, -184(%ebp)
 5061      FFFF
 5062 1b19 83BD48FF 		cmpl	$0, -184(%ebp)
 5062      FFFF00
 5063 1b20 741C     		je	L134
 5064 1b22 8B9548FF 		movl	-184(%ebp), %edx
 5064      FFFF
 5065 1b28 891424   		movl	%edx, (%esp)
 5066 1b2b E8000000 		call	__ZN28ImageGroupContentMetaCreatorD1Ev
 5066      00
 5067 1b30 8B8548FF 		movl	-184(%ebp), %eax
 5067      FFFF
 5068 1b36 890424   		movl	%eax, (%esp)
 5069 1b39 E8000000 		call	__ZdlPv
 5069      00
 5070              	L134:
 861:../../MMI/Resource/WriteProcess.cpp ****     delete(myPool);
 5072              	LM214:
 5073 1b3e 837DDC00 		cmpl	$0, -36(%ebp)
 5074 1b42 7419     		je	L80
 5075 1b44 8B45DC   		movl	-36(%ebp), %eax
 5076 1b47 8B10     		movl	(%eax), %edx
 5077 1b49 83C204   		addl	$4, %edx
 5078 1b4c 8B45DC   		movl	-36(%ebp), %eax
 5079 1b4f 890424   		movl	%eax, (%esp)
 5080 1b52 8B02     		movl	(%edx), %eax
 5081 1b54 C74580FF 		movl	$-1, -128(%ebp)
 5081      FFFFFF
 5082 1b5b FFD0     		call	*%eax
 862:../../MMI/Resource/WriteProcess.cpp ****     //execute_ext_command("echo resgen_time after output data %time%");
 863:../../MMI/Resource/WriteProcess.cpp **** }
 5084              	LM215:
 5085              	L80:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 62


 5086 1b5d 8D857CFF 		leal	-132(%ebp), %eax
 5086      FFFF
 5087 1b63 890424   		movl	%eax, (%esp)
 5088 1b66 E8000000 		call	__Unwind_SjLj_Unregister
 5088      00
 5089 1b6b 8D65F4   		leal	-12(%ebp), %esp
 5090 1b6e 5B       		popl	%ebx
 5091 1b6f 5E       		popl	%esi
 5092 1b70 5F       		popl	%edi
 5093 1b71 5D       		popl	%ebp
 5094 1b72 C3       		ret
 5095              	LBE32:
 5096              		.section	.gcc_except_table,""
 5097              	LLSDA2207:
 5098 000c FF       		.byte	0xff
 5099 000d FF       		.byte	0xff
 5100 000e 01       		.byte	0x1
 5101 000f 06       		.uleb128 LLSDACSE2207-LLSDACSB2207
 5102              	LLSDACSB2207:
 5103 0010 00       		.uleb128 0x0
 5104 0011 00       		.uleb128 0x0
 5105 0012 01       		.uleb128 0x1
 5106 0013 00       		.uleb128 0x0
 5107 0014 02       		.uleb128 0x2
 5108 0015 00       		.uleb128 0x0
 5109              	LLSDACSE2207:
 5110              		.text
 5126              	Lscope12:
 5128 1b73 90       		.align 2
 5131              	.globl _ImageOutStreamInit
 5133              	_ImageOutStreamInit:
 864:../../MMI/Resource/WriteProcess.cpp **** 
 865:../../MMI/Resource/WriteProcess.cpp **** 
 866:../../MMI/Resource/WriteProcess.cpp **** void ImageOutStreamInit(ResgenImageOutStream ** pStream)
 867:../../MMI/Resource/WriteProcess.cpp **** {
 5135              	LM216:
 5136 1b74 55       		pushl	%ebp
 5137 1b75 89E5     		movl	%esp, %ebp
 5138 1b77 56       		pushl	%esi
 5139 1b78 53       		pushl	%ebx
 5140 1b79 83EC10   		subl	$16, %esp
 868:../../MMI/Resource/WriteProcess.cpp ****     *pStream = new ResgenImageOutStream();
 5142              	LM217:
 5143              	LBB39:
 5144 1b7c 8B7508   		movl	8(%ebp), %esi
 5145 1b7f C7042408 		movl	$8, (%esp)
 5145      000000
 5146 1b86 E8000000 		call	__Znwj
 5146      00
 5147 1b8b 89C3     		movl	%eax, %ebx
 5148 1b8d 891C24   		movl	%ebx, (%esp)
 5149 1b90 E8000000 		call	__ZN21_ResgenImageOutStreamC1Ev
 5149      00
 5150 1b95 89D8     		movl	%ebx, %eax
 5151 1b97 8906     		movl	%eax, (%esi)
 869:../../MMI/Resource/WriteProcess.cpp **** }
 5153              	LM218:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 63


 5154 1b99 83C410   		addl	$16, %esp
 5155 1b9c 5B       		popl	%ebx
 5156 1b9d 5E       		popl	%esi
 5157 1b9e 5D       		popl	%ebp
 5158 1b9f C3       		ret
 5159              	L139:
 5160              	L138:
 5161              	LBE39:
 5162              	Lscope13:
 5164              		.align 2
 5167              	.globl _ImageOutStreamDeinit
 5169              	_ImageOutStreamDeinit:
 870:../../MMI/Resource/WriteProcess.cpp **** 
 871:../../MMI/Resource/WriteProcess.cpp **** void ImageOutStreamDeinit(ResgenImageOutStream ** pStream)
 872:../../MMI/Resource/WriteProcess.cpp **** {
 5171              	LM219:
 5172 1ba0 55       		pushl	%ebp
 5173 1ba1 89E5     		movl	%esp, %ebp
 5174 1ba3 83EC08   		subl	$8, %esp
 873:../../MMI/Resource/WriteProcess.cpp ****     delete *pStream;
 5176              	LM220:
 5177              	LBB40:
 5178 1ba6 8B4508   		movl	8(%ebp), %eax
 5179 1ba9 8B00     		movl	(%eax), %eax
 5180 1bab 8945FC   		movl	%eax, -4(%ebp)
 5181 1bae 837DFC00 		cmpl	$0, -4(%ebp)
 5182 1bb2 7416     		je	L143
 5183 1bb4 8B45FC   		movl	-4(%ebp), %eax
 5184 1bb7 890424   		movl	%eax, (%esp)
 5185 1bba E8000000 		call	__ZN21_ResgenImageOutStreamD1Ev
 5185      00
 5186 1bbf 8B45FC   		movl	-4(%ebp), %eax
 5187 1bc2 890424   		movl	%eax, (%esp)
 5188 1bc5 E8000000 		call	__ZdlPv
 5188      00
 5189              	L143:
 874:../../MMI/Resource/WriteProcess.cpp ****     pStream = NULL;
 5191              	LM221:
 5192 1bca C7450800 		movl	$0, 8(%ebp)
 5192      000000
 875:../../MMI/Resource/WriteProcess.cpp **** }
 5194              	LM222:
 5195 1bd1 C9       		leave
 5196 1bd2 C3       		ret
 5197              	LBE40:
 5198              	Lscope14:
 5200 1bd3 90       		.align 2
 5204              	.globl _ImageOutStreamPrintf
 5206              	_ImageOutStreamPrintf:
 876:../../MMI/Resource/WriteProcess.cpp **** 
 877:../../MMI/Resource/WriteProcess.cpp **** void ImageOutStreamPrintf(ResgenImageOutStream * stream, char* fmt, ...)
 878:../../MMI/Resource/WriteProcess.cpp **** {
 5208              	LM223:
 5209 1bd4 55       		pushl	%ebp
 5210 1bd5 89E5     		movl	%esp, %ebp
 5211 1bd7 81EC3804 		subl	$1080, %esp
 5211      0000
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 64


 879:../../MMI/Resource/WriteProcess.cpp ****     va_list myList;
 880:../../MMI/Resource/WriteProcess.cpp ****     char buffer[1024];
 881:../../MMI/Resource/WriteProcess.cpp **** 
 882:../../MMI/Resource/WriteProcess.cpp ****     va_start(myList,fmt);
 5213              	LM224:
 5214              	LBB41:
 5215 1bdd 8D4510   		leal	16(%ebp), %eax
 5216 1be0 8945F4   		movl	%eax, -12(%ebp)
 883:../../MMI/Resource/WriteProcess.cpp ****     vsprintf(buffer, fmt, myList);
 5218              	LM225:
 5219 1be3 8B45F4   		movl	-12(%ebp), %eax
 5220 1be6 89442408 		movl	%eax, 8(%esp)
 5221 1bea 8B450C   		movl	12(%ebp), %eax
 5222 1bed 89442404 		movl	%eax, 4(%esp)
 5223 1bf1 8D85E8FB 		leal	-1048(%ebp), %eax
 5223      FFFF
 5224 1bf7 890424   		movl	%eax, (%esp)
 5225 1bfa E8000000 		call	_vsprintf
 5225      00
 884:../../MMI/Resource/WriteProcess.cpp ****     va_end(myList);
 885:../../MMI/Resource/WriteProcess.cpp **** 
 886:../../MMI/Resource/WriteProcess.cpp ****     size_t size = strlen(buffer);
 5227              	LM226:
 5228 1bff 8D85E8FB 		leal	-1048(%ebp), %eax
 5228      FFFF
 5229 1c05 890424   		movl	%eax, (%esp)
 5230 1c08 E8000000 		call	_strlen
 5230      00
 5231 1c0d 8985E4FB 		movl	%eax, -1052(%ebp)
 5231      FFFF
 887:../../MMI/Resource/WriteProcess.cpp ****     ImageOutStreamAppend(stream, buffer, size);
 5233              	LM227:
 5234 1c13 8B85E4FB 		movl	-1052(%ebp), %eax
 5234      FFFF
 5235 1c19 89442408 		movl	%eax, 8(%esp)
 5236 1c1d 8D85E8FB 		leal	-1048(%ebp), %eax
 5236      FFFF
 5237 1c23 89442404 		movl	%eax, 4(%esp)
 5238 1c27 8B4508   		movl	8(%ebp), %eax
 5239 1c2a 890424   		movl	%eax, (%esp)
 5240 1c2d E8020000 		call	_ImageOutStreamAppend
 5240      00
 888:../../MMI/Resource/WriteProcess.cpp **** 
 889:../../MMI/Resource/WriteProcess.cpp **** }
 5242              	LM228:
 5243 1c32 C9       		leave
 5244 1c33 C3       		ret
 5245              	LBE41:
 5251              	Lscope15:
 5253              		.align 2
 5258              	.globl _ImageOutStreamAppend
 5260              	_ImageOutStreamAppend:
 890:../../MMI/Resource/WriteProcess.cpp **** 
 891:../../MMI/Resource/WriteProcess.cpp **** void ImageOutStreamAppend(ResgenImageOutStream * stream, char* buffer, U32 size)
 892:../../MMI/Resource/WriteProcess.cpp **** {
 5262              	LM229:
 5263 1c34 55       		pushl	%ebp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 65


 5264 1c35 89E5     		movl	%esp, %ebp
 5265 1c37 53       		pushl	%ebx
 5266 1c38 83EC14   		subl	$20, %esp
 893:../../MMI/Resource/WriteProcess.cpp ****     if (size == 0)
 5268              	LM230:
 5269              	LBB42:
 5270 1c3b 837D1000 		cmpl	$0, 16(%ebp)
 5271 1c3f 7502     		jne	L146
 894:../../MMI/Resource/WriteProcess.cpp ****     {
 895:../../MMI/Resource/WriteProcess.cpp ****         return;
 5273              	LM231:
 5274 1c41 EB50     		jmp	L145
 5275              	L146:
 896:../../MMI/Resource/WriteProcess.cpp ****     }
 897:../../MMI/Resource/WriteProcess.cpp ****     size_t org_size = stream->data_size;
 5277              	LM232:
 5278 1c43 8B4508   		movl	8(%ebp), %eax
 5279 1c46 8B00     		movl	(%eax), %eax
 5280 1c48 8945F8   		movl	%eax, -8(%ebp)
 898:../../MMI/Resource/WriteProcess.cpp ****     stream->data_size = org_size + size;
 5282              	LM233:
 5283 1c4b 8B5508   		movl	8(%ebp), %edx
 5284 1c4e 8B4510   		movl	16(%ebp), %eax
 5285 1c51 0345F8   		addl	-8(%ebp), %eax
 5286 1c54 8902     		movl	%eax, (%edx)
 899:../../MMI/Resource/WriteProcess.cpp ****     stream->data = (char*)realloc(stream->data, org_size + size);
 5288              	LM234:
 5289 1c56 8B5D08   		movl	8(%ebp), %ebx
 5290 1c59 8B4510   		movl	16(%ebp), %eax
 5291 1c5c 0345F8   		addl	-8(%ebp), %eax
 5292 1c5f 89442404 		movl	%eax, 4(%esp)
 5293 1c63 8B4508   		movl	8(%ebp), %eax
 5294 1c66 8B4004   		movl	4(%eax), %eax
 5295 1c69 890424   		movl	%eax, (%esp)
 5296 1c6c E8000000 		call	_realloc
 5296      00
 5297 1c71 894304   		movl	%eax, 4(%ebx)
 900:../../MMI/Resource/WriteProcess.cpp **** 
 901:../../MMI/Resource/WriteProcess.cpp ****     memcpy(stream->data + org_size, buffer, size);
 5299              	LM235:
 5300 1c74 8B4510   		movl	16(%ebp), %eax
 5301 1c77 89442408 		movl	%eax, 8(%esp)
 5302 1c7b 8B450C   		movl	12(%ebp), %eax
 5303 1c7e 89442404 		movl	%eax, 4(%esp)
 5304 1c82 8B5508   		movl	8(%ebp), %edx
 5305 1c85 8B45F8   		movl	-8(%ebp), %eax
 5306 1c88 034204   		addl	4(%edx), %eax
 5307 1c8b 890424   		movl	%eax, (%esp)
 5308 1c8e E8000000 		call	_memcpy
 5308      00
 902:../../MMI/Resource/WriteProcess.cpp **** }
 5310              	LM236:
 5311              	L145:
 5312 1c93 83C414   		addl	$20, %esp
 5313 1c96 5B       		popl	%ebx
 5314 1c97 5D       		popl	%ebp
 5315 1c98 C3       		ret
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 66


 5316              	LBE42:
 5320              	Lscope16:
 5322 1c99 8DB42600 		.align 32
 5322      000000
 5323              	LC30:
 5324 1ca0 496D6167 		.ascii "ImageOutStreamOutputFile: ResgenImageOutStream(0x%x) or out_file(0x%x) can't be NULL\0"
 5324      654F7574 
 5324      53747265 
 5324      616D4F75 
 5324      74707574 
 5325 1cf5 90       		.align 2
 5329              	.globl _ImageOutStreamOutputFile
 5331              	_ImageOutStreamOutputFile:
 903:../../MMI/Resource/WriteProcess.cpp **** 
 904:../../MMI/Resource/WriteProcess.cpp **** void ImageOutStreamOutputFile(ResgenImageOutStream * stream, FILE * out_file)
 905:../../MMI/Resource/WriteProcess.cpp **** {
 5333              	LM237:
 5334 1cf6 55       		pushl	%ebp
 5335 1cf7 89E5     		movl	%esp, %ebp
 5336 1cf9 83EC18   		subl	$24, %esp
 906:../../MMI/Resource/WriteProcess.cpp ****     if(ImageOutStreamOutputFile == NULL || ImageOutStreamOutputFile == NULL )
 5338              	LM238:
 5339              	LBB43:
 5340 1cfc B8F61C00 		movl	$_ImageOutStreamOutputFile, %eax
 5340      00
 5341 1d01 85C0     		testl	%eax, %eax
 5342 1d03 7409     		je	L149
 5343 1d05 B8F61C00 		movl	$_ImageOutStreamOutputFile, %eax
 5343      00
 5344 1d0a 85C0     		testl	%eax, %eax
 5345 1d0c 753A     		jne	L148
 5346              	L149:
 907:../../MMI/Resource/WriteProcess.cpp ****     {
 908:../../MMI/Resource/WriteProcess.cpp ****         IMGPROC_LOG_V("ImageOutStreamOutputFile: ResgenImageOutStream(0x%x) or out_file(0x%x) can't
 5348              	LM239:
 5349 1d0e 8B450C   		movl	12(%ebp), %eax
 5350 1d11 89442410 		movl	%eax, 16(%esp)
 5351 1d15 8B4508   		movl	8(%ebp), %eax
 5352 1d18 8944240C 		movl	%eax, 12(%esp)
 5353 1d1c C7442408 		movl	$LC30, 8(%esp)
 5353      A01C0000 
 5354 1d24 C7442404 		movl	$LC4, 4(%esp)
 5354      E4000000 
 5355 1d2c C7042401 		movl	$1, (%esp)
 5355      000000
 5356 1d33 E8000000 		call	_reslog_adaptor_log
 5356      00
 909:../../MMI/Resource/WriteProcess.cpp ****         fflush(stdout);
 5358              	LM240:
 5359 1d38 A1000000 		movl	__imp___iob, %eax
 5359      00
 5360 1d3d 83C020   		addl	$32, %eax
 5361 1d40 890424   		movl	%eax, (%esp)
 5362 1d43 E8000000 		call	_fflush
 5362      00
 5363              	L148:
 910:../../MMI/Resource/WriteProcess.cpp ****     }
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 67


 911:../../MMI/Resource/WriteProcess.cpp **** 
 912:../../MMI/Resource/WriteProcess.cpp ****     if (stream->data_size > 0)
 5365              	LM241:
 5366 1d48 8B4508   		movl	8(%ebp), %eax
 5367 1d4b 833800   		cmpl	$0, (%eax)
 5368 1d4e 7E26     		jle	L147
 913:../../MMI/Resource/WriteProcess.cpp ****     {
 914:../../MMI/Resource/WriteProcess.cpp ****         fwrite(stream->data, stream->data_size, 1, out_file);
 5370              	LM242:
 5371 1d50 8B450C   		movl	12(%ebp), %eax
 5372 1d53 8944240C 		movl	%eax, 12(%esp)
 5373 1d57 C7442408 		movl	$1, 8(%esp)
 5373      01000000 
 5374 1d5f 8B4508   		movl	8(%ebp), %eax
 5375 1d62 8B00     		movl	(%eax), %eax
 5376 1d64 89442404 		movl	%eax, 4(%esp)
 5377 1d68 8B4508   		movl	8(%ebp), %eax
 5378 1d6b 8B4004   		movl	4(%eax), %eax
 5379 1d6e 890424   		movl	%eax, (%esp)
 5380 1d71 E8000000 		call	_fwrite
 5380      00
 915:../../MMI/Resource/WriteProcess.cpp ****     }
 916:../../MMI/Resource/WriteProcess.cpp **** }
 5382              	LM243:
 5383              	L147:
 5384 1d76 C9       		leave
 5385 1d77 C3       		ret
 5386              	LBE43:
 5387              	Lscope17:
 5389              		.align 2
 5394              	.globl _LogSetBinaryWithBuffer
 5396              	_LogSetBinaryWithBuffer:
 917:../../MMI/Resource/WriteProcess.cpp **** 
 918:../../MMI/Resource/WriteProcess.cpp **** void LogSetBinaryWithBuffer(
 919:../../MMI/Resource/WriteProcess.cpp ****                             U16 res_id,
 920:../../MMI/Resource/WriteProcess.cpp ****                             S8 *filename,
 921:../../MMI/Resource/WriteProcess.cpp ****                             int binary_type_flag)
 922:../../MMI/Resource/WriteProcess.cpp **** {
 5398              	LM244:
 5399 1d78 55       		pushl	%ebp
 5400 1d79 89E5     		movl	%esp, %ebp
 5401 1d7b 57       		pushl	%edi
 5402 1d7c 56       		pushl	%esi
 5403 1d7d 53       		pushl	%ebx
 5404 1d7e 83EC7C   		subl	$124, %esp
 5405 1d81 8B4508   		movl	8(%ebp), %eax
 5406 1d84 668945E6 		movw	%ax, -26(%ebp)
 5407 1d88 C745B400 		movl	$___gxx_personality_sj0, -76(%ebp)
 5407      000000
 5408 1d8f C745B816 		movl	$LLSDA2222, -72(%ebp)
 5408      000000
 5409 1d96 8D45BC   		leal	-68(%ebp), %eax
 5410 1d99 8D55E8   		leal	-24(%ebp), %edx
 5411 1d9c 8910     		movl	%edx, (%eax)
 5412 1d9e BAF81D00 		movl	$L156, %edx
 5412      00
 5413 1da3 895004   		movl	%edx, 4(%eax)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 68


 5414 1da6 896008   		movl	%esp, 8(%eax)
 5415 1da9 8D459C   		leal	-100(%ebp), %eax
 5416 1dac 890424   		movl	%eax, (%esp)
 5417 1daf E8000000 		call	__Unwind_SjLj_Register
 5417      00
 923:../../MMI/Resource/WriteProcess.cpp ****     LogBinaryData data(res_id, filename, binary_type_flag);
 5419              	LM245:
 5420              	LBB44:
 5421 1db4 8B4510   		movl	16(%ebp), %eax
 5422 1db7 8944240C 		movl	%eax, 12(%esp)
 5423 1dbb 8B450C   		movl	12(%ebp), %eax
 5424 1dbe 89442408 		movl	%eax, 8(%esp)
 5425 1dc2 0FB745E6 		movzwl	-26(%ebp), %eax
 5426 1dc6 89442404 		movl	%eax, 4(%esp)
 5427 1dca 8D45C8   		leal	-56(%ebp), %eax
 5428 1dcd 890424   		movl	%eax, (%esp)
 5429 1dd0 C745A0FF 		movl	$-1, -96(%ebp)
 5429      FFFFFF
 5430 1dd7 E8000000 		call	__ZN13LogBinaryDataC1EtPci
 5430      00
 924:../../MMI/Resource/WriteProcess.cpp ****     g_log_binary_data_list.push_back(data);
 5432              	LM246:
 5433 1ddc 8D45C8   		leal	-56(%ebp), %eax
 5434 1ddf 89442404 		movl	%eax, 4(%esp)
 5435 1de3 C7042420 		movl	$_g_log_binary_data_list, (%esp)
 5435      000000
 5436 1dea C745A001 		movl	$1, -96(%ebp)
 5436      000000
 5437 1df1 E8000000 		call	__ZNSt4listI13LogBinaryDataSaIS0_EE9push_backERKS0_
 5437      00
 5438 1df6 EB32     		jmp	L153
 5439              	L156:
 5440 1df8 8D6D18   		leal	24(%ebp), %ebp
 5441 1dfb 8B45A4   		movl	-92(%ebp), %eax
 5442 1dfe 894594   		movl	%eax, -108(%ebp)
 5443              	L152:
 5444 1e01 8B5594   		movl	-108(%ebp), %edx
 5445 1e04 895598   		movl	%edx, -104(%ebp)
 5446 1e07 8D45C8   		leal	-56(%ebp), %eax
 5447 1e0a 890424   		movl	%eax, (%esp)
 5448 1e0d E8000000 		call	__ZN13LogBinaryDataD1Ev
 5448      00
 5449 1e12 8B4598   		movl	-104(%ebp), %eax
 5450 1e15 894594   		movl	%eax, -108(%ebp)
 5451              	L154:
 5452 1e18 8B5594   		movl	-108(%ebp), %edx
 5453 1e1b 891424   		movl	%edx, (%esp)
 5454 1e1e C745A0FF 		movl	$-1, -96(%ebp)
 5454      FFFFFF
 5455 1e25 E8000000 		call	__Unwind_SjLj_Resume
 5455      00
 5456              	L153:
 5457 1e2a 8D45C8   		leal	-56(%ebp), %eax
 5458 1e2d 890424   		movl	%eax, (%esp)
 5459 1e30 E8000000 		call	__ZN13LogBinaryDataD1Ev
 5459      00
 925:../../MMI/Resource/WriteProcess.cpp **** }
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 69


 5461              	LM247:
 5462              	L151:
 5463 1e35 8D459C   		leal	-100(%ebp), %eax
 5464 1e38 890424   		movl	%eax, (%esp)
 5465 1e3b E8000000 		call	__Unwind_SjLj_Unregister
 5465      00
 5466 1e40 83C47C   		addl	$124, %esp
 5467 1e43 5B       		popl	%ebx
 5468 1e44 5E       		popl	%esi
 5469 1e45 5F       		popl	%edi
 5470 1e46 5D       		popl	%ebp
 5471 1e47 C3       		ret
 5472              	LBE44:
 5473              		.section	.gcc_except_table,""
 5474              	LLSDA2222:
 5475 0016 FF       		.byte	0xff
 5476 0017 FF       		.byte	0xff
 5477 0018 01       		.byte	0x1
 5478 0019 02       		.uleb128 LLSDACSE2222-LLSDACSB2222
 5479              	LLSDACSB2222:
 5480 001a 00       		.uleb128 0x0
 5481 001b 00       		.uleb128 0x0
 5482              	LLSDACSE2222:
 5483              		.text
 5488              	Lscope18:
 5490 1e48 90909090 		.align 32
 5490      90909090 
 5490      90909090 
 5490      90909090 
 5490      90909090 
 5491              	LC31:
 5492 1e60 2E2E5C2E 		.ascii "..\\..\\..\\tools\\python25\\python resgen_populate.py\0"
 5492      2E5C2E2E 
 5492      5C746F6F 
 5492      6C735C70 
 5492      7974686F 
 5493 1e92 8DB42600 		.align 32
 5493      0000008D 
 5493      BC270000 
 5493      0000
 5494              	LC32:
 5495 1ea0 4572726F 		.ascii "Error!! 3D resource generation FAIL !!\0"
 5495      72212120 
 5495      33442072 
 5495      65736F75 
 5495      72636520 
 5496 1ec7 90909090 		.align 32
 5496      90909090 
 5496      90909090 
 5496      90909090 
 5496      90909090 
 5497              	LC33:
 5498 1ee0 506C6561 		.ascii "Please check the error message of TAG Py-RESGEN_POPULATE in this log file. Failed resource
 5498      73652063 
 5498      6865636B 
 5498      20746865 
 5498      20657272 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 70


 5499 1f96 8D76008D 		.align 32
 5499      BC270000 
 5499      0000
 5500              	LC34:
 5501 1fa0 45787465 		.ascii "External python script resgen_populate.py return error.\0"
 5501      726E616C 
 5501      20707974 
 5501      686F6E20 
 5501      73637269 
 5502 1fd8 908DB426 		.align 32
 5502      00000000 
 5503              	LC35:
 5504 1fe0 4572726F 		.ascii "Error!! 3D Resource generation FAIL !!\0"
 5504      72212120 
 5504      33442052 
 5504      65736F75 
 5504      72636520 
 5505 2007 90909090 		.align 32
 5505      90909090 
 5505      90909090 
 5505      90909090 
 5505      90909090 
 5506              	LC36:
 5507 2020 0A2A2A20 		.ascii "\12** Fatal Error!! 3D Resource generation FAIL !!\12** Failed resource declaration are lo
 5507      46617461 
 5507      6C204572 
 5507      726F7221 
 5507      21203344 
 5508              		.align 2
 5511              	__Z17ProcessBinaryDatav:
 926:../../MMI/Resource/WriteProcess.cpp **** 
 927:../../MMI/Resource/WriteProcess.cpp **** static void ProcessBinaryData()
 928:../../MMI/Resource/WriteProcess.cpp **** {
 5513              	LM248:
 5514 215c 55       		pushl	%ebp
 5515 215d 89E5     		movl	%esp, %ebp
 5516 215f 83EC18   		subl	$24, %esp
 929:../../MMI/Resource/WriteProcess.cpp ****     // Binary resource population are saved in offline DB
 930:../../MMI/Resource/WriteProcess.cpp ****     // , and it can be read by resgen_populate.py directly
 931:../../MMI/Resource/WriteProcess.cpp ****     int result = execute_ext_command("..\\..\\..\\" "tools\\python25\\python" " resgen_populate.py"
 5518              	LM249:
 5519              	LBB45:
 5520 2162 C7042460 		movl	$LC31, (%esp)
 5520      1E0000
 5521 2169 E8000000 		call	_execute_ext_command
 5521      00
 5522 216e 8945FC   		movl	%eax, -4(%ebp)
 932:../../MMI/Resource/WriteProcess.cpp ****     if (result == 2)
 5524              	LM250:
 5525 2171 837DFC02 		cmpl	$2, -4(%ebp)
 5526 2175 7560     		jne	L157
 933:../../MMI/Resource/WriteProcess.cpp ****     {
 934:../../MMI/Resource/WriteProcess.cpp ****         //mtk_resgen_set_error();
 935:../../MMI/Resource/WriteProcess.cpp ****         IMGPROC_LOG_E("Error!! 3D resource generation FAIL !!");
 5528              	LM251:
 5529 2177 C7442408 		movl	$LC32, 8(%esp)
 5529      A01E0000 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 71


 5530 217f C7442404 		movl	$LC4, 4(%esp)
 5530      E4000000 
 5531 2187 C7042403 		movl	$3, (%esp)
 5531      000000
 5532 218e E8000000 		call	_reslog_adaptor_log
 5532      00
 936:../../MMI/Resource/WriteProcess.cpp ****         RES_LOG_PENDING_FATAL(IMGPROC_TAG, "Error!! 3D Resource generation FAIL !!","External pytho
 5534              	LM252:
 5535 2193 C7442410 		movl	$LC33, 16(%esp)
 5535      E01E0000 
 5536 219b C744240C 		movl	$LC34, 12(%esp)
 5536      A01F0000 
 5537 21a3 C7442408 		movl	$LC35, 8(%esp)
 5537      E01F0000 
 5538 21ab C7442404 		movl	$LC4, 4(%esp)
 5538      E4000000 
 5539 21b3 C7042403 		movl	$3, (%esp)
 5539      000000
 5540 21ba E8000000 		call	_reslog_adaptor_fatal_error_pending_log
 5540      00
 937:../../MMI/Resource/WriteProcess.cpp ****         fprintf(stderr, "\n** Fatal Error!! 3D Resource generation FAIL !!\n** Failed resource decl
 5542              	LM253:
 5543 21bf C7442404 		movl	$LC36, 4(%esp)
 5543      20200000 
 5544 21c7 A1000000 		movl	__imp___iob, %eax
 5544      00
 5545 21cc 83C040   		addl	$64, %eax
 5546 21cf 890424   		movl	%eax, (%esp)
 5547 21d2 E8000000 		call	_fprintf
 5547      00
 938:../../MMI/Resource/WriteProcess.cpp ****     }
 939:../../MMI/Resource/WriteProcess.cpp **** }
 5549              	LM254:
 5550              	L157:
 5551 21d7 C9       		leave
 5552 21d8 C3       		ret
 5553              	LBE45:
 5557              	Lscope19:
 5563              		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv,"x"
 5564              		.linkonce discard
 5565              		.align 2
 5568              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv
 5570              	__ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv:
 5572              	Ltext1:
   1:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // List implementation -*- C++ -*-
   2:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
   3:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
   4:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** //
   5:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // software; you can redistribute it and/or modify it under the
   7:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // terms of the GNU General Public License as published by the
   8:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // Free Software Foundation; either version 2, or (at your option)
   9:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // any later version.
  10:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  11:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // This library is distributed in the hope that it will be useful,
  12:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 72


  14:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // GNU General Public License for more details.
  15:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  16:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // You should have received a copy of the GNU General Public License along
  17:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // with this library; see the file COPYING.  If not, write to the Free
  18:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
  19:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // USA.
  20:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  21:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // As a special exception, you may use this file as part of a free software
  22:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // library without restriction.  Specifically, if other files instantiate
  23:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // templates or use macros or inline functions from this file, or you compile
  24:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // this file and link it with other files to produce an executable, this
  25:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // file does not by itself cause the resulting executable to be covered by
  26:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // the GNU General Public License.  This exception does not however
  27:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // invalidate any other reasons why the executable file might be covered by
  28:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** // the GNU General Public License.
  29:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  30:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** /*
  31:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *
  32:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * Copyright (c) 1994
  33:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * Hewlett-Packard Company
  34:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *
  35:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * Permission to use, copy, modify, distribute and sell this software
  36:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * and its documentation for any purpose is hereby granted without fee,
  37:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * provided that the above copyright notice appear in all copies and
  38:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * that both that copyright notice and this permission notice appear
  39:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  40:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * representations about the suitability of this software for any
  41:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  42:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *
  43:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *
  44:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * Copyright (c) 1996,1997
  45:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * Silicon Graphics Computer Systems, Inc.
  46:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *
  47:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * Permission to use, copy, modify, distribute and sell this software
  48:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * and its documentation for any purpose is hereby granted without fee,
  49:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * provided that the above copyright notice appear in all copies and
  50:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * that both that copyright notice and this permission notice appear
  51:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * in supporting documentation.  Silicon Graphics makes no
  52:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * representations about the suitability of this software for any
  53:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  54:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  */
  55:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  56:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** /** @file stl_list.h
  57:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *  This is an internal header file, included by other library headers.
  58:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  *  You should not attempt to use it directly.
  59:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****  */
  60:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  61:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** #ifndef __GLIBCPP_INTERNAL_LIST_H
  62:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** #define __GLIBCPP_INTERNAL_LIST_H
  63:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  64:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** #include <bits/concept_check.h>
  65:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** 
  66:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** namespace std
  67:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** {
  68:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   // Supporting structures are split into common and templated types; the
  69:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   // latter publicly inherits from the former in an effort to reduce code
  70:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   // duplication.  This results in some "needless" static_cast'ing later on,
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 73


  71:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   // but it's all safe downcasting.
  72:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
  73:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /// @if maint Common part of a node in the %list.  @endif
  74:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   struct _List_node_base
  75:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
  76:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node_base* _M_next;   ///< Self-explanatory
  77:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node_base* _M_prev;   ///< Self-explanatory
  78:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
  79:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
  80:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /// @if maint An actual node in the %list.  @endif
  81:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   template<typename _Tp>
  82:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     struct _List_node : public _List_node_base
  83:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
  84:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Tp _M_data;                ///< User's data.
  85:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
  86:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
  87:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
  88:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /**
  89:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @if maint
  90:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @brief Common part of a list::iterator.
  91:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
  92:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  A simple type to walk a doubly-linked list.  All operations here should
  93:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  be self-explanatory after taking any decent introductory data structures
  94:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  course.
  95:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @endif
  96:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   */
  97:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   struct _List_iterator_base
  98:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
  99:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef size_t                        size_type;
 100:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef ptrdiff_t                     difference_type;
 101:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef bidirectional_iterator_tag    iterator_category;
 102:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 103:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /// The only member points to the %list element.
 104:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node_base* _M_node;
 105:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 106:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_iterator_base(_List_node_base* __x)
 107:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : _M_node(__x)
 108:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 109:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 110:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_iterator_base()
 111:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 112:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 113:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /// Walk the %list forward.
 114:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 115:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_incr()
 116:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { _M_node = _M_node->_M_next; }
 117:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 118:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /// Walk the %list backward.
 119:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 120:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_decr()
 121:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { _M_node = _M_node->_M_prev; }
 122:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 123:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     bool
 124:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator==(const _List_iterator_base& __x) const
 125:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return _M_node == __x._M_node; }
 126:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 127:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     bool
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 74


 128:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator!=(const _List_iterator_base& __x) const
 129:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return _M_node != __x._M_node; }
 130:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
 131:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 132:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /**
 133:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @brief A list::iterator.
 134:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 135:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  In addition to being used externally, a list holds one of these
 136:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  internally, pointing to the sequence of data.
 137:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 138:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @if maint
 139:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  All the functions are op overloads.
 140:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @endif
 141:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   */
 142:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 143:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     struct _List_iterator : public _List_iterator_base
 144:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
 145:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_iterator<_Tp,_Tp&,_Tp*>             iterator;
 146:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_iterator<_Tp,const _Tp&,const _Tp*> const_iterator;
 147:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_iterator<_Tp,_Ref,_Ptr>             _Self;
 148:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 149:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _Tp                                       value_type;
 150:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _Ptr                                      pointer;
 151:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _Ref                                      reference;
 152:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_node<_Tp>                           _Node;
 153:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 154:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_iterator(_Node* __x)
 155:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : _List_iterator_base(__x)
 156:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 157:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 158:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_iterator()
 159:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 160:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 161:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_iterator(const iterator& __x)
 162:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : _List_iterator_base(__x._M_node)
 163:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 164:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 165:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     reference
 166:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator*() const
 167:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return static_cast<_Node*>(_M_node)->_M_data; }
 168:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // Must downcast from List_node_base to _List_node to get to _M_data.
 169:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 170:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     pointer
 171:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator->() const
 172:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return &(operator*()); }
 173:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 174:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Self&
 175:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator++()
 176:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 177:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       this->_M_incr();
 178:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return *this;
 179:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 180:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 181:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Self
 182:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator++(int)
 183:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 184:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _Self __tmp = *this;
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 75


 185:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       this->_M_incr();
 186:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return __tmp;
 187:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 188:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 189:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Self&
 190:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator--()
 191:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 192:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       this->_M_decr();
 193:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return *this;
 194:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 195:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 196:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Self
 197:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator--(int)
 198:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 199:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _Self __tmp = *this;
 200:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       this->_M_decr();
 201:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return __tmp;
 202:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 203:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
 204:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 205:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 206:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /// @if maint Primary default version.  @endif
 207:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /**
 208:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @if maint
 209:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  See bits/stl_deque.h's _Deque_alloc_base for an explanation.
 210:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @endif
 211:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   */
 212:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   template<typename _Tp, typename _Allocator, bool _IsStatic>
 213:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     class _List_alloc_base
 214:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
 215:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   public:
 216:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef typename _Alloc_traits<_Tp, _Allocator>::allocator_type
 217:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****             allocator_type;
 218:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 219:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     allocator_type
 220:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     get_allocator() const { return _M_node_allocator; }
 221:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 222:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_alloc_base(const allocator_type& __a)
 223:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : _M_node_allocator(__a)
 224:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 225:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 226:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   protected:
 227:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node<_Tp>*
 228:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_get_node()
 229:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return _M_node_allocator.allocate(1); }
 230:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 231:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 232:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_put_node(_List_node<_Tp>* __p)
 233:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { _M_node_allocator.deallocate(__p, 1); }
 234:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 235:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // NOTA BENE
 236:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // The stored instance is not actually of "allocator_type"'s type.  Instead
 237:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // we rebind the type to Allocator<List_node<Tp>>, which according to
 238:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // [20.1.5]/4 should probably be the same.  List_node<Tp> is not the same
 239:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // size as Tp (it's two pointers larger), and specializations on Tp may go
 240:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // unused because List_node<Tp> is being bound instead.
 241:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     //
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 76


 242:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // We put this to the test in get_allocator above; if the two types are
 243:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // actually different, there had better be a conversion between them.
 244:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     //
 245:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // None of the predefined allocators shipped with the library (as of 3.1)
 246:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // use this instantiation anyhow; they're all instanceless.
 247:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typename _Alloc_traits<_List_node<_Tp>, _Allocator>::allocator_type
 248:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****              _M_node_allocator;
 249:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 250:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node<_Tp>* _M_node;
 251:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
 252:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 253:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /// @if maint Specialization for instanceless allocators.  @endif
 254:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   template<typename _Tp, typename _Allocator>
 255:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     class _List_alloc_base<_Tp, _Allocator, true>
 256:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
 257:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   public:
 258:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef typename _Alloc_traits<_Tp, _Allocator>::allocator_type
 259:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****             allocator_type;
 260:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 261:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     allocator_type
 262:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     get_allocator() const { return allocator_type(); }
 263:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 264:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_alloc_base(const allocator_type&)
 265:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { }
 266:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 267:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   protected:
 268:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // See comment in primary template class about why this is safe for the
 269:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // standard predefined classes.
 270:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef typename _Alloc_traits<_List_node<_Tp>, _Allocator>::_Alloc_type
 271:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****             _Alloc_type;
 272:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 273:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node<_Tp>*
 274:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_get_node()
 275:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return _Alloc_type::allocate(1); }
 276:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 277:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 278:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_put_node(_List_node<_Tp>* __p)
 279:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { _Alloc_type::deallocate(__p, 1); }
 280:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 281:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_node<_Tp>* _M_node;
 282:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
 283:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 284:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 285:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /**
 286:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @if maint
 287:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  See bits/stl_deque.h's _Deque_base for an explanation.
 288:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @endif
 289:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   */
 290:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   template <typename _Tp, typename _Alloc>
 291:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     class _List_base
 292:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : public _List_alloc_base<_Tp, _Alloc,
 293:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****                               _Alloc_traits<_Tp, _Alloc>::_S_instanceless>
 294:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
 295:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   public:
 296:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_alloc_base<_Tp, _Alloc,
 297:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****                              _Alloc_traits<_Tp, _Alloc>::_S_instanceless>
 298:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****             _Base;
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 77


 299:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef typename _Base::allocator_type allocator_type;
 300:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 301:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _List_base(const allocator_type& __a)
 302:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : _Base(__a)
 303:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 304:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _M_node = _M_get_node();
 305:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _M_node->_M_next = _M_node;
 306:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _M_node->_M_prev = _M_node;
 307:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 308:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 309:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // This is what actually destroys the list.
 310:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     ~_List_base()
 311:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 312:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       __clear();
 313:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _M_put_node(_M_node);
 314:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 315:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 316:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 317:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     __clear();
 318:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   };
 319:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 320:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 321:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   /**
 322:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @brief  A standard container with linear time access to elements, and
 323:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  fixed time insertion/deletion at any point in the sequence.
 324:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 325:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @ingroup Containers
 326:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @ingroup Sequences
 327:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 328:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 329:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 330:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  <a href="tables.html#67">sequence</a>, including the
 331:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 332:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  %exception of @c at and @c operator[].
 333:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 334:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  This is a @e doubly @e linked %list.  Traversal up and down the %list
 335:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  requires linear time, but adding and removing elements (or @e nodes) is
 336:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  done in constant time, regardless of where the change takes place.
 337:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  Unlike std::vector and std::deque, random-access iterators are not
 338:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  provided, so subscripting ( @c [] ) access is not allowed.  For algorithms
 339:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  which only need sequential access, this lack makes no difference.
 340:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 341:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  Also unlike the other standard containers, std::list provides specialized 
 342:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  algorithms %unique to linked lists, such as splicing, sorting, and
 343:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  in-place reversal.
 344:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 345:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @if maint
 346:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  A couple points on memory allocation for list<Tp>:
 347:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 348:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  First, we never actually allocate a Tp, we allocate List_node<Tp>'s
 349:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  and trust [20.1.5]/4 to DTRT.  This is to ensure that after elements from
 350:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  %list<X,Alloc1> are spliced into %list<X,Alloc2>, destroying the memory of
 351:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  the second %list is a valid operation, i.e., Alloc1 giveth and Alloc2
 352:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  taketh away.
 353:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *
 354:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  Second, a %list conceptually represented as
 355:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @code
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 78


 356:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *    A <---> B <---> C <---> D
 357:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @endcode
 358:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  is actually circular; a link exists between A and D.  The %list class
 359:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  holds (as its only data member) a private list::iterator pointing to
 360:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @e D, not to @e A!  To get to the head of the %list, we start at the tail
 361:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  and move forward by one.  When this member iterator's next/previous
 362:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  pointers refer to itself, the %list is %empty.
 363:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****    *  @endif
 364:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   */
 365:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   template<typename _Tp, typename _Alloc = allocator<_Tp> >
 366:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     class list : protected _List_base<_Tp, _Alloc>
 367:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   {
 368:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // concept requirements
 369:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     __glibcpp_class_requires(_Tp, _SGIAssignableConcept)
 370:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 371:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_base<_Tp, _Alloc>                       _Base;
 372:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 373:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   public:
 374:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _Tp                                           value_type;
 375:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef value_type*                                   pointer;
 376:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef const value_type*                             const_pointer;
 377:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_iterator<_Tp,_Tp&,_Tp*>                 iterator;
 378:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_iterator<_Tp,const _Tp&,const _Tp*>     const_iterator;
 379:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef std::reverse_iterator<const_iterator>     const_reverse_iterator;
 380:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef std::reverse_iterator<iterator>                 reverse_iterator;
 381:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef value_type&                                   reference;
 382:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef const value_type&                             const_reference;
 383:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef size_t                                        size_type;
 384:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef ptrdiff_t                                     difference_type;
 385:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef typename _Base::allocator_type                allocator_type;
 386:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 387:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   protected:
 388:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // Note that pointers-to-_Node's can be ctor-converted to iterator types.
 389:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     typedef _List_node<_Tp>                               _Node;
 390:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 391:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /** @if maint
 392:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  One data member plus two memory-handling functions.  If the _Alloc
 393:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  type requires separate instances, then one of those will also be
 394:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  included, accumulated from the topmost parent.
 395:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @endif
 396:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 397:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     using _Base::_M_node;
 398:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     using _Base::_M_put_node;
 399:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     using _Base::_M_get_node;
 400:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 401:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 402:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @if maint
 403:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  An instance of user data.
 404:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 405:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Allocates space for a new node and constructs a copy of @a x in it.
 406:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @endif
 407:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 408:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Node*
 409:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_create_node(const value_type& __x)
 410:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 411:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _Node* __p = _M_get_node();
 412:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       try {
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 79


 413:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         _Construct(&__p->_M_data, __x);
 414:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       }
 415:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       catch(...)
 416:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       {
 417:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         _M_put_node(__p);
 418:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         __throw_exception_again;
 419:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       }
 420:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return __p;
 421:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 422:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 423:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 424:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @if maint
 425:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Allocates space for a new node and default-constructs a new instance
 426:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  of @c value_type in it.
 427:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @endif
 428:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 429:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _Node*
 430:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     _M_create_node()
 431:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 432:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       _Node* __p = _M_get_node();
 433:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       try {
 434:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         _Construct(&__p->_M_data);
 435:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       }
 436:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       catch(...)
 437:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       {
 438:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         _M_put_node(__p);
 439:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         __throw_exception_again;
 440:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       }
 441:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return __p;
 442:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 443:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 444:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   public:
 445:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // [23.2.2.1] construct/copy/destroy
 446:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // (assign() and get_allocator() are also listed in this section)
 447:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 448:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Default constructor creates no elements.
 449:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 450:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     explicit
 451:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     list(const allocator_type& __a = allocator_type())
 452:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     : _Base(__a) { }
 453:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 454:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 455:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Create a %list with copies of an exemplar element.
 456:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  n  The number of elements to initially create.
 457:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  value  An element to copy.
 458:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      * 
 459:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This constructor fills the %list with @a n copies of @a value.
 460:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 461:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     list(size_type __n, const value_type& __value,
 462:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****          const allocator_type& __a = allocator_type())
 463:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       : _Base(__a)
 464:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       { this->insert(begin(), __n, __value); }
 465:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 466:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 467:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Create a %list with default elements.
 468:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  n  The number of elements to initially create.
 469:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      * 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 80


 470:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This constructor fills the %list with @a n copies of a
 471:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  default-constructed element.
 472:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 473:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     explicit
 474:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     list(size_type __n)
 475:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       : _Base(allocator_type())
 476:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       { this->insert(begin(), __n, value_type()); }
 477:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 478:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 479:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  %List copy constructor.
 480:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  A %list of identical element and allocator types.
 481:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      * 
 482:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  The newly-created %list uses a copy of the allocation object used
 483:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  by @a x.
 484:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 485:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     list(const list& __x)
 486:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       : _Base(__x.get_allocator())
 487:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       { this->insert(begin(), __x.begin(), __x.end()); }
 488:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 489:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 490:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Builds a %list from a range.
 491:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  first  An input iterator.
 492:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  last  An input iterator.
 493:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      * 
 494:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Create a %list consisting of copies of the elements from [first,last).
 495:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is linear in N (where N is distance(first,last)).
 496:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 497:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @if maint
 498:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  We don't need any dispatching tricks here, because insert does all of
 499:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  that anyway.
 500:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @endif
 501:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 502:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     template<typename _InputIterator>
 503:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       list(_InputIterator __first, _InputIterator __last,
 504:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****            const allocator_type& __a = allocator_type())
 505:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       : _Base(__a)
 506:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       { this->insert(begin(), __first, __last); }
 507:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 508:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 509:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  The dtor only erases the elements, and note that if the elements
 510:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  themselves are pointers, the pointed-to memory is not touched in any
 511:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  way.  Managing the pointer is the user's responsibilty.
 512:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 513:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     ~list() { }
 514:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 515:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 516:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  %List assignment operator.
 517:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  A %list of identical element and allocator types.
 518:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      * 
 519:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  All the elements of @a x are copied, but unlike the copy constructor,
 520:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the allocator object is not copied.
 521:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 522:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     list&
 523:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     operator=(const list& __x);
 524:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 525:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 526:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Assigns a given value to a %list.
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 81


 527:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  n  Number of elements to be assigned.
 528:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  val  Value to be assigned.
 529:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 530:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function fills a %list with @a n copies of the given value.
 531:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Note that the assignment completely changes the %list and that the
 532:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  resulting %list's size is the same as the number of elements assigned.
 533:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Old data may be lost.
 534:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 535:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 536:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     assign(size_type __n, const value_type& __val) { _M_fill_assign(__n, __val); }
 537:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 538:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 539:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Assigns a range to a %list.
 540:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  first  An input iterator.
 541:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  last   An input iterator.
 542:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 543:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function fills a %list with copies of the elements in the
 544:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  range [first,last).
 545:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 546:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Note that the assignment completely changes the %list and that the
 547:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  resulting %list's size is the same as the number of elements assigned.
 548:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Old data may be lost.
 549:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 550:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     template<typename _InputIterator>
 551:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       void
 552:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       assign(_InputIterator __first, _InputIterator __last)
 553:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       {
 554:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         // Check whether it's an integral type.  If so, it's not an iterator.
 555:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         typedef typename _Is_integer<_InputIterator>::_Integral _Integral;
 556:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         _M_assign_dispatch(__first, __last, _Integral());
 557:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       }
 558:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 559:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /// Get a copy of the memory allocation object.
 560:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     allocator_type
 561:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     get_allocator() const { return _Base::get_allocator(); }
 562:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 563:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // iterators
 564:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 565:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read/write iterator that points to the first element in the
 566:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  %list.  Iteration is done in ordinary element order.
 567:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 568:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     iterator
 569:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     begin() { return static_cast<_Node*>(_M_node->_M_next); }
 5574              	LM255:
 5575 0000 55       		pushl	%ebp
 5576 0001 89E5     		movl	%esp, %ebp
 5577 0003 53       		pushl	%ebx
 5578 0004 83EC14   		subl	$20, %esp
 5579 0007 8B5D08   		movl	8(%ebp), %ebx
 5581              	LM256:
 5582              	LBB46:
 5583 000a 8B450C   		movl	12(%ebp), %eax
 5584 000d 8B00     		movl	(%eax), %eax
 5585 000f 8B00     		movl	(%eax), %eax
 5586 0011 89442404 		movl	%eax, 4(%esp)
 5587 0015 891C24   		movl	%ebx, (%esp)
 5588 0018 E8000000 		call	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 82


 5588      00
 5589              	LBE46:
 5590 001d 89D8     		movl	%ebx, %eax
 5591 001f 83C414   		addl	$20, %esp
 5592 0022 5B       		popl	%ebx
 5593 0023 5D       		popl	%ebp
 5594 0024 C20400   		ret	$4
 5595              	Lscope20:
 5597 0027 90       		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE3endEv,"x"
 5598              		.linkonce discard
 5599              		.align 2
 5602              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EE3endEv
 5604              	__ZNSt4listI16ProcessImageDataSaIS0_EE3endEv:
 570:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** rator that points to the first element
 571:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  in the %list.  Iteration is done in ordinary element order.
 572:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 573:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     const_iterator
 574:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     begin() const { return static_cast<_Node*>(_M_node->_M_next); }
 575:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 576:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 577:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read/write iterator that points one past the last element in
 578:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the %list.  Iteration is done in ordinary element order.
 579:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 580:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     iterator
 581:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     end() { return _M_node; }
 582:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 583:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 5606              	LM257:
 5607 0000 55       		pushl	%ebp
 5608 0001 89E5     		movl	%esp, %ebp
 5609 0003 53       		pushl	%ebx
 5610 0004 83EC14   		subl	$20, %esp
 5611 0007 8B5D08   		movl	8(%ebp), %ebx
 5613              	LM258:
 5614              	LBB47:
 5615 000a 8B450C   		movl	12(%ebp), %eax
 5616 000d 8B00     		movl	(%eax), %eax
 5617 000f 89442404 		movl	%eax, 4(%esp)
 5618 0013 891C24   		movl	%ebx, (%esp)
 5619 0016 E8000000 		call	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
 5619      00
 5620              	LBE47:
 5621 001b 89D8     		movl	%ebx, %eax
 5622 001d 83C414   		addl	$20, %esp
 5623 0020 5B       		popl	%ebx
 5624 0021 5D       		popl	%ebp
 5625 0022 C20400   		ret	$4
 5626              	Lscope21:
 5628 0025 909090   		.section	.text$_ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv,"x"
 5629              		.linkonce discard
 5630              		.align 2
 5633              	.globl __ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv
 5635              	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv:
 5637              	LM259:
 5638 0000 55       		pushl	%ebp
 5639 0001 89E5     		movl	%esp, %ebp
 5640 0003 83EC08   		subl	$8, %esp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 83


 5642              	LM260:
 5643              	LBB48:
 5644 0006 8B4508   		movl	8(%ebp), %eax
 5645 0009 890424   		movl	%eax, (%esp)
 5646 000c E8000000 		call	__ZNSt19_List_iterator_base7_M_incrEv
 5646      00
 5648              	LM261:
 5649 0011 8B4508   		movl	8(%ebp), %eax
 5650 0014 C9       		leave
 5651 0015 C3       		ret
 5652              	LBE48:
 5653              	Lscope22:
 5655 0016 9090     		.section	.text$_ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv,"x"
 5656              		.linkonce discard
 5657              		.align 2
 5660              	.globl __ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv
 5662              	__ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv:
 5664              	LM262:
 5665 0000 55       		pushl	%ebp
 5666 0001 89E5     		movl	%esp, %ebp
 5668              	LM263:
 5669              	LBB49:
 5670 0003 8B4508   		movl	8(%ebp), %eax
 5671 0006 8B00     		movl	(%eax), %eax
 5672 0008 83C008   		addl	$8, %eax
 5673 000b 5D       		popl	%ebp
 5674 000c C3       		ret
 5675              	LBE49:
 5676              	Lscope23:
 5678 000d 909090   		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE9push_backERKS0_,"x"
 5679              		.linkonce discard
 5680              		.align 2
 5684              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EE9push_backERKS0_
 5686              	__ZNSt4listI16ProcessImageDataSaIS0_EE9push_backERKS0_:
 584:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** s a read-only (constant) iterator that points one past the last
 585:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  element in the %list.  Iteration is done in ordinary element order.
 586:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 587:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     const_iterator
 588:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     end() const { return _M_node; }
 589:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 590:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 591:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read/write reverse iterator that points to the last element in
 592:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the %list.  Iteration is done in reverse element order.
 593:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 594:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     reverse_iterator
 595:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     rbegin() { return reverse_iterator(end()); }
 596:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 597:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 598:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read-only (constant) reverse iterator that points to the last
 599:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  element in the %list.  Iteration is done in reverse element order.
 600:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 601:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     const_reverse_iterator
 602:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     rbegin() const { return const_reverse_iterator(end()); }
 603:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 604:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 605:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read/write reverse iterator that points to one before the
 606:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  first element in the %list.  Iteration is done in reverse element
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 84


 607:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  order.
 608:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 609:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     reverse_iterator
 610:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     rend() { return reverse_iterator(begin()); }
 611:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 612:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 613:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read-only (constant) reverse iterator that points to one
 614:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  before the first element in the %list.  Iteration is done in reverse
 615:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  element order.
 616:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 617:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     const_reverse_iterator
 618:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     rend() const
 619:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { return const_reverse_iterator(begin()); }
 620:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 621:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // [23.2.2.2] capacity
 622:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 623:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns true if the %list is empty.  (Thus begin() would equal end().)
 624:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 625:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     bool
 626:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     empty() const { return _M_node->_M_next == _M_node; }
 627:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 628:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**  Returns the number of elements in the %list.  */
 629:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     size_type
 630:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     size() const { return distance(begin(), end()); }
 631:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 632:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**  Returns the size() of the largest possible %list.  */
 633:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     size_type
 634:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     max_size() const { return size_type(-1); }
 635:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 636:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 637:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Resizes the %list to the specified number of elements.
 638:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  new_size  Number of elements the %list should contain.
 639:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  Data with which new elements should be populated.
 640:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 641:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will %resize the %list to the specified number of
 642:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  elements.  If the number is smaller than the %list's current size the
 643:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  %list is truncated, otherwise the %list is extended and new elements
 644:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  are populated with given data.
 645:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 646:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 647:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     resize(size_type __new_size, const value_type& __x);
 648:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 649:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 650:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Resizes the %list to the specified number of elements.
 651:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  new_size  Number of elements the %list should contain.
 652:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 653:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will resize the %list to the specified number of
 654:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  elements.  If the number is smaller than the %list's current size the
 655:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  %list is truncated, otherwise the %list is extended and new elements
 656:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  are default-constructed.
 657:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 658:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 659:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     resize(size_type __new_size) { this->resize(__new_size, value_type()); }
 660:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 661:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // element access
 662:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 663:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read/write reference to the data at the first element of the
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 85


 664:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  %list.
 665:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 666:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     reference
 667:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     front() { return *begin(); }
 668:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 669:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 670:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read-only (constant) reference to the data at the first
 671:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  element of the %list.
 672:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 673:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     const_reference
 674:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     front() const { return *begin(); }
 675:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 676:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 677:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read/write reference to the data at the last element of the
 678:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  %list.
 679:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 680:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     reference
 681:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     back() { return *(--end()); }
 682:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 683:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 684:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Returns a read-only (constant) reference to the data at the last
 685:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  element of the %list.
 686:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 687:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     const_reference
 688:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     back() const { return *(--end()); }
 689:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 690:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // [23.2.2.3] modifiers
 691:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 692:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Add data to the front of the %list.
 693:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  Data to be added.
 694:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 695:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is a typical stack operation.  The function creates an element at
 696:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the front of the %list and assigns the given data to it.  Due to the
 697:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  nature of a %list this operation can be done in constant time, and
 698:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  does not invalidate iterators and references.
 699:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 700:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 701:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     push_front(const value_type& __x) { this->insert(begin(), __x); }
 702:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 703:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   #ifdef _GLIBCPP_DEPRECATED
 704:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 705:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Add data to the front of the %list.
 706:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 707:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is a typical stack operation.  The function creates a
 708:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  default-constructed element at the front of the %list.  Due to the
 709:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  nature of a %list this operation can be done in constant time.  You
 710:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  should consider using push_front(value_type()) instead.
 711:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 712:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must
 713:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see
 714:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *        c++config.h.
 715:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 716:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 717:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     push_front() { this->insert(begin(), value_type()); }
 718:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   #endif
 719:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 720:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 86


 721:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Removes first element.
 722:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 723:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is a typical stack operation.  It shrinks the %list by one.
 724:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 725:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and only invalidates iterators/references to the element being
 726:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  removed.
 727:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 728:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Note that no data is returned, and if the first element's data is
 729:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  needed, it should be retrieved before pop_front() is called.
 730:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 731:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 732:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     pop_front() { this->erase(begin()); }
 733:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 734:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 735:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Add data to the end of the %list.
 736:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  Data to be added.
 737:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 738:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is a typical stack operation.  The function creates an element at
 739:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the end of the %list and assigns the given data to it.  Due to the
 740:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  nature of a %list this operation can be done in constant time, and
 741:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  does not invalidate iterators and references.
 742:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 743:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 744:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     push_back(const value_type& __x) { this->insert(end(), __x); }
 745:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 746:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   #ifdef _GLIBCPP_DEPRECATED
 5688              	LM264:
 5689 0000 55       		pushl	%ebp
 5690 0001 89E5     		movl	%esp, %ebp
 5691 0003 53       		pushl	%ebx
 5692 0004 83EC34   		subl	$52, %esp
 5694              	LM265:
 5695              	LBB50:
 5696 0007 8D5DE8   		leal	-24(%ebp), %ebx
 5697 000a 8D55D8   		leal	-40(%ebp), %edx
 5698 000d 8B4508   		movl	8(%ebp), %eax
 5699 0010 89442404 		movl	%eax, 4(%esp)
 5700 0014 891424   		movl	%edx, (%esp)
 5701 0017 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE3endEv
 5701      00
 5702 001c 83EC04   		subl	$4, %esp
 5703 001f 8D55D8   		leal	-40(%ebp), %edx
 5704 0022 8B450C   		movl	12(%ebp), %eax
 5705 0025 8944240C 		movl	%eax, 12(%esp)
 5706 0029 89542408 		movl	%edx, 8(%esp)
 5707 002d 8B4508   		movl	8(%ebp), %eax
 5708 0030 89442404 		movl	%eax, 4(%esp)
 5709 0034 891C24   		movl	%ebx, (%esp)
 5710 0037 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_
 5710      00
 5711 003c 83EC04   		subl	$4, %esp
 5712 003f 8B5DFC   		movl	-4(%ebp), %ebx
 5713 0042 C9       		leave
 5714 0043 C3       		ret
 5715              	LBE50:
 5716              	Lscope24:
 5719              		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE5clearEv,"x"
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 87


 5720              		.linkonce discard
 5721              		.align 2
 5724              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EE5clearEv
 5726              	__ZNSt4listI16ProcessImageDataSaIS0_EE5clearEv:
 747:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h **** end of the %list.
 748:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 749:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is a typical stack operation.  The function creates a
 750:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  default-constructed element at the end of the %list.  Due to the nature
 751:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  of a %list this operation can be done in constant time.  You should
 752:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  consider using push_back(value_type()) instead.
 753:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 754:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must
 755:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see
 756:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *        c++config.h.
 757:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 758:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 759:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     push_back() { this->insert(end(), value_type()); }
 760:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   #endif
 761:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 762:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 763:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Removes last element.
 764:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 765:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This is a typical stack operation.  It shrinks the %list by one.
 766:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 767:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and only invalidates iterators/references to the element being
 768:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  removed.
 769:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 770:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Note that no data is returned, and if the last element's data is
 771:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  needed, it should be retrieved before pop_back() is called.
 772:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 773:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 774:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     pop_back()
 775:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 776:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       iterator __tmp = end();
 777:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       this->erase(--__tmp);
 778:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 779:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 780:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 781:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Inserts given value into %list before specified iterator.
 782:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  position  An iterator into the %list.
 783:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  Data to be inserted.
 784:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @return  An iterator that points to the inserted data.
 785:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 786:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will insert a copy of the given value before the specified
 787:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  location.
 788:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 789:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and does not invalidate iterators and references.
 790:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 791:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     iterator
 792:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     insert(iterator __position, const value_type& __x);
 793:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 794:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   #ifdef _GLIBCPP_DEPRECATED
 795:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 796:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Inserts an element into the %list.
 797:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  position  An iterator into the %list.
 798:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @return  An iterator that points to the inserted element.
 799:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 88


 800:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will insert a default-constructed element before the
 801:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  specified location.  You should consider using
 802:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  insert(position,value_type()) instead.
 803:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 804:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and does not invalidate iterators and references.
 805:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 806:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must
 807:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see
 808:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *        c++config.h.
 809:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 810:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     iterator
 811:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     insert(iterator __position) { return insert(__position, value_type()); }
 812:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   #endif
 813:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 814:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 815:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Inserts a number of copies of given data into the %list.
 816:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  position  An iterator into the %list.
 817:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  n  Number of elements to be inserted.
 818:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  Data to be inserted.
 819:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 820:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will insert a specified number of copies of the given data
 821:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  before the location specified by @a position.
 822:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 823:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 824:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and does not invalidate iterators and references.
 825:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 826:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 827:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     insert(iterator __pos, size_type __n, const value_type& __x)
 828:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     { _M_fill_insert(__pos, __n, __x); }
 829:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 830:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 831:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Inserts a range into the %list.
 832:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  pos  An iterator into the %list.
 833:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  first  An input iterator.
 834:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  last   An input iterator.
 835:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 836:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will insert copies of the data in the range [first,last)
 837:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  into the %list before the location specified by @a pos.
 838:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 839:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 840:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and does not invalidate iterators and references.
 841:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 842:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     template<typename _InputIterator>
 843:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       void
 844:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       insert(iterator __pos, _InputIterator __first, _InputIterator __last)
 845:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       {
 846:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         // Check whether it's an integral type.  If so, it's not an iterator.
 847:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         typedef typename _Is_integer<_InputIterator>::_Integral _Integral;
 848:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         _M_insert_dispatch(__pos, __first, __last, _Integral());
 849:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       }
 850:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 851:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 852:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Remove element at given position.
 853:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  position  Iterator pointing to element to be erased.
 854:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @return  An iterator pointing to the next element (or end()).
 855:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 856:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will erase the element at the given position and thus
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 89


 857:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  shorten the %list by one.
 858:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 859:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 860:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and only invalidates iterators/references to the element being
 861:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  removed.
 862:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  The user is also cautioned that
 863:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  this function only erases the element, and that if the element is itself
 864:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  a pointer, the pointed-to memory is not touched in any way.  Managing
 865:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the pointer is the user's responsibilty.
 866:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 867:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     iterator
 868:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     erase(iterator __position);
 869:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 870:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 871:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Remove a range of elements.
 872:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  first  Iterator pointing to the first element to be erased.
 873:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  last  Iterator pointing to one past the last element to be
 874:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *                erased.
 875:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @return  An iterator pointing to the element pointed to by @a last
 876:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *           prior to erasing (or end()).
 877:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 878:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This function will erase the elements in the range [first,last) and
 879:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  shorten the %list accordingly.
 880:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 881:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Due to the nature of a %list this operation can be done in constant
 882:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  time, and only invalidates iterators/references to the element being
 883:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  removed.
 884:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  The user is also cautioned that
 885:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  this function only erases the elements, and that if the elements
 886:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  themselves are pointers, the pointed-to memory is not touched in any
 887:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  way.  Managing the pointer is the user's responsibilty.
 888:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 889:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     iterator
 890:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     erase(iterator __first, iterator __last)
 891:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     {
 892:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       while (__first != __last)
 893:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****         erase(__first++);
 894:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****       return __last;
 895:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     }
 896:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 897:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 898:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @brief  Swaps data with another %list.
 899:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  @param  x  A %list of the same element and allocator types.
 900:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *
 901:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  This exchanges the elements between two lists in constant time.
 902:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  (It is only swapping a single pointer, so it should be quite fast.)
 903:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Note that the global std::swap() function is specialized such that
 904:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  std::swap(l1,l2) will feed to this function.
 905:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 906:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 907:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     swap(list& __x) { std::swap(_M_node, __x._M_node); }
 908:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 909:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 910:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  Erases all the elements.  Note that this function only erases the
 911:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  elements, and that if the elements themselves are pointers, the
 912:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  pointed-to memory is not touched in any way.  Managing the pointer is
 913:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****      *  the user's responsibilty.
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 90


 914:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     */
 915:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     void
 916:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     clear() { _Base::__clear(); }
 917:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****   
 918:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     // [23.2.2.4] list operations
 919:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_list.h ****     /**
 5728              	LM266:
 5729 0000 55       		pushl	%ebp
 5730 0001 89E5     		movl	%esp, %ebp
 5731 0003 83EC08   		subl	$8, %esp
 5733              	LM267:
 5734              	LBB51:
 5735 0006 8B4508   		movl	8(%ebp), %eax
 5736 0009 890424   		movl	%eax, (%esp)
 5737 000c E8000000 		call	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv
 5737      00
 5738 0011 C9       		leave
 5739 0012 C3       		ret
 5740              	LBE51:
 5741              	Lscope25:
 5744 0013 90       		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EE9push_backERKS0_,"x"
 5745              		.linkonce discard
 5746              		.align 2
 5750              	.globl __ZNSt4listI13LogBinaryDataSaIS0_EE9push_backERKS0_
 5752              	__ZNSt4listI13LogBinaryDataSaIS0_EE9push_backERKS0_:
 5754              	LM268:
 5755 0000 55       		pushl	%ebp
 5756 0001 89E5     		movl	%esp, %ebp
 5757 0003 53       		pushl	%ebx
 5758 0004 83EC34   		subl	$52, %esp
 5760              	LM269:
 5761              	LBB52:
 5762 0007 8D5DE8   		leal	-24(%ebp), %ebx
 5763 000a 8D55D8   		leal	-40(%ebp), %edx
 5764 000d 8B4508   		movl	8(%ebp), %eax
 5765 0010 89442404 		movl	%eax, 4(%esp)
 5766 0014 891424   		movl	%edx, (%esp)
 5767 0017 E8000000 		call	__ZNSt4listI13LogBinaryDataSaIS0_EE3endEv
 5767      00
 5768 001c 83EC04   		subl	$4, %esp
 5769 001f 8D55D8   		leal	-40(%ebp), %edx
 5770 0022 8B450C   		movl	12(%ebp), %eax
 5771 0025 8944240C 		movl	%eax, 12(%esp)
 5772 0029 89542408 		movl	%edx, 8(%esp)
 5773 002d 8B4508   		movl	8(%ebp), %eax
 5774 0030 89442404 		movl	%eax, 4(%esp)
 5775 0034 891C24   		movl	%ebx, (%esp)
 5776 0037 E8000000 		call	__ZNSt4listI13LogBinaryDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_
 5776      00
 5777 003c 83EC04   		subl	$4, %esp
 5778 003f 8B5DFC   		movl	-4(%ebp), %ebx
 5779 0042 C9       		leave
 5780 0043 C3       		ret
 5781              	LBE52:
 5782              	Lscope26:
 5785              		.text
 5786 21d9 90       		.align 2
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 91


 5791              	__Z41__static_initialization_and_destruction_0ii:
 5793              	Ltext2:
 5795              	LM270:
 5796 21da 55       		pushl	%ebp
 5797 21db 89E5     		movl	%esp, %ebp
 5798 21dd 57       		pushl	%edi
 5799 21de 56       		pushl	%esi
 5800 21df 53       		pushl	%ebx
 5801 21e0 83EC6C   		subl	$108, %esp
 5802 21e3 C745C400 		movl	$___gxx_personality_sj0, -60(%ebp)
 5802      000000
 5803 21ea C745C81C 		movl	$LLSDA2338, -56(%ebp)
 5803      000000
 5804 21f1 8D45CC   		leal	-52(%ebp), %eax
 5805 21f4 8D55E8   		leal	-24(%ebp), %edx
 5806 21f7 8910     		movl	%edx, (%eax)
 5807 21f9 BAD12200 		movl	$L181, %edx
 5807      00
 5808 21fe 895004   		movl	%edx, 4(%eax)
 5809 2201 896008   		movl	%esp, 8(%eax)
 5810 2204 8D45AC   		leal	-84(%ebp), %eax
 5811 2207 890424   		movl	%eax, (%esp)
 5812 220a E8000000 		call	__Unwind_SjLj_Register
 5812      00
 5814              	Ltext3:
   1:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // Standard iostream objects -*- C++ -*-
   2:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
   3:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // Copyright (C) 1997, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.
   4:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** //
   5:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // software; you can redistribute it and/or modify it under the
   7:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // terms of the GNU General Public License as published by the
   8:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // Free Software Foundation; either version 2, or (at your option)
   9:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // any later version.
  10:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  11:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // This library is distributed in the hope that it will be useful,
  12:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // GNU General Public License for more details.
  15:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  16:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // You should have received a copy of the GNU General Public License along
  17:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // with this library; see the file COPYING.  If not, write to the Free
  18:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
  19:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // USA.
  20:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  21:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // As a special exception, you may use this file as part of a free software
  22:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // library without restriction.  Specifically, if other files instantiate
  23:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // templates or use macros or inline functions from this file, or you compile
  24:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // this file and link it with other files to produce an executable, this
  25:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // file does not by itself cause the resulting executable to be covered by
  26:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // the GNU General Public License.  This exception does not however
  27:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // invalidate any other reasons why the executable file might be covered by
  28:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // the GNU General Public License.
  29:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  30:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** //
  31:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  32:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** //
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 92


  33:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  34:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** /** @file iostream
  35:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****  *  This is a Standard C++ Library header.  You should @c #include this header
  36:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****  *  in your programs, rather than any of the "st[dl]_*.h" implementation files.
  37:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****  */
  38:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  39:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #ifndef _CPP_IOSTREAM
  40:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #define _CPP_IOSTREAM	1
  41:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  42:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #pragma GCC system_header
  43:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  44:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #include <bits/c++config.h>
  45:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #include <ostream>
  46:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #include <istream>
  47:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  48:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** namespace std 
  49:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** {
  50:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   /**
  51:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  @name Standard Stream Objects
  52:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *
  53:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  54:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  objects</em>.  For other declarations, see
  55:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/27_io/howto.html#10 and the
  56:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  @link s27_2_iosfwd I/O forward declarations @endlink
  57:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *
  58:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  They are required by default to cooperate with the global C library's
  59:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  @c FILE streams, and to be available during program startup and
  60:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****    *  termination.  For more information, see the HOWTO linked to above.
  61:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   */
  62:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   //@{
  63:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern istream cin;		///< Linked to standard input
  64:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern ostream cout;		///< Linked to standard output
  65:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern ostream cerr;		///< Linked to standard error (unbuffered)
  66:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern ostream clog;		///< Linked to standard error (buffered)
  67:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  68:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #ifdef _GLIBCPP_USE_WCHAR_T
  69:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern wistream wcin;		///< Linked to standard input
  70:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern wostream wcout;	///< Linked to standard output
  71:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern wostream wcerr;	///< Linked to standard error (unbuffered)
  72:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   extern wostream wclog;	///< Linked to standard error (buffered)
  73:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** #endif
  74:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   //@}
  75:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream **** 
  76:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  77:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/iostream ****   static ios_base::Init __ioinit;
 5816              	LM271:
 5817 220f 817D0CFF 		cmpl	$65535, 12(%ebp)
 5817      FF0000
 5818 2216 7519     		jne	L167
 5819 2218 837D0801 		cmpl	$1, 8(%ebp)
 5820 221c 7513     		jne	L167
 5821 221e C7042400 		movl	$__ZSt8__ioinit, (%esp)
 5821      000000
 5822 2225 C745B0FF 		movl	$-1, -80(%ebp)
 5822      FFFFFF
 5823 222c E8000000 		call	__ZNSt8ios_base4InitC1Ev
 5823      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 93


 5824              	L167:
 5826              	Ltext4:
 5828              	LM272:
 5829 2231 817D0CFF 		cmpl	$65535, 12(%ebp)
 5829      FF0000
 5830 2238 7561     		jne	L168
 5831 223a 837D0801 		cmpl	$1, 8(%ebp)
 5832 223e 755B     		jne	L168
 5833 2240 8D45D8   		leal	-40(%ebp), %eax
 5834 2243 890424   		movl	%eax, (%esp)
 5835 2246 E8000000 		call	__ZNSaI16ProcessImageDataEC1Ev
 5835      00
 5836 224b 8D45D8   		leal	-40(%ebp), %eax
 5837 224e 89442404 		movl	%eax, 4(%esp)
 5838 2252 C7042410 		movl	$_g_resgen_png_image_list, (%esp)
 5838      000000
 5839 2259 C745B002 		movl	$2, -80(%ebp)
 5839      000000
 5840 2260 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EEC1ERKS1_
 5840      00
 5841 2265 EB29     		jmp	L170
 5842              	L169:
 5843 2267 8B45A4   		movl	-92(%ebp), %eax
 5844 226a 8945A8   		movl	%eax, -88(%ebp)
 5845 226d 8D45D8   		leal	-40(%ebp), %eax
 5846 2270 890424   		movl	%eax, (%esp)
 5847 2273 E8000000 		call	__ZNSaI16ProcessImageDataED1Ev
 5847      00
 5848 2278 8B55A8   		movl	-88(%ebp), %edx
 5849 227b 8955A4   		movl	%edx, -92(%ebp)
 5850              	L171:
 5851 227e 8B45A4   		movl	-92(%ebp), %eax
 5852 2281 890424   		movl	%eax, (%esp)
 5853 2284 C745B0FF 		movl	$-1, -80(%ebp)
 5853      FFFFFF
 5854 228b E8000000 		call	__Unwind_SjLj_Resume
 5854      00
 5855              	L170:
 5856 2290 8D45D8   		leal	-40(%ebp), %eax
 5857 2293 890424   		movl	%eax, (%esp)
 5858 2296 E8000000 		call	__ZNSaI16ProcessImageDataED1Ev
 5858      00
 5859              	L168:
 5861              	LM273:
 5862 229b 817D0CFF 		cmpl	$65535, 12(%ebp)
 5862      FF0000
 5863 22a2 7572     		jne	L173
 5864 22a4 837D0801 		cmpl	$1, 8(%ebp)
 5865 22a8 756C     		jne	L173
 5866 22aa 8D45D8   		leal	-40(%ebp), %eax
 5867 22ad 890424   		movl	%eax, (%esp)
 5868 22b0 E8000000 		call	__ZNSaI13LogBinaryDataEC1Ev
 5868      00
 5869 22b5 8D45D8   		leal	-40(%ebp), %eax
 5870 22b8 89442404 		movl	%eax, 4(%esp)
 5871 22bc C7042420 		movl	$_g_log_binary_data_list, (%esp)
 5871      000000
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 94


 5872 22c3 C745B001 		movl	$1, -80(%ebp)
 5872      000000
 5873 22ca E8000000 		call	__ZNSt4listI13LogBinaryDataSaIS0_EEC1ERKS1_
 5873      00
 5874 22cf EB3A     		jmp	L175
 5875              	L181:
 5876 22d1 8D6D18   		leal	24(%ebp), %ebp
 5877 22d4 8B45B0   		movl	-80(%ebp), %eax
 5878 22d7 8B55B4   		movl	-76(%ebp), %edx
 5879 22da 8955A4   		movl	%edx, -92(%ebp)
 5880 22dd 83F801   		cmpl	$1, %eax
 5881 22e0 7485     		je	L169
 5882              	L174:
 5883 22e2 8B45A4   		movl	-92(%ebp), %eax
 5884 22e5 8945A0   		movl	%eax, -96(%ebp)
 5885 22e8 8D45D8   		leal	-40(%ebp), %eax
 5886 22eb 890424   		movl	%eax, (%esp)
 5887 22ee E8000000 		call	__ZNSaI13LogBinaryDataED1Ev
 5887      00
 5888 22f3 8B55A0   		movl	-96(%ebp), %edx
 5889 22f6 8955A4   		movl	%edx, -92(%ebp)
 5890              	L176:
 5891 22f9 8B45A4   		movl	-92(%ebp), %eax
 5892 22fc 890424   		movl	%eax, (%esp)
 5893 22ff C745B0FF 		movl	$-1, -80(%ebp)
 5893      FFFFFF
 5894 2306 E8000000 		call	__Unwind_SjLj_Resume
 5894      00
 5895              	L175:
 5896 230b 8D45D8   		leal	-40(%ebp), %eax
 5897 230e 890424   		movl	%eax, (%esp)
 5898 2311 E8000000 		call	__ZNSaI13LogBinaryDataED1Ev
 5898      00
 5899              	L173:
 5900 2316 817D0CFF 		cmpl	$65535, 12(%ebp)
 5900      FF0000
 5901 231d 7519     		jne	L178
 5902 231f 837D0800 		cmpl	$0, 8(%ebp)
 5903 2323 7513     		jne	L178
 5904 2325 C7042420 		movl	$_g_log_binary_data_list, (%esp)
 5904      000000
 5905 232c C745B0FF 		movl	$-1, -80(%ebp)
 5905      FFFFFF
 5906 2333 E8000000 		call	__ZNSt4listI13LogBinaryDataSaIS0_EED1Ev
 5906      00
 5907              	L178:
 5909              	LM274:
 5910 2338 817D0CFF 		cmpl	$65535, 12(%ebp)
 5910      FF0000
 5911 233f 7519     		jne	L179
 5912 2341 837D0800 		cmpl	$0, 8(%ebp)
 5913 2345 7513     		jne	L179
 5914 2347 C7042410 		movl	$_g_resgen_png_image_list, (%esp)
 5914      000000
 5915 234e C745B0FF 		movl	$-1, -80(%ebp)
 5915      FFFFFF
 5916 2355 E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EED1Ev
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 95


 5916      00
 5917              	L179:
 5919              	Ltext5:
 5921              	LM275:
 5922 235a 817D0CFF 		cmpl	$65535, 12(%ebp)
 5922      FF0000
 5923 2361 7519     		jne	L166
 5924 2363 837D0800 		cmpl	$0, 8(%ebp)
 5925 2367 7513     		jne	L166
 5926 2369 C7042400 		movl	$__ZSt8__ioinit, (%esp)
 5926      000000
 5927 2370 C745B0FF 		movl	$-1, -80(%ebp)
 5927      FFFFFF
 5928 2377 E8000000 		call	__ZNSt8ios_base4InitD1Ev
 5928      00
 5929              	L166:
 5930 237c 8D45AC   		leal	-84(%ebp), %eax
 5931 237f 890424   		movl	%eax, (%esp)
 5932 2382 E8000000 		call	__Unwind_SjLj_Unregister
 5932      00
 5933 2387 83C46C   		addl	$108, %esp
 5934 238a 5B       		popl	%ebx
 5935 238b 5E       		popl	%esi
 5936 238c 5F       		popl	%edi
 5937 238d 5D       		popl	%ebp
 5938 238e C3       		ret
 5939              		.section	.gcc_except_table,""
 5940              	LLSDA2338:
 5941 001c FF       		.byte	0xff
 5942 001d FF       		.byte	0xff
 5943 001e 01       		.byte	0x1
 5944 001f 04       		.uleb128 LLSDACSE2338-LLSDACSB2338
 5945              	LLSDACSB2338:
 5946 0020 00       		.uleb128 0x0
 5947 0021 00       		.uleb128 0x0
 5948 0022 01       		.uleb128 0x1
 5949 0023 00       		.uleb128 0x0
 5950              	LLSDACSE2338:
 5951              		.text
 5952              	Lscope27:
 5954              		.section	.text$_ZNSt19_List_iterator_base7_M_incrEv,"x"
 5955              		.linkonce discard
 5956              		.align 2
 5959              	.globl __ZNSt19_List_iterator_base7_M_incrEv
 5961              	__ZNSt19_List_iterator_base7_M_incrEv:
 5963              	Ltext6:
 5965              	LM276:
 5966 0000 55       		pushl	%ebp
 5967 0001 89E5     		movl	%esp, %ebp
 5969              	LM277:
 5970              	LBB53:
 5971 0003 8B5508   		movl	8(%ebp), %edx
 5972 0006 8B4508   		movl	8(%ebp), %eax
 5973 0009 8B00     		movl	(%eax), %eax
 5974 000b 8B00     		movl	(%eax), %eax
 5975 000d 8902     		movl	%eax, (%edx)
 5976 000f 5D       		popl	%ebp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 96


 5977 0010 C3       		ret
 5978              	LBE53:
 5979              	Lscope28:
 5981 0011 909090   		.section	.text$_ZNKSt19_List_iterator_baseneERKS_,"x"
 5982              		.linkonce discard
 5983              		.align 2
 5987              	.globl __ZNKSt19_List_iterator_baseneERKS_
 5989              	__ZNKSt19_List_iterator_baseneERKS_:
 5991              	LM278:
 5992 0000 55       		pushl	%ebp
 5993 0001 89E5     		movl	%esp, %ebp
 5995              	LM279:
 5996              	LBB54:
 5997 0003 8B4508   		movl	8(%ebp), %eax
 5998 0006 8B550C   		movl	12(%ebp), %edx
 5999 0009 8B00     		movl	(%eax), %eax
 6000 000b 3B02     		cmpl	(%edx), %eax
 6001 000d 0F95C0   		setne	%al
 6002 0010 0FB6C0   		movzbl	%al, %eax
 6003 0013 5D       		popl	%ebp
 6004 0014 C3       		ret
 6005              	LBE54:
 6006              	Lscope29:
 6008 0015 909090   		.section	.text$_ZN10ThreadPool3RunEPNS_10IRunObjectENS_14ThreadPriorityE,"x"
 6009              		.linkonce discard
 6010              		.align 2
 6015              	.globl __ZN10ThreadPool3RunEPNS_10IRunObjectENS_14ThreadPriorityE
 6017              	__ZN10ThreadPool3RunEPNS_10IRunObjectENS_14ThreadPriorityE:
 6019              	Ltext7:
   1:../../mmi/resource/inc/ThreadPool.h **** #pragma once
   2:../../mmi/resource/inc/ThreadPool.h **** // Filename     : ThreadPool.h
   3:../../mmi/resource/inc/ThreadPool.h **** // Author       : Siddharth Barman
   4:../../mmi/resource/inc/ThreadPool.h **** // Date         : 18 Sept 2005
   5:../../mmi/resource/inc/ThreadPool.h **** // Refactored   : 29 Sept 2010 by Greg Labute
   6:../../mmi/resource/inc/ThreadPool.h **** /* Description  : Defines ThreadPool class. How to use the Thread Pool. First
   7:../../mmi/resource/inc/ThreadPool.h ****                 create a ThreadPool object. The default constructor will
   8:../../mmi/resource/inc/ThreadPool.h ****                 create 10 threads in the pool. To defer creation of the pool
   9:../../mmi/resource/inc/ThreadPool.h ****                 pass a pool size of 0 to the constructor.
  10:../../mmi/resource/inc/ThreadPool.h **** 
  11:../../mmi/resource/inc/ThreadPool.h ****                 You can use two approaches while working with the thread
  12:../../mmi/resource/inc/ThreadPool.h ****                 pool.
  13:../../mmi/resource/inc/ThreadPool.h **** 
  14:../../mmi/resource/inc/ThreadPool.h ****                 1. To make use of the thread pool, you will need to first
  15:../../mmi/resource/inc/ThreadPool.h ****                 create a function having the following signature
  16:../../mmi/resource/inc/ThreadPool.h ****                 DWORD WINAPI ThreadProc(LPVOID); Check the CreateThread
  17:../../mmi/resource/inc/ThreadPool.h ****                 documentation in MSDN to get details. Add this function to
  18:../../mmi/resource/inc/ThreadPool.h ****                 the pool by calling the Run() method and pass in the function
  19:../../mmi/resource/inc/ThreadPool.h ****                 name and a void* pointer to any object you want. The pool will
  20:../../mmi/resource/inc/ThreadPool.h ****                 pick up the function passed into Run() method and execute as
  21:../../mmi/resource/inc/ThreadPool.h ****                 threads in the pool become free.
  22:../../mmi/resource/inc/ThreadPool.h **** 
  23:../../mmi/resource/inc/ThreadPool.h ****                 2. Instead of using a function pointer, you can use an object
  24:../../mmi/resource/inc/ThreadPool.h ****                 of a class which derives from IRunObject. Pass a pointer to
  25:../../mmi/resource/inc/ThreadPool.h ****                 this object in the Run() method of the thread pool. As threads
  26:../../mmi/resource/inc/ThreadPool.h ****                 become free, the thread pool will call the Run() method of you
  27:../../mmi/resource/inc/ThreadPool.h ****                 r class. You will also need to write a body for AutoDelete() f
  28:../../mmi/resource/inc/ThreadPool.h ****                 unction. If the return value is true, the thread pool will use
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 97


  29:../../mmi/resource/inc/ThreadPool.h ****                 'delete' to free the object you pass in. If it returns false,
  30:../../mmi/resource/inc/ThreadPool.h ****                 the thread pool will not do anything else to the object after
  31:../../mmi/resource/inc/ThreadPool.h ****                 calling the Run() function.
  32:../../mmi/resource/inc/ThreadPool.h **** 
  33:../../mmi/resource/inc/ThreadPool.h ****                 It is possible to destroy the pool whenever you want by
  34:../../mmi/resource/inc/ThreadPool.h ****                 calling the Destroy() method. If you want to create a new pool
  35:../../mmi/resource/inc/ThreadPool.h ****                 call the Create() method.
  36:../../mmi/resource/inc/ThreadPool.h **** 
  37:../../mmi/resource/inc/ThreadPool.h ****                 If this code works, it was written by Siddharth Barman, email
  38:../../mmi/resource/inc/ThreadPool.h ****                 siddharth_b@yahoo.com.
  39:../../mmi/resource/inc/ThreadPool.h ****                 _____ _                        _  ______           _
  40:../../mmi/resource/inc/ThreadPool.h ****                 |_   _| |                      | | | ___ \         | |
  41:../../mmi/resource/inc/ThreadPool.h ****                 | | | |__  _ __ ___  __ _  __| | | |_/ /__   ___ | |
  42:../../mmi/resource/inc/ThreadPool.h ****                 | | | '_ \| '__/ _ \/ _` |/ _` | |  __/ _ \ / _ \| |
  43:../../mmi/resource/inc/ThreadPool.h ****                 | | | | | | | |  __/ (_| | (_| | | | | (_) | (_) | |
  44:../../mmi/resource/inc/ThreadPool.h ****                 \_/ |_| |_|_|  \___|\__,_|\__,_| \_|  \___/ \___/|_|
  45:../../mmi/resource/inc/ThreadPool.h **** ------------------------------------------------------------------------------*/
  46:../../mmi/resource/inc/ThreadPool.h **** 
  47:../../mmi/resource/inc/ThreadPool.h **** #include <list>
  48:../../mmi/resource/inc/ThreadPool.h **** #include <vector>
  49:../../mmi/resource/inc/ThreadPool.h **** 
  50:../../mmi/resource/inc/ThreadPool.h **** class ThreadPool
  51:../../mmi/resource/inc/ThreadPool.h **** {
  52:../../mmi/resource/inc/ThreadPool.h **** public:
  53:../../mmi/resource/inc/ThreadPool.h ****     // PoolSize is the number of worker threads that will be created.
  54:../../mmi/resource/inc/ThreadPool.h ****     ThreadPool(int poolSize = 10, int waitTimeForThreadsToCompleteMS = 5000);
  55:../../mmi/resource/inc/ThreadPool.h ****     virtual ~ThreadPool();
  56:../../mmi/resource/inc/ThreadPool.h **** 
  57:../../mmi/resource/inc/ThreadPool.h ****     // Use this method to create the worker threads if you specified a poolSize
  58:../../mmi/resource/inc/ThreadPool.h ****     // of 0 in the constructor, or if you want to change the number of worker threads.
  59:../../mmi/resource/inc/ThreadPool.h ****     // Returns: true if no error.
  60:../../mmi/resource/inc/ThreadPool.h ****     bool Create(int poolSize);
  61:../../mmi/resource/inc/ThreadPool.h **** 
  62:../../mmi/resource/inc/ThreadPool.h ****     // Use this method to destroy the worker threads. The destructor of
  63:../../mmi/resource/inc/ThreadPool.h ****     // this class will destroy the threads automatically.
  64:../../mmi/resource/inc/ThreadPool.h ****     void Destroy();
  65:../../mmi/resource/inc/ThreadPool.h **** 
  66:../../mmi/resource/inc/ThreadPool.h ****     // How many worker threads are in the pool?
  67:../../mmi/resource/inc/ThreadPool.h ****     int GetPoolSize() { return m_threads.size(); }
  68:../../mmi/resource/inc/ThreadPool.h **** 
  69:../../mmi/resource/inc/ThreadPool.h ****     // This decides whether a job is added to the front or back of the queue.
  70:../../mmi/resource/inc/ThreadPool.h ****     enum ThreadPriority { High, Low };
  71:../../mmi/resource/inc/ThreadPool.h **** 
  72:../../mmi/resource/inc/ThreadPool.h ****     // Run a job
  73:../../mmi/resource/inc/ThreadPool.h ****     void Run(LPTHREAD_START_ROUTINE pFunc, LPVOID pData, ThreadPriority priority = Low)
  74:../../mmi/resource/inc/ThreadPool.h ****         { AddJobToQueue(pFunc, pData, NULL, priority); }
  75:../../mmi/resource/inc/ThreadPool.h ****     struct IRunObject
  76:../../mmi/resource/inc/ThreadPool.h ****     {
  77:../../mmi/resource/inc/ThreadPool.h ****         virtual ~IRunObject() {}
  78:../../mmi/resource/inc/ThreadPool.h ****         virtual void Run() = 0;
  79:../../mmi/resource/inc/ThreadPool.h ****         virtual bool AutoDelete() = 0;
  80:../../mmi/resource/inc/ThreadPool.h ****     };
  81:../../mmi/resource/inc/ThreadPool.h ****     void Run(IRunObject* job, ThreadPriority priority = Low)
  82:../../mmi/resource/inc/ThreadPool.h ****         { AddJobToQueue(NULL, NULL, job, priority); }
 6021              	LM280:
 6022 0000 55       		pushl	%ebp
 6023 0001 89E5     		movl	%esp, %ebp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 98


 6024 0003 83EC18   		subl	$24, %esp
 6026              	LM281:
 6027              	LBB55:
 6028 0006 8B4510   		movl	16(%ebp), %eax
 6029 0009 89442410 		movl	%eax, 16(%esp)
 6030 000d 8B450C   		movl	12(%ebp), %eax
 6031 0010 8944240C 		movl	%eax, 12(%esp)
 6032 0014 C7442408 		movl	$0, 8(%esp)
 6032      00000000 
 6033 001c C7442404 		movl	$0, 4(%esp)
 6033      00000000 
 6034 0024 8B4508   		movl	8(%ebp), %eax
 6035 0027 890424   		movl	%eax, (%esp)
 6036 002a E8000000 		call	__ZN10ThreadPool13AddJobToQueueEPFmPvES0_PNS_10IRunObjectENS_14ThreadPriorityE
 6036      00
 6037 002f C9       		leave
 6038 0030 C3       		ret
 6039              	LBE55:
 6040              	Lscope30:
 6042 0031 909090   		.section	.text$_ZN21_ResgenImageOutStreamC1Ev,"x"
 6043              		.linkonce discard
 6044              		.align 2
 6047              	.globl __ZN21_ResgenImageOutStreamC1Ev
 6049              	__ZN21_ResgenImageOutStreamC1Ev:
 6051              	Ltext8:
 6053              	LM282:
 6054 0000 55       		pushl	%ebp
 6055 0001 89E5     		movl	%esp, %ebp
 6057              	LM283:
 6058              	LBB56:
 6059 0003 8B4508   		movl	8(%ebp), %eax
 6060 0006 C7000000 		movl	$0, (%eax)
 6060      0000
 6061 000c 8B4508   		movl	8(%ebp), %eax
 6062 000f C7400400 		movl	$0, 4(%eax)
 6062      000000
 6064              	LM284:
 6065 0016 5D       		popl	%ebp
 6066 0017 C3       		ret
 6067              	LBE56:
 6068              	Lscope31:
 6070              		.section	.text$_ZN21_ResgenImageOutStreamD1Ev,"x"
 6071              		.linkonce discard
 6072              		.align 2
 6075              	.globl __ZN21_ResgenImageOutStreamD1Ev
 6077              	__ZN21_ResgenImageOutStreamD1Ev:
 6079              	LM285:
 6080 0000 55       		pushl	%ebp
 6081 0001 89E5     		movl	%esp, %ebp
 6082 0003 83EC08   		subl	$8, %esp
 6084              	LM286:
 6085              	LBB57:
 6086 0006 8B4508   		movl	8(%ebp), %eax
 6087 0009 8B4004   		movl	4(%eax), %eax
 6088 000c 890424   		movl	%eax, (%esp)
 6089 000f E8000000 		call	__ZdlPv
 6089      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 99


 6091              	LM287:
 6092 0014 C9       		leave
 6093 0015 C3       		ret
 6094              	LBE57:
 6095              	Lscope32:
 6097 0016 9090     		.section	.text$_ZN16ProcessImageDataD1Ev,"x"
 6098              		.linkonce discard
 6099              		.align 2
 6102              	.globl __ZN16ProcessImageDataD1Ev
 6104              	__ZN16ProcessImageDataD1Ev:
 6106              	LM288:
 6107              	L191:
 6108 0000 55       		pushl	%ebp
 6109 0001 89E5     		movl	%esp, %ebp
 6110 0003 83EC08   		subl	$8, %esp
 6112              	LM289:
 6113 0006 8B4508   		movl	8(%ebp), %eax
 6114              	LBB58:
 6115 0009 05300200 		addl	$560, %eax
 6115      00
 6116 000e 890424   		movl	%eax, (%esp)
 6117 0011 E8000000 		call	__ZN21_ResgenImageOutStreamD1Ev
 6117      00
 6118              	L193:
 6119 0016 8B4508   		movl	8(%ebp), %eax
 6120 0019 83C008   		addl	$8, %eax
 6121 001c 890424   		movl	%eax, (%esp)
 6122 001f E8000000 		call	__ZNSsD1Ev
 6122      00
 6123              	L195:
 6124 0024 8B4508   		movl	8(%ebp), %eax
 6125 0027 83C004   		addl	$4, %eax
 6126 002a 890424   		movl	%eax, (%esp)
 6127 002d E8000000 		call	__ZNSsD1Ev
 6127      00
 6128 0032 C9       		leave
 6129 0033 C3       		ret
 6130              	L189:
 6131              	LBE58:
 6132              	Lscope33:
 6134              		.section	.text$_ZN16ProcessImageDataC1EtPcS0_iii,"x"
 6135              		.linkonce discard
 6136              		.align 2
 6145              	.globl __ZN16ProcessImageDataC1EtPcS0_iii
 6147              	__ZN16ProcessImageDataC1EtPcS0_iii:
 6149              	LM290:
 6150 0000 55       		pushl	%ebp
 6151 0001 89E5     		movl	%esp, %ebp
 6152 0003 57       		pushl	%edi
 6153 0004 56       		pushl	%esi
 6154 0005 53       		pushl	%ebx
 6155 0006 81EC8C00 		subl	$140, %esp
 6155      0000
 6156 000c 8B450C   		movl	12(%ebp), %eax
 6157 000f 668945E6 		movw	%ax, -26(%ebp)
 6158 0013 C745B400 		movl	$___gxx_personality_sj0, -76(%ebp)
 6158      000000
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 100


 6159 001a C745B824 		movl	$LLSDA2345, -72(%ebp)
 6159      000000
 6160 0021 8D45BC   		leal	-68(%ebp), %eax
 6161 0024 8D55E8   		leal	-24(%ebp), %edx
 6162 0027 8910     		movl	%edx, (%eax)
 6163 0029 BA5D0100 		movl	$L219, %edx
 6163      00
 6164 002e 895004   		movl	%edx, 4(%eax)
 6165 0031 896008   		movl	%esp, 8(%eax)
 6166 0034 8D459C   		leal	-100(%ebp), %eax
 6167 0037 890424   		movl	%eax, (%esp)
 6168 003a E8000000 		call	__Unwind_SjLj_Register
 6168      00
 6170              	LM291:
 6171              	LBB59:
 6172 003f 8B5508   		movl	8(%ebp), %edx
 6173 0042 0FB745E6 		movzwl	-26(%ebp), %eax
 6174 0046 668902   		movw	%ax, (%edx)
 6175 0049 8D45C8   		leal	-56(%ebp), %eax
 6176 004c 890424   		movl	%eax, (%esp)
 6177 004f E8000000 		call	__ZNSaIcEC1Ev
 6177      00
 6178 0054 8D45C8   		leal	-56(%ebp), %eax
 6179 0057 89442408 		movl	%eax, 8(%esp)
 6180 005b 8B4510   		movl	16(%ebp), %eax
 6181 005e 89442404 		movl	%eax, 4(%esp)
 6182 0062 8B4508   		movl	8(%ebp), %eax
 6183 0065 83C004   		addl	$4, %eax
 6184 0068 890424   		movl	%eax, (%esp)
 6185 006b C745A003 		movl	$3, -96(%ebp)
 6185      000000
 6186 0072 E8000000 		call	__ZNSsC1EPKcRKSaIcE
 6186      00
 6187 0077 EB29     		jmp	L200
 6188              	L199:
 6189 0079 8B4594   		movl	-108(%ebp), %eax
 6190 007c 894598   		movl	%eax, -104(%ebp)
 6191 007f 8D45C8   		leal	-56(%ebp), %eax
 6192 0082 890424   		movl	%eax, (%esp)
 6193 0085 E8000000 		call	__ZNSaIcED1Ev
 6193      00
 6194 008a 8B5598   		movl	-104(%ebp), %edx
 6195 008d 895594   		movl	%edx, -108(%ebp)
 6196              	L201:
 6197 0090 8B4594   		movl	-108(%ebp), %eax
 6198 0093 890424   		movl	%eax, (%esp)
 6199 0096 C745A0FF 		movl	$-1, -96(%ebp)
 6199      FFFFFF
 6200 009d E8000000 		call	__Unwind_SjLj_Resume
 6200      00
 6201              	L200:
 6202 00a2 8D45C8   		leal	-56(%ebp), %eax
 6203 00a5 890424   		movl	%eax, (%esp)
 6204 00a8 E8000000 		call	__ZNSaIcED1Ev
 6204      00
 6205 00ad 8D45C8   		leal	-56(%ebp), %eax
 6206 00b0 890424   		movl	%eax, (%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 101


 6207 00b3 E8000000 		call	__ZNSaIcEC1Ev
 6207      00
 6208 00b8 8D45C8   		leal	-56(%ebp), %eax
 6209 00bb 89442408 		movl	%eax, 8(%esp)
 6210 00bf 8B4514   		movl	20(%ebp), %eax
 6211 00c2 89442404 		movl	%eax, 4(%esp)
 6212 00c6 8B4508   		movl	8(%ebp), %eax
 6213 00c9 83C008   		addl	$8, %eax
 6214 00cc 890424   		movl	%eax, (%esp)
 6215 00cf C745A002 		movl	$2, -96(%ebp)
 6215      000000
 6216 00d6 E8000000 		call	__ZNSsC1EPKcRKSaIcE
 6216      00
 6217 00db EB1C     		jmp	L204
 6218              	L203:
 6219 00dd 8B5594   		movl	-108(%ebp), %edx
 6220 00e0 895590   		movl	%edx, -112(%ebp)
 6221 00e3 8D45C8   		leal	-56(%ebp), %eax
 6222 00e6 890424   		movl	%eax, (%esp)
 6223 00e9 E8000000 		call	__ZNSaIcED1Ev
 6223      00
 6224 00ee 8B4590   		movl	-112(%ebp), %eax
 6225 00f1 894594   		movl	%eax, -108(%ebp)
 6226              	L205:
 6227 00f4 E9BD0000 		jmp	L215
 6227      00
 6228              	L204:
 6229 00f9 8D45C8   		leal	-56(%ebp), %eax
 6230 00fc 890424   		movl	%eax, (%esp)
 6231 00ff E8000000 		call	__ZNSaIcED1Ev
 6231      00
 6232 0104 8B5508   		movl	8(%ebp), %edx
 6233 0107 8B4518   		movl	24(%ebp), %eax
 6234 010a 89420C   		movl	%eax, 12(%edx)
 6235 010d 8B5508   		movl	8(%ebp), %edx
 6236 0110 8B451C   		movl	28(%ebp), %eax
 6237 0113 894210   		movl	%eax, 16(%edx)
 6238 0116 8B4508   		movl	8(%ebp), %eax
 6239 0119 05300200 		addl	$560, %eax
 6239      00
 6240 011e 890424   		movl	%eax, (%esp)
 6241 0121 E8000000 		call	__ZN21_ResgenImageOutStreamC1Ev
 6241      00
 6243              	LM292:
 6244 0126 8B4508   		movl	8(%ebp), %eax
 6245 0129 83C014   		addl	$20, %eax
 6246 012c 890424   		movl	%eax, (%esp)
 6247 012f C745A001 		movl	$1, -96(%ebp)
 6247      000000
 6248 0136 E82C0000 		call	_initImageProcessData
 6248      00
 6250              	LM293:
 6251 013b 8B5508   		movl	8(%ebp), %edx
 6252 013e 8B4508   		movl	8(%ebp), %eax
 6253 0141 05300200 		addl	$560, %eax
 6253      00
 6254 0146 89821802 		movl	%eax, 536(%edx)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 102


 6254      0000
 6256              	LM294:
 6257 014c 8B5508   		movl	8(%ebp), %edx
 6258 014f 8B4520   		movl	32(%ebp), %eax
 6259 0152 89822802 		movl	%eax, 552(%edx)
 6259      0000
 6260 0158 E9850000 		jmp	L198
 6260      00
 6261              	L219:
 6262 015d 8D6D18   		leal	24(%ebp), %ebp
 6263 0160 8B55A0   		movl	-96(%ebp), %edx
 6264 0163 895580   		movl	%edx, -128(%ebp)
 6265 0166 8B45A4   		movl	-92(%ebp), %eax
 6266 0169 894594   		movl	%eax, -108(%ebp)
 6267 016c 837D8001 		cmpl	$1, -128(%ebp)
 6268 0170 0F8467FF 		je	L203
 6268      FFFF
 6269 0176 837D8002 		cmpl	$2, -128(%ebp)
 6270 017a 0F84F9FE 		je	L199
 6270      FFFF
 6271              	L207:
 6272 0180 8B5594   		movl	-108(%ebp), %edx
 6273 0183 89558C   		movl	%edx, -116(%ebp)
 6274 0186 8B4508   		movl	8(%ebp), %eax
 6275 0189 05300200 		addl	$560, %eax
 6275      00
 6276 018e 890424   		movl	%eax, (%esp)
 6277 0191 E8000000 		call	__ZN21_ResgenImageOutStreamD1Ev
 6277      00
 6278 0196 8B458C   		movl	-116(%ebp), %eax
 6279 0199 894594   		movl	%eax, -108(%ebp)
 6280              	L209:
 6281              	L211:
 6282 019c 8B5594   		movl	-108(%ebp), %edx
 6283 019f 895588   		movl	%edx, -120(%ebp)
 6284 01a2 8B4508   		movl	8(%ebp), %eax
 6285 01a5 83C008   		addl	$8, %eax
 6286 01a8 890424   		movl	%eax, (%esp)
 6287 01ab E8000000 		call	__ZNSsD1Ev
 6287      00
 6288 01b0 8B4588   		movl	-120(%ebp), %eax
 6289 01b3 894594   		movl	%eax, -108(%ebp)
 6290              	L213:
 6291              	L215:
 6292 01b6 8B5594   		movl	-108(%ebp), %edx
 6293 01b9 895584   		movl	%edx, -124(%ebp)
 6294 01bc 8B4508   		movl	8(%ebp), %eax
 6295 01bf 83C004   		addl	$4, %eax
 6296 01c2 890424   		movl	%eax, (%esp)
 6297 01c5 E8000000 		call	__ZNSsD1Ev
 6297      00
 6298 01ca 8B4584   		movl	-124(%ebp), %eax
 6299 01cd 894594   		movl	%eax, -108(%ebp)
 6300              	L217:
 6301 01d0 8B5594   		movl	-108(%ebp), %edx
 6302 01d3 891424   		movl	%edx, (%esp)
 6303 01d6 C745A0FF 		movl	$-1, -96(%ebp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 103


 6303      FFFFFF
 6304 01dd E8000000 		call	__Unwind_SjLj_Resume
 6304      00
 6306              	LM295:
 6307              	L198:
 6308 01e2 8D459C   		leal	-100(%ebp), %eax
 6309 01e5 890424   		movl	%eax, (%esp)
 6310 01e8 E8000000 		call	__Unwind_SjLj_Unregister
 6310      00
 6311 01ed 81C48C00 		addl	$140, %esp
 6311      0000
 6312 01f3 5B       		popl	%ebx
 6313 01f4 5E       		popl	%esi
 6314 01f5 5F       		popl	%edi
 6315 01f6 5D       		popl	%ebp
 6316 01f7 C3       		ret
 6317              	LBE59:
 6318              		.section	.gcc_except_table,""
 6319              	LLSDA2345:
 6320 0024 FF       		.byte	0xff
 6321 0025 FF       		.byte	0xff
 6322 0026 01       		.byte	0x1
 6323 0027 06       		.uleb128 LLSDACSE2345-LLSDACSB2345
 6324              	LLSDACSB2345:
 6325 0028 00       		.uleb128 0x0
 6326 0029 00       		.uleb128 0x0
 6327 002a 01       		.uleb128 0x1
 6328 002b 00       		.uleb128 0x0
 6329 002c 02       		.uleb128 0x2
 6330 002d 00       		.uleb128 0x0
 6331              	LLSDACSE2345:
 6332              		.section	.text$_ZN16ProcessImageDataC1EtPcS0_iii,"x"
 6333              		.linkonce discard
 6335              	Lscope34:
 6337              		.section	.text$_ZNSaI16ProcessImageDataEC1Ev,"x"
 6338              		.linkonce discard
 6339              		.align 2
 6342              	.globl __ZNSaI16ProcessImageDataEC1Ev
 6344              	__ZNSaI16ProcessImageDataEC1Ev:
 6346              	Ltext9:
   1:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // Allocators -*- C++ -*-
   2:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
   3:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.
   4:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** //
   5:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // software; you can redistribute it and/or modify it under the
   7:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // terms of the GNU General Public License as published by the
   8:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // Free Software Foundation; either version 2, or (at your option)
   9:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // any later version.
  10:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  11:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // This library is distributed in the hope that it will be useful,
  12:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // GNU General Public License for more details.
  15:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  16:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // You should have received a copy of the GNU General Public License along
  17:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // with this library; see the file COPYING.  If not, write to the Free
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 104


  18:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
  19:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // USA.
  20:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  21:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // As a special exception, you may use this file as part of a free software
  22:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // library without restriction.  Specifically, if other files instantiate
  23:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // templates or use macros or inline functions from this file, or you compile
  24:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // this file and link it with other files to produce an executable, this
  25:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // file does not by itself cause the resulting executable to be covered by
  26:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // the GNU General Public License.  This exception does not however
  27:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // invalidate any other reasons why the executable file might be covered by
  28:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** // the GNU General Public License.
  29:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  30:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** /*
  31:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * Copyright (c) 1996-1997
  32:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * Silicon Graphics Computer Systems, Inc.
  33:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *
  34:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * Permission to use, copy, modify, distribute and sell this software
  35:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * and its documentation for any purpose is hereby granted without fee,
  36:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * provided that the above copyright notice appear in all copies and
  37:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * that both that copyright notice and this permission notice appear
  38:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * in supporting documentation.  Silicon Graphics makes no
  39:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * representations about the suitability of this software for any
  40:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  41:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  */
  42:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  43:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** /** @file stl_alloc.h
  44:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  This is an internal header file, included by other library headers.
  45:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  You should not attempt to use it directly.
  46:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  */
  47:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  48:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #ifndef __GLIBCPP_INTERNAL_ALLOC_H
  49:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #define __GLIBCPP_INTERNAL_ALLOC_H
  50:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  51:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** /**
  52:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  @defgroup Allocators Memory Allocators
  53:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  @if maint
  54:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  stl_alloc.h implements some node allocators.  These are NOT the same as
  55:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  allocators in the C++ standard, nor in the original H-P STL.  They do not
  56:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  encapsulate different pointer types; we assume that there is only one
  57:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  pointer type.  The C++ standard allocators are intended to allocate
  58:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  individual objects, not pools or arenas.
  59:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *
  60:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  In this file allocators are of two different styles:  "standard" and
  61:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  "SGI" (quotes included).  "Standard" allocators conform to 20.4.  "SGI"
  62:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  allocators differ in AT LEAST the following ways (add to this list as you
  63:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  discover them):
  64:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *
  65:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *   - "Standard" allocate() takes two parameters (n_count,hint=0) but "SGI"
  66:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *     allocate() takes one paramter (n_size).
  67:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *   - Likewise, "standard" deallocate()'s argument is a count, but in "SGI"
  68:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *     is a byte size.
  69:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *   - max_size(), construct(), and destroy() are missing in "SGI" allocators.
  70:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *   - reallocate(p,oldsz,newsz) is added in "SGI", and behaves as
  71:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *     if p=realloc(p,newsz).
  72:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *
  73:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  "SGI" allocators may be wrapped in __allocator to convert the interface
  74:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  into a "standard" one.
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 105


  75:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  @endif
  76:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *
  77:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  @note The @c reallocate member functions have been deprecated for 3.2
  78:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *        and will be removed in 3.4.  You must define @c _GLIBCPP_DEPRECATED
  79:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *        to make this visible in 3.2; see c++config.h.
  80:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *
  81:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  The canonical description of these classes is in docs/html/ext/howto.html
  82:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****  *  or online at http://gcc.gnu.org/onlinedocs/libstdc++/ext/howto.html#3
  83:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** */
  84:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  85:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #include <cstddef>
  86:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #include <cstdlib>
  87:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #include <cstring>
  88:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #include <bits/functexcept.h>   // For __throw_bad_alloc
  89:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #include <bits/stl_threads.h>
  90:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  91:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** #include <bits/atomicity.h>
  92:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
  93:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** namespace std
  94:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** {
  95:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   /**
  96:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @if maint
  97:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  A new-based allocator, as required by the standard.  Allocation and
  98:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  deallocation forward to global new and delete.  "SGI" style, minus
  99:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  reallocate().
 100:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @endif
 101:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  (See @link Allocators allocators info @endlink for more.)
 102:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    */
 103:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   class __new_alloc
 104:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   {
 105:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   public:
 106:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     static void*
 107:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     allocate(size_t __n)
 108:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     { return ::operator new(__n); }
 109:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 110:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     static void
 111:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     deallocate(void* __p, size_t)
 112:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     { ::operator delete(__p); }
 113:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   };
 114:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 115:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 116:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   /**
 117:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @if maint
 118:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  A malloc-based allocator.  Typically slower than the
 119:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  __default_alloc_template (below).  Typically thread-safe and more
 120:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  storage efficient.  The template argument is unused and is only present
 121:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  to permit multiple instantiations (but see __default_alloc_template
 122:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  for caveats).  "SGI" style, plus __set_malloc_handler for OOM conditions.
 123:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @endif
 124:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  (See @link Allocators allocators info @endlink for more.)
 125:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    */
 126:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<int __inst>
 127:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     class __malloc_alloc_template
 128:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 129:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     private:
 130:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void* _S_oom_malloc(size_t);
 131:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void* _S_oom_realloc(void*, size_t);
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 106


 132:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void (* __malloc_alloc_oom_handler)();
 133:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 134:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     public:
 135:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 136:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       allocate(size_t __n)
 137:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 138:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         void* __result = malloc(__n);
 139:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         if (__builtin_expect(__result == 0, 0))
 140:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  __result = _S_oom_malloc(__n);
 141:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return __result;
 142:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 143:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 144:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void
 145:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       deallocate(void* __p, size_t /* __n */)
 146:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       { free(__p); }
 147:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 148:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 149:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       reallocate(void* __p, size_t /* old_sz */, size_t __new_sz)
 150:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 151:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         void* __result = realloc(__p, __new_sz);
 152:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         if (__builtin_expect(__result == 0, 0))
 153:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __result = _S_oom_realloc(__p, __new_sz);
 154:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return __result;
 155:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 156:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 157:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void (* __set_malloc_handler(void (*__f)()))()
 158:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 159:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         void (* __old)() = __malloc_alloc_oom_handler;
 160:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         __malloc_alloc_oom_handler = __f;
 161:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return __old;
 162:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 163:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     };
 164:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 165:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // malloc_alloc out-of-memory handling
 166:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<int __inst>
 167:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     void (* __malloc_alloc_template<__inst>::__malloc_alloc_oom_handler)() = 0;
 168:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 169:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<int __inst>
 170:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     void*
 171:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __malloc_alloc_template<__inst>::
 172:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     _S_oom_malloc(size_t __n)
 173:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 174:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       void (* __my_malloc_handler)();
 175:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       void* __result;
 176:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 177:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       for (;;)
 178:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         {
 179:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __my_malloc_handler = __malloc_alloc_oom_handler;
 180:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           if (__builtin_expect(__my_malloc_handler == 0, 0))
 181:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             __throw_bad_alloc();
 182:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           (*__my_malloc_handler)();
 183:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __result = malloc(__n);
 184:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           if (__result)
 185:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             return __result;
 186:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         }
 187:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     }
 188:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 107


 189:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<int __inst>
 190:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     void*
 191:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __malloc_alloc_template<__inst>::
 192:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     _S_oom_realloc(void* __p, size_t __n)
 193:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 194:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       void (* __my_malloc_handler)();
 195:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       void* __result;
 196:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 197:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       for (;;)
 198:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         {
 199:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __my_malloc_handler = __malloc_alloc_oom_handler;
 200:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           if (__builtin_expect(__my_malloc_handler == 0, 0))
 201:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             __throw_bad_alloc();
 202:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           (*__my_malloc_handler)();
 203:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __result = realloc(__p, __n);
 204:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           if (__result)
 205:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             return __result;
 206:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         }
 207:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     }
 208:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 209:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // Should not be referenced within the library anymore.
 210:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   typedef __new_alloc                 __mem_interface;
 211:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 212:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   /**
 213:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @if maint
 214:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  This is used primarily (only?) in _Alloc_traits and other places to
 215:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  help provide the _Alloc_type typedef.  All it does is forward the
 216:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  requests after some minimal checking.
 217:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 218:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  This is neither "standard"-conforming nor "SGI".  The _Alloc parameter
 219:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  must be "SGI" style.
 220:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @endif
 221:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  (See @link Allocators allocators info @endlink for more.)
 222:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    */
 223:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<typename _Tp, typename _Alloc>
 224:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     class __simple_alloc
 225:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 226:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     public:
 227:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static _Tp*
 228:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       allocate(size_t __n)
 229:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 230:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	_Tp* __ret = 0;
 231:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	if (__n)
 232:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  __ret = static_cast<_Tp*>(_Alloc::allocate(__n * sizeof(_Tp)));
 233:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	return __ret;
 234:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 235:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   
 236:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static _Tp*
 237:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       allocate()
 238:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       { return (_Tp*) _Alloc::allocate(sizeof (_Tp)); }
 239:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   
 240:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void
 241:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       deallocate(_Tp* __p, size_t __n)
 242:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       { if (0 != __n) _Alloc::deallocate(__p, __n * sizeof (_Tp)); }
 243:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   
 244:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void
 245:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       deallocate(_Tp* __p)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 108


 246:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       { _Alloc::deallocate(__p, sizeof (_Tp)); }
 247:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     };
 248:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 249:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 250:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   /**
 251:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @if maint
 252:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  An adaptor for an underlying allocator (_Alloc) to check the size
 253:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  arguments for debugging.
 254:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 255:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  "There is some evidence that this can confuse Purify." - SGI comment
 256:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 257:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  This adaptor is "SGI" style.  The _Alloc parameter must also be "SGI".
 258:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @endif
 259:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  (See @link Allocators allocators info @endlink for more.)
 260:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    */
 261:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<typename _Alloc>
 262:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     class __debug_alloc
 263:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 264:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     private:
 265:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // Size of space used to store size.  Note that this must be
 266:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // large enough to preserve alignment.
 267:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       enum {_S_extra = 8};
 268:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 269:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     public:
 270:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 271:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       allocate(size_t __n)
 272:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 273:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         char* __result = (char*)_Alloc::allocate(__n + (int) _S_extra);
 274:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         *(size_t*)__result = __n;
 275:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return __result + (int) _S_extra;
 276:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 277:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 278:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void
 279:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       deallocate(void* __p, size_t __n)
 280:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 281:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         char* __real_p = (char*)__p - (int) _S_extra;
 282:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         if (*(size_t*)__real_p != __n)
 283:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  abort();
 284:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         _Alloc::deallocate(__real_p, __n + (int) _S_extra);
 285:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 286:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 287:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 288:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       reallocate(void* __p, size_t __old_sz, size_t __new_sz)
 289:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 290:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         char* __real_p = (char*)__p - (int) _S_extra;
 291:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         if (*(size_t*)__real_p != __old_sz)
 292:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  abort();
 293:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         char* __result = (char*) _Alloc::reallocate(__real_p, 
 294:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 						    __old_sz + (int) _S_extra,
 295:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 						    __new_sz + (int) _S_extra);
 296:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         *(size_t*)__result = __new_sz;
 297:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return __result + (int) _S_extra;
 298:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 299:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     };
 300:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 301:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 302:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   /**
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 109


 303:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @if maint
 304:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  Default node allocator.  "SGI" style.  Uses various allocators to
 305:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  fulfill underlying requests (and makes as few requests as possible
 306:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  when in default high-speed pool mode).
 307:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 308:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  Important implementation properties:
 309:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  0. If globally mandated, then allocate objects from __new_alloc
 310:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  1. If the clients request an object of size > _MAX_BYTES, the resulting
 311:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *     object will be obtained directly from __new_alloc
 312:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  2. In all other cases, we allocate an object of size exactly
 313:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *     _S_round_up(requested_size).  Thus the client has enough size
 314:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *     information that we can return the object to the proper free list
 315:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *     without permanently losing part of the object.
 316:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 317:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  The first template parameter specifies whether more than one thread may
 318:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  use this allocator.  It is safe to allocate an object from one instance
 319:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  of a default_alloc and deallocate it with another one.  This effectively
 320:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  transfers its ownership to the second one.  This may have undesirable
 321:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  effects on reference locality.
 322:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 323:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  The second parameter is unused and serves only to allow the creation of
 324:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  multiple default_alloc instances.  Note that containers built on different
 325:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  allocator instances have different types, limiting the utility of this
 326:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  approach.  If you do not wish to share the free lists with the main
 327:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  default_alloc instance, instantiate this with a non-zero __inst.
 328:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 329:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @endif
 330:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  (See @link Allocators allocators info @endlink for more.)
 331:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    */
 332:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 333:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     class __default_alloc_template
 334:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 335:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     private:
 336:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       enum {_ALIGN = 8};
 337:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       enum {_MAX_BYTES = 128};
 338:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       enum {_NFREELISTS = _MAX_BYTES / _ALIGN};
 339:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 340:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       union _Obj
 341:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 342:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         union _Obj* _M_free_list_link;
 343:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         char        _M_client_data[1];    // The client sees this.
 344:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       };
 345:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 346:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static _Obj* volatile         _S_free_list[_NFREELISTS];
 347:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 348:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // Chunk allocation state.
 349:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static char*                  _S_start_free;
 350:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static char*                  _S_end_free;
 351:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static size_t                 _S_heap_size;
 352:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 353:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static _STL_mutex_lock        _S_node_allocator_lock;
 354:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 355:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static size_t
 356:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _S_round_up(size_t __bytes)
 357:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       { return (((__bytes) + (size_t) _ALIGN-1) & ~((size_t) _ALIGN - 1)); }
 358:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 359:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static size_t
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 110


 360:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _S_freelist_index(size_t __bytes)
 361:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       { return (((__bytes) + (size_t)_ALIGN - 1)/(size_t)_ALIGN - 1); }
 362:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 363:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // Returns an object of size __n, and optionally adds to size __n
 364:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // free list.
 365:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 366:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _S_refill(size_t __n);
 367:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 368:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // Allocates a chunk for nobjs of size size.  nobjs may be reduced
 369:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // if it is inconvenient to allocate the requested number.
 370:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static char*
 371:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _S_chunk_alloc(size_t __size, int& __nobjs);
 372:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 373:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // It would be nice to use _STL_auto_lock here.  But we need a
 374:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // test whether threads are in use.
 375:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       struct _Lock
 376:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 377:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         _Lock() { if (__threads) _S_node_allocator_lock._M_acquire_lock(); }
 378:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         ~_Lock() { if (__threads) _S_node_allocator_lock._M_release_lock(); }
 379:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       } __attribute__ ((__unused__));
 380:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       friend struct _Lock;
 381:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 382:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static _Atomic_word _S_force_new;
 383:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 384:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     public:
 385:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // __n must be > 0
 386:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 387:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       allocate(size_t __n)
 388:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 389:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	void* __ret = 0;
 390:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 391:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	// If there is a race through here, assume answer from getenv
 392:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	// will resolve in same direction.  Inspired by techniques
 393:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	// to efficiently support threading found in basic_string.h.
 394:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	if (_S_force_new == 0)
 395:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  {
 396:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    if (getenv("GLIBCPP_FORCE_NEW"))
 397:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      __atomic_add(&_S_force_new, 1);
 398:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    else
 399:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      __atomic_add(&_S_force_new, -1);
 400:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  }
 401:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 402:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	if ((__n > (size_t) _MAX_BYTES) || (_S_force_new > 0))
 403:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  __ret = __new_alloc::allocate(__n);
 404:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	else
 405:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  {
 406:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    _Obj* volatile* __my_free_list = _S_free_list
 407:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      + _S_freelist_index(__n);
 408:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    // Acquire the lock here with a constructor call.  This
 409:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    // ensures that it is released in exit or during stack
 410:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    // unwinding.
 411:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    _Lock __lock_instance;
 412:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    _Obj* __restrict__ __result = *__my_free_list;
 413:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    if (__builtin_expect(__result == 0, 0))
 414:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      __ret = _S_refill(_S_round_up(__n));
 415:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    else
 416:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      {
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 111


 417:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 		*__my_free_list = __result -> _M_free_list_link;
 418:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 		__ret = __result;
 419:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      }	    
 420:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    if (__builtin_expect(__ret == 0, 0))
 421:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      __throw_bad_alloc();
 422:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  }
 423:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	return __ret;
 424:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 425:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 426:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // __p may not be 0
 427:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void
 428:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       deallocate(void* __p, size_t __n)
 429:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       {
 430:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	if ((__n > (size_t) _MAX_BYTES) || (_S_force_new > 0))
 431:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  __new_alloc::deallocate(__p, __n);
 432:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	else
 433:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  {
 434:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    _Obj* volatile*  __my_free_list = _S_free_list
 435:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      + _S_freelist_index(__n);
 436:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    _Obj* __q = (_Obj*)__p;
 437:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 438:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    // Acquire the lock here with a constructor call.  This
 439:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    // ensures that it is released in exit or during stack
 440:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    // unwinding.
 441:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    _Lock __lock_instance;
 442:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    __q -> _M_free_list_link = *__my_free_list;
 443:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    *__my_free_list = __q;
 444:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  }
 445:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       }
 446:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 447:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       static void*
 448:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       reallocate(void* __p, size_t __old_sz, size_t __new_sz);
 449:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     };
 450:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 451:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst> _Atomic_word
 452:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   __default_alloc_template<__threads, __inst>::_S_force_new = 0;
 453:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 454:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 455:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     inline bool
 456:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     operator==(const __default_alloc_template<__threads,__inst>&,
 457:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                const __default_alloc_template<__threads,__inst>&)
 458:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     { return true; }
 459:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 460:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 461:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     inline bool
 462:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     operator!=(const __default_alloc_template<__threads,__inst>&,
 463:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                const __default_alloc_template<__threads,__inst>&)
 464:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     { return false; }
 465:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 466:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 467:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // We allocate memory in large chunks in order to avoid fragmenting the
 468:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // heap too much.  We assume that __size is properly aligned.  We hold
 469:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // the allocation lock.
 470:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 471:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     char*
 472:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __default_alloc_template<__threads, __inst>::
 473:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     _S_chunk_alloc(size_t __size, int& __nobjs)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 112


 474:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 475:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       char* __result;
 476:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       size_t __total_bytes = __size * __nobjs;
 477:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       size_t __bytes_left = _S_end_free - _S_start_free;
 478:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 479:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       if (__bytes_left >= __total_bytes)
 480:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         {
 481:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __result = _S_start_free;
 482:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           _S_start_free += __total_bytes;
 483:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           return __result ;
 484:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         }
 485:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       else if (__bytes_left >= __size)
 486:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         {
 487:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __nobjs = (int)(__bytes_left/__size);
 488:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __total_bytes = __size * __nobjs;
 489:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __result = _S_start_free;
 490:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           _S_start_free += __total_bytes;
 491:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           return __result;
 492:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         }
 493:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       else
 494:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         {
 495:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           size_t __bytes_to_get =
 496:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             2 * __total_bytes + _S_round_up(_S_heap_size >> 4);
 497:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           // Try to make use of the left-over piece.
 498:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           if (__bytes_left > 0)
 499:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             {
 500:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               _Obj* volatile* __my_free_list =
 501:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                 _S_free_list + _S_freelist_index(__bytes_left);
 502:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 503:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               ((_Obj*)(void*)_S_start_free) -> _M_free_list_link = *__my_free_list;
 504:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               *__my_free_list = (_Obj*)(void*)_S_start_free;
 505:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             }
 506:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           _S_start_free = (char*) __new_alloc::allocate(__bytes_to_get);
 507:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           if (_S_start_free == 0)
 508:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             {
 509:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               size_t __i;
 510:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               _Obj* volatile* __my_free_list;
 511:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               _Obj* __p;
 512:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               // Try to make do with what we have.  That can't hurt.  We
 513:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               // do not try smaller requests, since that tends to result
 514:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               // in disaster on multi-process machines.
 515:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               __i = __size;
 516:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               for (; __i <= (size_t) _MAX_BYTES; __i += (size_t) _ALIGN)
 517:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                 {
 518:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                   __my_free_list = _S_free_list + _S_freelist_index(__i);
 519:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                   __p = *__my_free_list;
 520:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                   if (__p != 0)
 521:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                     {
 522:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                       *__my_free_list = __p -> _M_free_list_link;
 523:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                       _S_start_free = (char*)__p;
 524:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                       _S_end_free = _S_start_free + __i;
 525:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                       return _S_chunk_alloc(__size, __nobjs);
 526:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                       // Any leftover piece will eventually make it to the
 527:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                       // right free list.
 528:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                     }
 529:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****                 }
 530:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               _S_end_free = 0;        // In case of exception.
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 113


 531:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               _S_start_free = (char*)__new_alloc::allocate(__bytes_to_get);
 532:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               // This should either throw an exception or remedy the situation.
 533:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****               // Thus we assume it succeeded.
 534:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****             }
 535:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           _S_heap_size += __bytes_to_get;
 536:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           _S_end_free = _S_start_free + __bytes_to_get;
 537:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           return _S_chunk_alloc(__size, __nobjs);
 538:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         }
 539:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     }
 540:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 541:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 542:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // Returns an object of size __n, and optionally adds to "size
 543:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // __n"'s free list.  We assume that __n is properly aligned.  We
 544:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   // hold the allocation lock.
 545:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 546:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     void*
 547:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __default_alloc_template<__threads, __inst>::_S_refill(size_t __n)
 548:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 549:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       int __nobjs = 20;
 550:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       char* __chunk = _S_chunk_alloc(__n, __nobjs);
 551:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _Obj* volatile* __my_free_list;
 552:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _Obj* __result;
 553:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _Obj* __current_obj;
 554:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       _Obj* __next_obj;
 555:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       int __i;
 556:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 557:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       if (1 == __nobjs)
 558:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return __chunk;
 559:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       __my_free_list = _S_free_list + _S_freelist_index(__n);
 560:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 561:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       // Build free list in chunk.
 562:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       __result = (_Obj*)(void*)__chunk;
 563:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       *__my_free_list = __next_obj = (_Obj*)(void*)(__chunk + __n);
 564:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       for (__i = 1; ; __i++)
 565:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         {
 566:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  __current_obj = __next_obj;
 567:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****           __next_obj = (_Obj*)(void*)((char*)__next_obj + __n);
 568:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  if (__nobjs - 1 == __i)
 569:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    {
 570:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      __current_obj -> _M_free_list_link = 0;
 571:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	      break;
 572:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    }
 573:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	  else
 574:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	    __current_obj -> _M_free_list_link = __next_obj;
 575:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 	}
 576:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       return __result;
 577:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     }
 578:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 579:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 580:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool threads, int inst>
 581:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     void*
 582:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __default_alloc_template<threads, inst>::
 583:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     reallocate(void* __p, size_t __old_sz, size_t __new_sz)
 584:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 585:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       void* __result;
 586:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       size_t __copy_sz;
 587:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 114


 588:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       if (__old_sz > (size_t) _MAX_BYTES && __new_sz > (size_t) _MAX_BYTES)
 589:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return(realloc(__p, __new_sz));
 590:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       if (_S_round_up(__old_sz) == _S_round_up(__new_sz))
 591:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         return(__p);
 592:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       __result = allocate(__new_sz);
 593:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       __copy_sz = __new_sz > __old_sz? __old_sz : __new_sz;
 594:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       memcpy(__result, __p, __copy_sz);
 595:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       deallocate(__p, __old_sz);
 596:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       return __result;
 597:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     }
 598:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 599:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 600:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     _STL_mutex_lock
 601:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __default_alloc_template<__threads,__inst>::_S_node_allocator_lock
 602:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __STL_MUTEX_INITIALIZER;
 603:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 604:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 605:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     char* __default_alloc_template<__threads,__inst>::_S_start_free = 0;
 606:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 607:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 608:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     char* __default_alloc_template<__threads,__inst>::_S_end_free = 0;
 609:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 610:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 611:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     size_t __default_alloc_template<__threads,__inst>::_S_heap_size = 0;
 612:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 613:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<bool __threads, int __inst>
 614:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     typename __default_alloc_template<__threads,__inst>::_Obj* volatile
 615:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     __default_alloc_template<__threads,__inst>::_S_free_list[_NFREELISTS];
 616:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 617:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   typedef __default_alloc_template<true,0>    __alloc;
 618:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   typedef __default_alloc_template<false,0>   __single_client_alloc;
 619:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 620:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 621:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   /**
 622:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  @brief  The "standard" allocator, as per [20.4].
 623:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 624:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  The private _Alloc is "SGI" style.  (See comments at the top
 625:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  of stl_alloc.h.)
 626:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 627:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  The underlying allocator behaves as follows.
 628:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *    - __default_alloc_template is used via two typedefs
 629:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *    - "__single_client_alloc" typedef does no locking for threads
 630:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *    - "__alloc" typedef is threadsafe via the locks
 631:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *    - __new_alloc is used for memory requests
 632:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *
 633:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    *  (See @link Allocators allocators info @endlink for more.)
 634:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****    */
 635:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****   template<typename _Tp>
 636:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     class allocator
 637:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     {
 638:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef __alloc _Alloc;          // The underlying allocator.
 639:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****     public:
 640:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef size_t     size_type;
 641:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef ptrdiff_t  difference_type;
 642:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef _Tp*       pointer;
 643:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef const _Tp* const_pointer;
 644:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef _Tp&       reference;
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 115


 645:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef const _Tp& const_reference;
 646:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       typedef _Tp        value_type;
 647:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 648:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       template<typename _Tp1>
 649:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         struct rebind
 650:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         { typedef allocator<_Tp1> other; };
 651:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** 
 652:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       allocator() throw() {}
 6348              	LM296:
 6349              	L221:
 6350              	L220:
 6351 0000 55       		pushl	%ebp
 6352 0001 89E5     		movl	%esp, %ebp
 6354              	LM297:
 6355 0003 5D       		popl	%ebp
 6356 0004 C3       		ret
 6357              	Lscope35:
 6359 0005 909090   		.section	.text$_ZNSaI16ProcessImageDataED1Ev,"x"
 6360              		.linkonce discard
 6361              		.align 2
 6364              	.globl __ZNSaI16ProcessImageDataED1Ev
 6366              	__ZNSaI16ProcessImageDataED1Ev:
 653:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h **** row() {}
 654:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       template<typename _Tp1>
 655:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****         allocator(const allocator<_Tp1>&) throw() {}
 656:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_alloc.h ****       ~allocator() throw() {}
 6368              	LM298:
 6369 0000 55       		pushl	%ebp
 6370 0001 89E5     		movl	%esp, %ebp
 6372              	LM299:
 6373 0003 5D       		popl	%ebp
 6374 0004 C3       		ret
 6375              	L226:
 6376              	L223:
 6377              	Lscope36:
 6379 0005 909090   		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EEC1ERKS1_,"x"
 6380              		.linkonce discard
 6381              		.align 2
 6385              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EEC1ERKS1_
 6387              	__ZNSt4listI16ProcessImageDataSaIS0_EEC1ERKS1_:
 6389              	Ltext10:
 6391              	LM300:
 6392 0000 55       		pushl	%ebp
 6393 0001 89E5     		movl	%esp, %ebp
 6394 0003 83EC08   		subl	$8, %esp
 6396              	LM301:
 6397              	LBB60:
 6398 0006 8B450C   		movl	12(%ebp), %eax
 6399 0009 89442404 		movl	%eax, 4(%esp)
 6400 000d 8B4508   		movl	8(%ebp), %eax
 6401 0010 890424   		movl	%eax, (%esp)
 6402 0013 E8000000 		call	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EEC2ERKS1_
 6402      00
 6403 0018 C9       		leave
 6404 0019 C3       		ret
 6405              	L229:
 6406              	L228:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 116


 6407              	LBE60:
 6408              	Lscope37:
 6410 001a 9090     		.section	.text$_ZN13LogBinaryDataD1Ev,"x"
 6411              		.linkonce discard
 6412              		.align 2
 6415              	.globl __ZN13LogBinaryDataD1Ev
 6417              	__ZN13LogBinaryDataD1Ev:
 6419              	Ltext11:
 6421              	LM302:
 6422              	L233:
 6423 0000 55       		pushl	%ebp
 6424 0001 89E5     		movl	%esp, %ebp
 6425 0003 83EC08   		subl	$8, %esp
 6427              	LM303:
 6428 0006 8B4508   		movl	8(%ebp), %eax
 6429              	LBB61:
 6430 0009 83C004   		addl	$4, %eax
 6431 000c 890424   		movl	%eax, (%esp)
 6432 000f E8000000 		call	__ZNSsD1Ev
 6432      00
 6433 0014 C9       		leave
 6434 0015 C3       		ret
 6435              	L231:
 6436              	LBE61:
 6437              	Lscope38:
 6439 0016 9090     		.section	.text$_ZN13LogBinaryDataC1EtPci,"x"
 6440              		.linkonce discard
 6441              		.align 2
 6447              	.globl __ZN13LogBinaryDataC1EtPci
 6449              	__ZN13LogBinaryDataC1EtPci:
 6451              	LM304:
 6452 0000 55       		pushl	%ebp
 6453 0001 89E5     		movl	%esp, %ebp
 6454 0003 57       		pushl	%edi
 6455 0004 56       		pushl	%esi
 6456 0005 53       		pushl	%ebx
 6457 0006 83EC7C   		subl	$124, %esp
 6458 0009 8B450C   		movl	12(%ebp), %eax
 6459 000c 668945E6 		movw	%ax, -26(%ebp)
 6460 0010 C745B400 		movl	$___gxx_personality_sj0, -76(%ebp)
 6460      000000
 6461 0017 C745B82E 		movl	$LLSDA2350, -72(%ebp)
 6461      000000
 6462 001e 8D45BC   		leal	-68(%ebp), %eax
 6463 0021 8D55E8   		leal	-24(%ebp), %edx
 6464 0024 8910     		movl	%edx, (%eax)
 6465 0026 BA760000 		movl	$L243, %edx
 6465      00
 6466 002b 895004   		movl	%edx, 4(%eax)
 6467 002e 896008   		movl	%esp, 8(%eax)
 6468 0031 8D459C   		leal	-100(%ebp), %eax
 6469 0034 890424   		movl	%eax, (%esp)
 6470 0037 E8000000 		call	__Unwind_SjLj_Register
 6470      00
 6472              	LM305:
 6473              	LBB62:
 6474 003c 8B5508   		movl	8(%ebp), %edx
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 117


 6475 003f 0FB745E6 		movzwl	-26(%ebp), %eax
 6476 0043 668902   		movw	%ax, (%edx)
 6477 0046 8D45C8   		leal	-56(%ebp), %eax
 6478 0049 890424   		movl	%eax, (%esp)
 6479 004c E8000000 		call	__ZNSaIcEC1Ev
 6479      00
 6480 0051 8D45C8   		leal	-56(%ebp), %eax
 6481 0054 89442408 		movl	%eax, 8(%esp)
 6482 0058 8B4510   		movl	16(%ebp), %eax
 6483 005b 89442404 		movl	%eax, 4(%esp)
 6484 005f 8B4508   		movl	8(%ebp), %eax
 6485 0062 83C004   		addl	$4, %eax
 6486 0065 890424   		movl	%eax, (%esp)
 6487 0068 C745A001 		movl	$1, -96(%ebp)
 6487      000000
 6488 006f E8000000 		call	__ZNSsC1EPKcRKSaIcE
 6488      00
 6489 0074 EB32     		jmp	L238
 6490              	L243:
 6491 0076 8D6D18   		leal	24(%ebp), %ebp
 6492 0079 8B45A4   		movl	-92(%ebp), %eax
 6493 007c 894594   		movl	%eax, -108(%ebp)
 6494              	L237:
 6495 007f 8B5594   		movl	-108(%ebp), %edx
 6496 0082 895598   		movl	%edx, -104(%ebp)
 6497 0085 8D45C8   		leal	-56(%ebp), %eax
 6498 0088 890424   		movl	%eax, (%esp)
 6499 008b E8000000 		call	__ZNSaIcED1Ev
 6499      00
 6500 0090 8B4598   		movl	-104(%ebp), %eax
 6501 0093 894594   		movl	%eax, -108(%ebp)
 6502              	L239:
 6503 0096 8B5594   		movl	-108(%ebp), %edx
 6504 0099 891424   		movl	%edx, (%esp)
 6505 009c C745A0FF 		movl	$-1, -96(%ebp)
 6505      FFFFFF
 6506 00a3 E8000000 		call	__Unwind_SjLj_Resume
 6506      00
 6507              	L238:
 6508 00a8 8D45C8   		leal	-56(%ebp), %eax
 6509 00ab 890424   		movl	%eax, (%esp)
 6510 00ae E8000000 		call	__ZNSaIcED1Ev
 6510      00
 6511 00b3 8B5508   		movl	8(%ebp), %edx
 6512 00b6 8B4514   		movl	20(%ebp), %eax
 6513 00b9 894208   		movl	%eax, 8(%edx)
 6514              	L241:
 6516              	LM306:
 6517              	L236:
 6518 00bc 8D459C   		leal	-100(%ebp), %eax
 6519 00bf 890424   		movl	%eax, (%esp)
 6520 00c2 E8000000 		call	__Unwind_SjLj_Unregister
 6520      00
 6521 00c7 83C47C   		addl	$124, %esp
 6522 00ca 5B       		popl	%ebx
 6523 00cb 5E       		popl	%esi
 6524 00cc 5F       		popl	%edi
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 118


 6525 00cd 5D       		popl	%ebp
 6526 00ce C3       		ret
 6527              	LBE62:
 6528              		.section	.gcc_except_table,""
 6529              	LLSDA2350:
 6530 002e FF       		.byte	0xff
 6531 002f FF       		.byte	0xff
 6532 0030 01       		.byte	0x1
 6533 0031 02       		.uleb128 LLSDACSE2350-LLSDACSB2350
 6534              	LLSDACSB2350:
 6535 0032 00       		.uleb128 0x0
 6536 0033 00       		.uleb128 0x0
 6537              	LLSDACSE2350:
 6538              		.section	.text$_ZN13LogBinaryDataC1EtPci,"x"
 6539              		.linkonce discard
 6541              	Lscope39:
 6543 00cf 90       		.section	.text$_ZNSaI13LogBinaryDataEC1Ev,"x"
 6544              		.linkonce discard
 6545              		.align 2
 6548              	.globl __ZNSaI13LogBinaryDataEC1Ev
 6550              	__ZNSaI13LogBinaryDataEC1Ev:
 6552              	Ltext12:
 6554              	LM307:
 6555              	L245:
 6556              	L244:
 6557 0000 55       		pushl	%ebp
 6558 0001 89E5     		movl	%esp, %ebp
 6560              	LM308:
 6561 0003 5D       		popl	%ebp
 6562 0004 C3       		ret
 6563              	Lscope40:
 6565 0005 909090   		.section	.text$_ZNSaI13LogBinaryDataED1Ev,"x"
 6566              		.linkonce discard
 6567              		.align 2
 6570              	.globl __ZNSaI13LogBinaryDataED1Ev
 6572              	__ZNSaI13LogBinaryDataED1Ev:
 6574              	LM309:
 6575 0000 55       		pushl	%ebp
 6576 0001 89E5     		movl	%esp, %ebp
 6578              	LM310:
 6579 0003 5D       		popl	%ebp
 6580 0004 C3       		ret
 6581              	L250:
 6582              	L247:
 6583              	Lscope41:
 6585 0005 909090   		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EEC1ERKS1_,"x"
 6586              		.linkonce discard
 6587              		.align 2
 6591              	.globl __ZNSt4listI13LogBinaryDataSaIS0_EEC1ERKS1_
 6593              	__ZNSt4listI13LogBinaryDataSaIS0_EEC1ERKS1_:
 6595              	Ltext13:
 6597              	LM311:
 6598 0000 55       		pushl	%ebp
 6599 0001 89E5     		movl	%esp, %ebp
 6600 0003 83EC08   		subl	$8, %esp
 6602              	LM312:
 6603              	LBB63:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 119


 6604 0006 8B450C   		movl	12(%ebp), %eax
 6605 0009 89442404 		movl	%eax, 4(%esp)
 6606 000d 8B4508   		movl	8(%ebp), %eax
 6607 0010 890424   		movl	%eax, (%esp)
 6608 0013 E8000000 		call	__ZNSt10_List_baseI13LogBinaryDataSaIS0_EEC2ERKS1_
 6608      00
 6609 0018 C9       		leave
 6610 0019 C3       		ret
 6611              	L253:
 6612              	L252:
 6613              	LBE63:
 6614              	Lscope42:
 6616 001a 9090     		.section	.text$_ZN14ConvertRequestC1ER16ProcessImageData,"x"
 6617              		.linkonce discard
 6618              		.align 2
 6622              	.globl __ZN14ConvertRequestC1ER16ProcessImageData
 6624              	__ZN14ConvertRequestC1ER16ProcessImageData:
 6626              	Ltext14:
 6628              	LM313:
 6629 0000 55       		pushl	%ebp
 6630 0001 89E5     		movl	%esp, %ebp
 6631 0003 83EC08   		subl	$8, %esp
 6633              	LM314:
 6634              	LBB64:
 6635 0006 8B4508   		movl	8(%ebp), %eax
 6636 0009 890424   		movl	%eax, (%esp)
 6637 000c E8000000 		call	__ZN10ThreadPool10IRunObjectC2Ev
 6637      00
 6638 0011 8B4508   		movl	8(%ebp), %eax
 6639 0014 C7000800 		movl	$__ZTV14ConvertRequest+8, (%eax)
 6639      0000
 6640 001a 8B5508   		movl	8(%ebp), %edx
 6641 001d 8B450C   		movl	12(%ebp), %eax
 6642 0020 894204   		movl	%eax, 4(%edx)
 6644              	LM315:
 6645 0023 C9       		leave
 6646 0024 C3       		ret
 6647              	L256:
 6648              	L255:
 6649              	LBE64:
 6650              	Lscope43:
 6652 0025 909090   		.section	.text$_ZNSt10_List_baseI16ProcessImageDataSaIS0_EEC2ERKS1_,"x"
 6653              		.linkonce discard
 6654              		.align 2
 6658              	.globl __ZNSt10_List_baseI16ProcessImageDataSaIS0_EEC2ERKS1_
 6660              	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EEC2ERKS1_:
 6662              	Ltext15:
 6664              	LM316:
 6665 0000 55       		pushl	%ebp
 6666 0001 89E5     		movl	%esp, %ebp
 6667 0003 53       		pushl	%ebx
 6668 0004 83EC14   		subl	$20, %esp
 6670              	LM317:
 6671              	LBB65:
 6672 0007 8B450C   		movl	12(%ebp), %eax
 6673 000a 89442404 		movl	%eax, 4(%esp)
 6674 000e 8B4508   		movl	8(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 120


 6675 0011 890424   		movl	%eax, (%esp)
 6676 0014 E8000000 		call	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EEC2ERKS1_
 6676      00
 6678              	LM318:
 6679 0019 8B5D08   		movl	8(%ebp), %ebx
 6680 001c 8B4508   		movl	8(%ebp), %eax
 6681 001f 890424   		movl	%eax, (%esp)
 6682 0022 E8000000 		call	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv
 6682      00
 6683 0027 8903     		movl	%eax, (%ebx)
 6685              	LM319:
 6686 0029 8B4508   		movl	8(%ebp), %eax
 6687 002c 8B10     		movl	(%eax), %edx
 6688 002e 8B4508   		movl	8(%ebp), %eax
 6689 0031 8B00     		movl	(%eax), %eax
 6690 0033 8902     		movl	%eax, (%edx)
 6692              	LM320:
 6693 0035 8B4508   		movl	8(%ebp), %eax
 6694 0038 8B10     		movl	(%eax), %edx
 6695 003a 8B4508   		movl	8(%ebp), %eax
 6696 003d 8B00     		movl	(%eax), %eax
 6697 003f 894204   		movl	%eax, 4(%edx)
 6698 0042 83C414   		addl	$20, %esp
 6699 0045 5B       		popl	%ebx
 6700 0046 5D       		popl	%ebp
 6701 0047 C3       		ret
 6702              	LBE65:
 6703              	Lscope44:
 6705              		.section	.text$_ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EEC2ERKS1_,"x"
 6706              		.linkonce discard
 6707              		.align 2
 6710              	.globl __ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EEC2ERKS1_
 6712              	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EEC2ERKS1_:
 6714              	LM321:
 6715 0000 55       		pushl	%ebp
 6716 0001 89E5     		movl	%esp, %ebp
 6718              	LM322:
 6719 0003 5D       		popl	%ebp
 6720 0004 C3       		ret
 6721              	Lscope45:
 6723 0005 909090   		.section	.text$_ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv,"x"
 6724              		.linkonce discard
 6725              		.align 2
 6728              	.globl __ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv
 6730              	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv:
 6732              	LM323:
 6733 0000 55       		pushl	%ebp
 6734 0001 89E5     		movl	%esp, %ebp
 6735 0003 83EC08   		subl	$8, %esp
 6737              	LM324:
 6738              	LBB66:
 6739 0006 C7042401 		movl	$1, (%esp)
 6739      000000
 6740 000d E8000000 		call	__ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0
 6740      00
 6741 0012 C9       		leave
 6742 0013 C3       		ret
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 121


 6743              	LBE66:
 6744              	Lscope46:
 6746              		.section	.text$_ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templat
 6747              		.linkonce discard
 6748              		.align 2
 6751              	.globl __ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi
 6753              	__ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0EEE8al
 6755              	Ltext16:
 6757              	LM325:
 6758 0000 55       		pushl	%ebp
 6759 0001 89E5     		movl	%esp, %ebp
 6760 0003 83EC08   		subl	$8, %esp
 6762              	LM326:
 6763              	LBB67:
 6764 0006 C745FC00 		movl	$0, -4(%ebp)
 6764      000000
 6766              	LM327:
 6767 000d 837D0800 		cmpl	$0, 8(%ebp)
 6768 0011 741A     		je	L262
 6770              	LM328:
 6771 0013 8B4508   		movl	8(%ebp), %eax
 6772 0016 89C2     		movl	%eax, %edx
 6773 0018 C1E203   		sall	$3, %edx
 6774 001b 01C2     		addl	%eax, %edx
 6775 001d 89D0     		movl	%edx, %eax
 6776 001f C1E006   		sall	$6, %eax
 6777 0022 890424   		movl	%eax, (%esp)
 6778 0025 E8000000 		call	__ZNSt24__default_alloc_templateILb1ELi0EE8allocateEj
 6778      00
 6779 002a 8945FC   		movl	%eax, -4(%ebp)
 6780              	L262:
 6782              	LM329:
 6783 002d 8B45FC   		movl	-4(%ebp), %eax
 6784 0030 C9       		leave
 6785 0031 C3       		ret
 6786              	LBE67:
 6790              	Lscope47:
 6792 0032 9090     		.section	.text$_ZNSt10_List_baseI13LogBinaryDataSaIS0_EEC2ERKS1_,"x"
 6793              		.linkonce discard
 6794              		.align 2
 6798              	.globl __ZNSt10_List_baseI13LogBinaryDataSaIS0_EEC2ERKS1_
 6800              	__ZNSt10_List_baseI13LogBinaryDataSaIS0_EEC2ERKS1_:
 6802              	Ltext17:
 6804              	LM330:
 6805 0000 55       		pushl	%ebp
 6806 0001 89E5     		movl	%esp, %ebp
 6807 0003 53       		pushl	%ebx
 6808 0004 83EC14   		subl	$20, %esp
 6810              	LM331:
 6811              	LBB68:
 6812 0007 8B450C   		movl	12(%ebp), %eax
 6813 000a 89442404 		movl	%eax, 4(%esp)
 6814 000e 8B4508   		movl	8(%ebp), %eax
 6815 0011 890424   		movl	%eax, (%esp)
 6816 0014 E8000000 		call	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EEC2ERKS1_
 6816      00
 6818              	LM332:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 122


 6819 0019 8B5D08   		movl	8(%ebp), %ebx
 6820 001c 8B4508   		movl	8(%ebp), %eax
 6821 001f 890424   		movl	%eax, (%esp)
 6822 0022 E8000000 		call	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv
 6822      00
 6823 0027 8903     		movl	%eax, (%ebx)
 6825              	LM333:
 6826 0029 8B4508   		movl	8(%ebp), %eax
 6827 002c 8B10     		movl	(%eax), %edx
 6828 002e 8B4508   		movl	8(%ebp), %eax
 6829 0031 8B00     		movl	(%eax), %eax
 6830 0033 8902     		movl	%eax, (%edx)
 6832              	LM334:
 6833 0035 8B4508   		movl	8(%ebp), %eax
 6834 0038 8B10     		movl	(%eax), %edx
 6835 003a 8B4508   		movl	8(%ebp), %eax
 6836 003d 8B00     		movl	(%eax), %eax
 6837 003f 894204   		movl	%eax, 4(%edx)
 6838 0042 83C414   		addl	$20, %esp
 6839 0045 5B       		popl	%ebx
 6840 0046 5D       		popl	%ebp
 6841 0047 C3       		ret
 6842              	LBE68:
 6843              	Lscope48:
 6845              		.section	.text$_ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EEC2ERKS1_,"x"
 6846              		.linkonce discard
 6847              		.align 2
 6850              	.globl __ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EEC2ERKS1_
 6852              	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EEC2ERKS1_:
 6854              	LM335:
 6855 0000 55       		pushl	%ebp
 6856 0001 89E5     		movl	%esp, %ebp
 6858              	LM336:
 6859 0003 5D       		popl	%ebp
 6860 0004 C3       		ret
 6861              	Lscope49:
 6863 0005 909090   		.section	.text$_ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv,"x"
 6864              		.linkonce discard
 6865              		.align 2
 6868              	.globl __ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv
 6870              	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv:
 6872              	LM337:
 6873 0000 55       		pushl	%ebp
 6874 0001 89E5     		movl	%esp, %ebp
 6875 0003 83EC08   		subl	$8, %esp
 6877              	LM338:
 6878              	LBB69:
 6879 0006 C7042401 		movl	$1, (%esp)
 6879      000000
 6880 000d E8000000 		call	__ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE
 6880      00
 6881 0012 C9       		leave
 6882 0013 C3       		ret
 6883              	LBE69:
 6884              	Lscope50:
 6886              		.section	.text$_ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateIL
 6887              		.linkonce discard
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 123


 6888              		.align 2
 6891              	.globl __ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EE
 6893              	__ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE8alloc
 6895              	Ltext18:
 6897              	LM339:
 6898 0000 55       		pushl	%ebp
 6899 0001 89E5     		movl	%esp, %ebp
 6900 0003 83EC08   		subl	$8, %esp
 6902              	LM340:
 6903              	LBB70:
 6904 0006 C745FC00 		movl	$0, -4(%ebp)
 6904      000000
 6906              	LM341:
 6907 000d 837D0800 		cmpl	$0, 8(%ebp)
 6908 0011 741C     		je	L267
 6910              	LM342:
 6911 0013 8B4508   		movl	8(%ebp), %eax
 6912 0016 89C2     		movl	%eax, %edx
 6913 0018 C1E202   		sall	$2, %edx
 6914 001b 01C2     		addl	%eax, %edx
 6915 001d 8D049500 		leal	0(,%edx,4), %eax
 6915      000000
 6916 0024 890424   		movl	%eax, (%esp)
 6917 0027 E8000000 		call	__ZNSt24__default_alloc_templateILb1ELi0EE8allocateEj
 6917      00
 6918 002c 8945FC   		movl	%eax, -4(%ebp)
 6919              	L267:
 6921              	LM343:
 6922 002f 8B45FC   		movl	-4(%ebp), %eax
 6923 0032 C9       		leave
 6924 0033 C3       		ret
 6925              	LBE70:
 6929              	Lscope51:
 6931              		.section	.text$_ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E,"x"
 6932              		.linkonce discard
 6933              		.align 2
 6937              	.globl __ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
 6939              	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E:
 6941              	Ltext19:
 6943              	LM344:
 6944 0000 55       		pushl	%ebp
 6945 0001 89E5     		movl	%esp, %ebp
 6946 0003 83EC08   		subl	$8, %esp
 6948              	LM345:
 6949              	LBB71:
 6950 0006 8B450C   		movl	12(%ebp), %eax
 6951 0009 89442404 		movl	%eax, 4(%esp)
 6952 000d 8B4508   		movl	8(%ebp), %eax
 6953 0010 890424   		movl	%eax, (%esp)
 6954 0013 E8000000 		call	__ZNSt19_List_iterator_baseC2EPSt15_List_node_base
 6954      00
 6955 0018 C9       		leave
 6956 0019 C3       		ret
 6957              	LBE71:
 6958              	Lscope52:
 6960 001a 9090     		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_,"
 6961              		.linkonce discard
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 124


 6962              		.align 2
 6967              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_
 6969              	__ZNSt4listI16ProcessImageDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_:
 6971              	Ltext20:
   1:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // List implementation (out of line) -*- C++ -*-
   2:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
   3:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
   4:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** //
   5:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // software; you can redistribute it and/or modify it under the
   7:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // terms of the GNU General Public License as published by the
   8:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // Free Software Foundation; either version 2, or (at your option)
   9:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // any later version.
  10:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  11:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // This library is distributed in the hope that it will be useful,
  12:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // GNU General Public License for more details.
  15:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  16:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // You should have received a copy of the GNU General Public License along
  17:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // with this library; see the file COPYING.  If not, write to the Free
  18:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
  19:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // USA.
  20:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  21:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // As a special exception, you may use this file as part of a free software
  22:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // library without restriction.  Specifically, if other files instantiate
  23:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // templates or use macros or inline functions from this file, or you compile
  24:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // this file and link it with other files to produce an executable, this
  25:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // file does not by itself cause the resulting executable to be covered by
  26:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // the GNU General Public License.  This exception does not however
  27:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // invalidate any other reasons why the executable file might be covered by
  28:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** // the GNU General Public License.
  29:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  30:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** /*
  31:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *
  32:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * Copyright (c) 1994
  33:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * Hewlett-Packard Company
  34:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *
  35:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  36:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  37:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * provided that the above copyright notice appear in all copies and
  38:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * that both that copyright notice and this permission notice appear
  39:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  40:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * representations about the suitability of this software for any
  41:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  42:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *
  43:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *
  44:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * Copyright (c) 1996,1997
  45:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * Silicon Graphics Computer Systems, Inc.
  46:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *
  47:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  48:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  49:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * provided that the above copyright notice appear in all copies and
  50:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * that both that copyright notice and this permission notice appear
  51:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  52:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * representations about the suitability of this software for any
  53:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 125


  54:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  */
  55:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  56:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** /** @file list.tcc
  57:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *  This is an internal header file, included by other library headers.
  58:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  *  You should not attempt to use it directly.
  59:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  */
  60:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  61:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** #ifndef __GLIBCPP_INTERNAL_LIST_TCC
  62:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** #define __GLIBCPP_INTERNAL_LIST_TCC
  63:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** 
  64:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** namespace std
  65:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc **** {
  66:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****   template<typename _Tp, typename _Alloc>
  67:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     void
  68:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     _List_base<_Tp,_Alloc>::
  69:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     __clear()
  70:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     {
  71:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       typedef _List_node<_Tp>  _Node;
  72:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       _Node* __cur = static_cast<_Node*>(_M_node->_M_next);
  73:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       while (__cur != _M_node)
  74:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       {
  75:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****         _Node* __tmp = __cur;
  76:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****         __cur = static_cast<_Node*>(__cur->_M_next);
  77:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****         _Destroy(&__tmp->_M_data);
  78:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****         _M_put_node(__tmp);
  79:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       }
  80:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       _M_node->_M_next = _M_node;
  81:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****       _M_node->_M_prev = _M_node;
  82:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     }
  83:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****   
  84:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****   template<typename _Tp, typename _Alloc>
  85:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     typename list<_Tp,_Alloc>::iterator
  86:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     list<_Tp,_Alloc>::
  87:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     insert(iterator __position, const value_type& __x)
  88:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****     {
 6973              	LM346:
 6974 0000 55       		pushl	%ebp
 6975 0001 89E5     		movl	%esp, %ebp
 6976 0003 56       		pushl	%esi
 6977 0004 53       		pushl	%ebx
 6978 0005 83EC10   		subl	$16, %esp
 6979 0008 8B7508   		movl	8(%ebp), %esi
 6980 000b 8B5D10   		movl	16(%ebp), %ebx
  89:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****    __tmp->_M_prev = __position._M_node->_M_prev;
 6982              	LM347:
 6983              	LBB72:
 6984 000e 8B4514   		movl	20(%ebp), %eax
 6985 0011 89442404 		movl	%eax, 4(%esp)
 6986 0015 8B450C   		movl	12(%ebp), %eax
 6987 0018 890424   		movl	%eax, (%esp)
 6988 001b E8000000 		call	__ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_
 6988      00
 6989 0020 8945F4   		movl	%eax, -12(%ebp)
  90:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****      __position._M_node->_M_prev->_M_next = __tmp;
 6991              	LM348:
 6992 0023 8B55F4   		movl	-12(%ebp), %edx
 6993 0026 8B03     		movl	(%ebx), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 126


 6994 0028 8902     		movl	%eax, (%edx)
  91:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****      __position._M_node->_M_prev = __tmp;
 6996              	LM349:
 6997 002a 8B55F4   		movl	-12(%ebp), %edx
 6998 002d 8B03     		movl	(%ebx), %eax
 6999 002f 8B4004   		movl	4(%eax), %eax
 7000 0032 894204   		movl	%eax, 4(%edx)
  92:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****      return __tmp;
 7002              	LM350:
 7003 0035 8B03     		movl	(%ebx), %eax
 7004 0037 8B5004   		movl	4(%eax), %edx
 7005 003a 8B45F4   		movl	-12(%ebp), %eax
 7006 003d 8902     		movl	%eax, (%edx)
  93:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****    }
 7008              	LM351:
 7009 003f 8B13     		movl	(%ebx), %edx
 7010 0041 8B45F4   		movl	-12(%ebp), %eax
 7011 0044 894204   		movl	%eax, 4(%edx)
  94:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/list.tcc ****  
 7013              	LM352:
 7014 0047 8B45F4   		movl	-12(%ebp), %eax
 7015 004a 89442404 		movl	%eax, 4(%esp)
 7016 004e 893424   		movl	%esi, (%esp)
 7017 0051 E8000000 		call	__ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
 7017      00
 7018              	LBE72:
 7019 0056 89F0     		movl	%esi, %eax
 7020 0058 83C410   		addl	$16, %esp
 7021 005b 5B       		popl	%ebx
 7022 005c 5E       		popl	%esi
 7023 005d 5D       		popl	%ebp
 7024 005e C20400   		ret	$4
 7029              	Lscope53:
 7031 0061 909090   		.section	.text$_ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv,"x"
 7032              		.linkonce discard
 7033              		.align 2
 7036              	.globl __ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv
 7038              	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv:
 7040              	LM353:
 7041 0000 55       		pushl	%ebp
 7042 0001 89E5     		movl	%esp, %ebp
 7043 0003 83EC18   		subl	$24, %esp
 7045              	LM354:
 7046              	LBB73:
 7047 0006 8B4508   		movl	8(%ebp), %eax
 7048 0009 8B00     		movl	(%eax), %eax
 7049 000b 8B00     		movl	(%eax), %eax
 7050 000d 8945FC   		movl	%eax, -4(%ebp)
 7052              	LM355:
 7053              	L271:
 7054 0010 8B5508   		movl	8(%ebp), %edx
 7055 0013 8B45FC   		movl	-4(%ebp), %eax
 7056 0016 3B02     		cmpl	(%edx), %eax
 7057 0018 7502     		jne	L273
 7058 001a EB30     		jmp	L272
 7059              	L273:
 7061              	LM356:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 127


 7062              	LBB74:
 7063              	LBB75:
 7064 001c 8B45FC   		movl	-4(%ebp), %eax
 7065 001f 8945F8   		movl	%eax, -8(%ebp)
 7067              	LM357:
 7068 0022 8B45FC   		movl	-4(%ebp), %eax
 7069 0025 8B00     		movl	(%eax), %eax
 7070 0027 8945FC   		movl	%eax, -4(%ebp)
 7072              	LM358:
 7073 002a 8B45F8   		movl	-8(%ebp), %eax
 7074 002d 83C008   		addl	$8, %eax
 7075 0030 890424   		movl	%eax, (%esp)
 7076 0033 E8000000 		call	__ZSt8_DestroyI16ProcessImageDataEvPT_
 7076      00
 7078              	LM359:
 7079 0038 8B45F8   		movl	-8(%ebp), %eax
 7080 003b 89442404 		movl	%eax, 4(%esp)
 7081 003f 8B4508   		movl	8(%ebp), %eax
 7082 0042 890424   		movl	%eax, (%esp)
 7083 0045 E8000000 		call	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 7083      00
 7084              	LBE75:
 7085              	LBE74:
 7086 004a EBC4     		jmp	L271
 7087              	L272:
 7089              	LM360:
 7090 004c 8B4508   		movl	8(%ebp), %eax
 7091 004f 8B10     		movl	(%eax), %edx
 7092 0051 8B4508   		movl	8(%ebp), %eax
 7093 0054 8B00     		movl	(%eax), %eax
 7094 0056 8902     		movl	%eax, (%edx)
 7096              	LM361:
 7097 0058 8B4508   		movl	8(%ebp), %eax
 7098 005b 8B10     		movl	(%eax), %edx
 7099 005d 8B4508   		movl	8(%ebp), %eax
 7100 0060 8B00     		movl	(%eax), %eax
 7101 0062 894204   		movl	%eax, 4(%edx)
 7102 0065 C9       		leave
 7103 0066 C3       		ret
 7104              	LBE73:
 7111              	Lscope54:
 7113 0067 90       		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EE3endEv,"x"
 7114              		.linkonce discard
 7115              		.align 2
 7118              	.globl __ZNSt4listI13LogBinaryDataSaIS0_EE3endEv
 7120              	__ZNSt4listI13LogBinaryDataSaIS0_EE3endEv:
 7122              	Ltext21:
 7124              	LM362:
 7125 0000 55       		pushl	%ebp
 7126 0001 89E5     		movl	%esp, %ebp
 7127 0003 53       		pushl	%ebx
 7128 0004 83EC14   		subl	$20, %esp
 7129 0007 8B5D08   		movl	8(%ebp), %ebx
 7131              	LM363:
 7132              	LBB76:
 7133 000a 8B450C   		movl	12(%ebp), %eax
 7134 000d 8B00     		movl	(%eax), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 128


 7135 000f 89442404 		movl	%eax, 4(%esp)
 7136 0013 891C24   		movl	%ebx, (%esp)
 7137 0016 E8000000 		call	__ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
 7137      00
 7138              	LBE76:
 7139 001b 89D8     		movl	%ebx, %eax
 7140 001d 83C414   		addl	$20, %esp
 7141 0020 5B       		popl	%ebx
 7142 0021 5D       		popl	%ebp
 7143 0022 C20400   		ret	$4
 7144              	Lscope55:
 7146 0025 909090   		.section	.text$_ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E,"x"
 7147              		.linkonce discard
 7148              		.align 2
 7152              	.globl __ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
 7154              	__ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E:
 7156              	LM364:
 7157 0000 55       		pushl	%ebp
 7158 0001 89E5     		movl	%esp, %ebp
 7159 0003 83EC08   		subl	$8, %esp
 7161              	LM365:
 7162              	LBB77:
 7163 0006 8B450C   		movl	12(%ebp), %eax
 7164 0009 89442404 		movl	%eax, 4(%esp)
 7165 000d 8B4508   		movl	8(%ebp), %eax
 7166 0010 890424   		movl	%eax, (%esp)
 7167 0013 E8000000 		call	__ZNSt19_List_iterator_baseC2EPSt15_List_node_base
 7167      00
 7168 0018 C9       		leave
 7169 0019 C3       		ret
 7170              	LBE77:
 7171              	Lscope56:
 7173 001a 9090     		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_,"x"
 7174              		.linkonce discard
 7175              		.align 2
 7180              	.globl __ZNSt4listI13LogBinaryDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_
 7182              	__ZNSt4listI13LogBinaryDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_:
 7184              	Ltext22:
 7186              	LM366:
 7187 0000 55       		pushl	%ebp
 7188 0001 89E5     		movl	%esp, %ebp
 7189 0003 56       		pushl	%esi
 7190 0004 53       		pushl	%ebx
 7191 0005 83EC10   		subl	$16, %esp
 7192 0008 8B7508   		movl	8(%ebp), %esi
 7193 000b 8B5D10   		movl	16(%ebp), %ebx
 7195              	LM367:
 7196              	LBB78:
 7197 000e 8B4514   		movl	20(%ebp), %eax
 7198 0011 89442404 		movl	%eax, 4(%esp)
 7199 0015 8B450C   		movl	12(%ebp), %eax
 7200 0018 890424   		movl	%eax, (%esp)
 7201 001b E8000000 		call	__ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_
 7201      00
 7202 0020 8945F4   		movl	%eax, -12(%ebp)
 7204              	LM368:
 7205 0023 8B55F4   		movl	-12(%ebp), %edx
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 129


 7206 0026 8B03     		movl	(%ebx), %eax
 7207 0028 8902     		movl	%eax, (%edx)
 7209              	LM369:
 7210 002a 8B55F4   		movl	-12(%ebp), %edx
 7211 002d 8B03     		movl	(%ebx), %eax
 7212 002f 8B4004   		movl	4(%eax), %eax
 7213 0032 894204   		movl	%eax, 4(%edx)
 7215              	LM370:
 7216 0035 8B03     		movl	(%ebx), %eax
 7217 0037 8B5004   		movl	4(%eax), %edx
 7218 003a 8B45F4   		movl	-12(%ebp), %eax
 7219 003d 8902     		movl	%eax, (%edx)
 7221              	LM371:
 7222 003f 8B13     		movl	(%ebx), %edx
 7223 0041 8B45F4   		movl	-12(%ebp), %eax
 7224 0044 894204   		movl	%eax, 4(%edx)
 7226              	LM372:
 7227 0047 8B45F4   		movl	-12(%ebp), %eax
 7228 004a 89442404 		movl	%eax, 4(%esp)
 7229 004e 893424   		movl	%esi, (%esp)
 7230 0051 E8000000 		call	__ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
 7230      00
 7231              	LBE78:
 7232 0056 89F0     		movl	%esi, %eax
 7233 0058 83C410   		addl	$16, %esp
 7234 005b 5B       		popl	%ebx
 7235 005c 5E       		popl	%esi
 7236 005d 5D       		popl	%ebp
 7237 005e C20400   		ret	$4
 7242              	Lscope57:
 7244 0061 909090   		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EED1Ev,"x"
 7245              		.linkonce discard
 7246              		.align 2
 7249              	.globl __ZNSt4listI13LogBinaryDataSaIS0_EED1Ev
 7251              	__ZNSt4listI13LogBinaryDataSaIS0_EED1Ev:
 7253              	Ltext23:
 7255              	LM373:
 7256              	L279:
 7257 0000 55       		pushl	%ebp
 7258 0001 89E5     		movl	%esp, %ebp
 7259 0003 83EC08   		subl	$8, %esp
 7261              	LM374:
 7262              	LBB79:
 7263 0006 8B4508   		movl	8(%ebp), %eax
 7264 0009 890424   		movl	%eax, (%esp)
 7265 000c E8000000 		call	__ZNSt10_List_baseI13LogBinaryDataSaIS0_EED2Ev
 7265      00
 7266 0011 C9       		leave
 7267 0012 C3       		ret
 7268              	L277:
 7269              	LBE79:
 7270              	Lscope58:
 7272 0013 90       		.text
 7273              	LC37:
 7274 238f 424D5000 		.ascii "BMP\0"
 7275              	LC38:
 7276 2393 50424D00 		.ascii "PBM\0"
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 130


 7277              	LC39:
 7278 2397 4A504700 		.ascii "JPG\0"
 7279              	LC40:
 7280 239b 47494600 		.ascii "GIF\0"
 7281              	LC41:
 7282 239f 41424D00 		.ascii "ABM\0"
 7283              	LC42:
 7284 23a3 41564900 		.ascii "AVI\0"
 7285              	LC43:
 7286 23a7 33475000 		.ascii "3GP\0"
 7287              	LC44:
 7288 23ab 4D503400 		.ascii "MP4\0"
 7289              	LC45:
 7290 23af 525600   		.ascii "RV\0"
 7291              	LC46:
 7292 23b2 524D00   		.ascii "RM\0"
 7293              	LC47:
 7294 23b5 524D5642 		.ascii "RMVB\0"
 7294      00
 7295              	LC48:
 7296 23ba 504E4700 		.ascii "PNG\0"
 7297              	LC49:
 7298 23be 50504E00 		.ascii "PPN\0"
 7299              	LC50:
 7300 23c2 4D334400 		.ascii "M3D\0"
 7301              	LC51:
 7302 23c6 434D5000 		.ascii "CMP\0"
 7303              	LC52:
 7304 23ca 56495300 		.ascii "VIS\0"
 7305              	LC53:
 7306 23ce 53564700 		.ascii "SVG\0"
 7307              	LC54:
 7308 23d2 54544600 		.ascii "TTF\0"
 7309              	LC55:
 7310 23d6 53544600 		.ascii "STF\0"
 7311              	LC56:
 7312 23da 43434300 		.ascii "CCC\0"
 7313              	LC57:
 7314 23de 4B545800 		.ascii "KTX\0"
 7315 23e2 90909090 		.align 32
 7315      90909090 
 7315      90909090 
 7315      90909090 
 7315      90909090 
 7316              	_image_resource_info:
 7317 2400 8F230000 		.long	LC37
 7318 2404 01       		.byte	1
 7319 2405 000000   		.space 3
 7320 2408 93230000 		.long	LC38
 7321 240c 04       		.byte	4
 7322 240d 000000   		.space 3
 7323 2410 97230000 		.long	LC39
 7324 2414 09       		.byte	9
 7325 2415 000000   		.space 3
 7326 2418 9B230000 		.long	LC40
 7327 241c 03       		.byte	3
 7328 241d 000000   		.space 3
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 131


 7329 2420 9F230000 		.long	LC41
 7330 2424 28       		.byte	40
 7331 2425 000000   		.space 3
 7332 2428 A3230000 		.long	LC42
 7333 242c 0C       		.byte	12
 7334 242d 000000   		.space 3
 7335 2430 A7230000 		.long	LC43
 7336 2434 0E       		.byte	14
 7337 2435 000000   		.space 3
 7338 2438 AB230000 		.long	LC44
 7339 243c 10       		.byte	16
 7340 243d 000000   		.space 3
 7341 2440 AF230000 		.long	LC45
 7342 2444 4A       		.byte	74
 7343 2445 000000   		.space 3
 7344 2448 B2230000 		.long	LC46
 7345 244c 4C       		.byte	76
 7346 244d 000000   		.space 3
 7347 2450 B5230000 		.long	LC47
 7348 2454 4E       		.byte	78
 7349 2455 000000   		.space 3
 7350 2458 BA230000 		.long	LC48
 7351 245c 13       		.byte	19
 7352 245d 000000   		.space 3
 7353 2460 BE230000 		.long	LC49
 7354 2464 48       		.byte	72
 7355 2465 000000   		.space 3
 7356 2468 C2230000 		.long	LC50
 7357 246c 19       		.byte	25
 7358 246d 000000   		.space 3
 7359 2470 C6230000 		.long	LC51
 7360 2474 1D       		.byte	29
 7361 2475 000000   		.space 3
 7362 2478 CA230000 		.long	LC52
 7363 247c 31       		.byte	49
 7364 247d 000000   		.space 3
 7365 2480 CE230000 		.long	LC53
 7366 2484 1B       		.byte	27
 7367 2485 000000   		.space 3
 7368 2488 D2230000 		.long	LC54
 7369 248c 49       		.byte	73
 7370 248d 000000   		.space 3
 7371 2490 D6230000 		.long	LC55
 7372 2494 49       		.byte	73
 7373 2495 000000   		.space 3
 7374 2498 DA230000 		.long	LC56
 7375 249c 49       		.byte	73
 7376 249d 000000   		.space 3
 7377 24a0 DE230000 		.long	LC57
 7378 24a4 43       		.byte	67
 7379 24a5 000000   		.space 3
 7380              	.globl __ZNSt15basic_streambufIcSt11char_traitsIcEE13_S_pback_sizeE
 7381              		.section	.rdata$_ZNSt15basic_streambufIcSt11char_traitsIcEE13_S_pback_sizeE,""
 7382              		.linkonce same_size
 7383              		.align 4
 7384              	__ZNSt15basic_streambufIcSt11char_traitsIcEE13_S_pback_sizeE:
 7385 0000 01000000 		.long	1
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 132


 7386              		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EED1Ev,"x"
 7387              		.linkonce discard
 7388              		.align 2
 7391              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EED1Ev
 7393              	__ZNSt4listI16ProcessImageDataSaIS0_EED1Ev:
 7395              	LM375:
 7396              	L284:
 7397 0000 55       		pushl	%ebp
 7398 0001 89E5     		movl	%esp, %ebp
 7399 0003 83EC08   		subl	$8, %esp
 7401              	LM376:
 7402              	LBB80:
 7403 0006 8B4508   		movl	8(%ebp), %eax
 7404 0009 890424   		movl	%eax, (%esp)
 7405 000c E8000000 		call	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EED2Ev
 7405      00
 7406 0011 C9       		leave
 7407 0012 C3       		ret
 7408              	L282:
 7409              	LBE80:
 7410              	Lscope59:
 7412              	.globl __ZTV14ConvertRequest
 7413 0013 90       		.section	.rdata$_ZTV14ConvertRequest,""
 7414              		.linkonce same_size
 7415              		.align 8
 7416              	__ZTV14ConvertRequest:
 7417 0000 00000000 		.long	0
 7418 0004 00000000 		.long	__ZTI14ConvertRequest
 7419 0008 00000000 		.long	__ZN14ConvertRequestD1Ev
 7420 000c 00000000 		.long	__ZN14ConvertRequestD0Ev
 7421 0010 00000000 		.long	__ZN14ConvertRequest3RunEv
 7422 0014 00000000 		.long	__ZN14ConvertRequest10AutoDeleteEv
 7425              		.section	.text$_ZNSt19_List_iterator_baseC2EPSt15_List_node_base,"x"
 7426              		.linkonce discard
 7427              		.align 2
 7431              	.globl __ZNSt19_List_iterator_baseC2EPSt15_List_node_base
 7433              	__ZNSt19_List_iterator_baseC2EPSt15_List_node_base:
 7435              	LM377:
 7436 0000 55       		pushl	%ebp
 7437 0001 89E5     		movl	%esp, %ebp
 7439              	LM378:
 7440              	LBB81:
 7441 0003 8B5508   		movl	8(%ebp), %edx
 7442 0006 8B450C   		movl	12(%ebp), %eax
 7443 0009 8902     		movl	%eax, (%edx)
 7444 000b 5D       		popl	%ebp
 7445 000c C3       		ret
 7446              	LBE81:
 7447              	Lscope60:
 7449 000d 909090   		.section	.text$_ZN10ThreadPool10IRunObjectC2Ev,"x"
 7450              		.linkonce discard
 7451              		.align 2
 7454              	.globl __ZN10ThreadPool10IRunObjectC2Ev
 7456              	__ZN10ThreadPool10IRunObjectC2Ev:
 7458              	Ltext24:
 7460              	LM379:
 7461 0000 55       		pushl	%ebp
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 133


 7462 0001 89E5     		movl	%esp, %ebp
 7464              	LM380:
 7465              	LBB82:
 7466 0003 8B4508   		movl	8(%ebp), %eax
 7467 0006 C7000800 		movl	$__ZTVN10ThreadPool10IRunObjectE+8, (%eax)
 7467      0000
 7468 000c 5D       		popl	%ebp
 7469 000d C3       		ret
 7470              	L289:
 7471              	L288:
 7472              	LBE82:
 7473              	Lscope61:
 7475 000e 9090     		.section	.text$_ZN14ConvertRequestD0Ev,"x"
 7476              		.linkonce discard
 7477              		.align 2
 7480              	.globl __ZN14ConvertRequestD0Ev
 7482              	__ZN14ConvertRequestD0Ev:
 7484              	LM381:
 7485 0000 55       		pushl	%ebp
 7486 0001 89E5     		movl	%esp, %ebp
 7487 0003 83EC08   		subl	$8, %esp
 7489              	LM382:
 7490              	LBB83:
 7491 0006 8B4508   		movl	8(%ebp), %eax
 7492 0009 C7000800 		movl	$__ZTV14ConvertRequest+8, (%eax)
 7492      0000
 7493              	L293:
 7494 000f 8B4508   		movl	8(%ebp), %eax
 7495 0012 890424   		movl	%eax, (%esp)
 7496 0015 E8000000 		call	__ZN10ThreadPool10IRunObjectD2Ev
 7496      00
 7497              	LBE83:
 7498 001a B8010000 		movl	$1, %eax
 7498      00
 7499 001f 83E003   		andl	$3, %eax
 7500 0022 84C0     		testb	%al, %al
 7501 0024 740B     		je	L291
 7502 0026 8B4508   		movl	8(%ebp), %eax
 7503 0029 890424   		movl	%eax, (%esp)
 7504 002c E8000000 		call	__ZdlPv
 7504      00
 7505              	L291:
 7506 0031 C9       		leave
 7507 0032 C3       		ret
 7508              	Lscope62:
 7510 0033 90       		.section	.text$_ZN14ConvertRequestD1Ev,"x"
 7511              		.linkonce discard
 7512              		.align 2
 7515              	.globl __ZN14ConvertRequestD1Ev
 7517              	__ZN14ConvertRequestD1Ev:
 7519              	LM383:
 7520 0000 55       		pushl	%ebp
 7521 0001 89E5     		movl	%esp, %ebp
 7522 0003 83EC08   		subl	$8, %esp
 7524              	LM384:
 7525              	LBB84:
 7526 0006 8B4508   		movl	8(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 134


 7527 0009 C7000800 		movl	$__ZTV14ConvertRequest+8, (%eax)
 7527      0000
 7528              	L299:
 7529 000f 8B4508   		movl	8(%ebp), %eax
 7530 0012 890424   		movl	%eax, (%esp)
 7531 0015 E8000000 		call	__ZN10ThreadPool10IRunObjectD2Ev
 7531      00
 7532              	LBE84:
 7533 001a B8010000 		movl	$1, %eax
 7533      00
 7534 001f 83E002   		andl	$2, %eax
 7535 0022 84C0     		testb	%al, %al
 7536 0024 740B     		je	L297
 7537 0026 8B4508   		movl	8(%ebp), %eax
 7538 0029 890424   		movl	%eax, (%esp)
 7539 002c E8000000 		call	__ZdlPv
 7539      00
 7540              	L297:
 7541 0031 C9       		leave
 7542 0032 C3       		ret
 7543              	Lscope63:
 7545 0033 90       		.section	.text$_ZN14ConvertRequest3RunEv,"x"
 7546              		.linkonce discard
 7547              		.align 2
 7550              	.globl __ZN14ConvertRequest3RunEv
 7552              	__ZN14ConvertRequest3RunEv:
 7554              	LM385:
 7555 0000 55       		pushl	%ebp
 7556 0001 89E5     		movl	%esp, %ebp
 7557 0003 53       		pushl	%ebx
 7558 0004 83EC24   		subl	$36, %esp
 7560              	LM386:
 7561              	LBB85:
 7562 0007 8B4508   		movl	8(%ebp), %eax
 7563 000a 8B4004   		movl	4(%eax), %eax
 7564 000d 83C008   		addl	$8, %eax
 7565 0010 890424   		movl	%eax, (%esp)
 7566 0013 E8000000 		call	__ZNKSs5c_strEv
 7566      00
 7567 0018 89C3     		movl	%eax, %ebx
 7568 001a 8B4508   		movl	8(%ebp), %eax
 7569 001d 8B4004   		movl	4(%eax), %eax
 7570 0020 83C004   		addl	$4, %eax
 7571 0023 890424   		movl	%eax, (%esp)
 7572 0026 E8000000 		call	__ZNKSs5c_strEv
 7572      00
 7573 002b 89C2     		movl	%eax, %edx
 7574 002d 8B4508   		movl	8(%ebp), %eax
 7575 0030 8B4004   		movl	4(%eax), %eax
 7576 0033 83C014   		addl	$20, %eax
 7577 0036 89442414 		movl	%eax, 20(%esp)
 7578 003a 8B4508   		movl	8(%ebp), %eax
 7579 003d 8B4004   		movl	4(%eax), %eax
 7580 0040 8B4010   		movl	16(%eax), %eax
 7581 0043 89442410 		movl	%eax, 16(%esp)
 7582 0047 8B4508   		movl	8(%ebp), %eax
 7583 004a 8B4004   		movl	4(%eax), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 135


 7584 004d 8B400C   		movl	12(%eax), %eax
 7585 0050 8944240C 		movl	%eax, 12(%esp)
 7586 0054 895C2408 		movl	%ebx, 8(%esp)
 7587 0058 89542404 		movl	%edx, 4(%esp)
 7588 005c 8B4508   		movl	8(%ebp), %eax
 7589 005f 8B4004   		movl	4(%eax), %eax
 7590 0062 0FB700   		movzwl	(%eax), %eax
 7591 0065 890424   		movl	%eax, (%esp)
 7592 0068 E8000000 		call	_SetImageWithBufferExImp
 7592      00
 7594              	LM387:
 7595 006d 837D0800 		cmpl	$0, 8(%ebp)
 7596 0071 7412     		je	L303
 7597 0073 8B4508   		movl	8(%ebp), %eax
 7598 0076 8B10     		movl	(%eax), %edx
 7599 0078 83C204   		addl	$4, %edx
 7600 007b 8B4508   		movl	8(%ebp), %eax
 7601 007e 890424   		movl	%eax, (%esp)
 7602 0081 8B02     		movl	(%edx), %eax
 7603 0083 FFD0     		call	*%eax
 7605              	LM388:
 7606              	L303:
 7607 0085 83C424   		addl	$36, %esp
 7608 0088 5B       		popl	%ebx
 7609 0089 5D       		popl	%ebp
 7610 008a C3       		ret
 7611              	LBE85:
 7612              	Lscope64:
 7614 008b 90       		.section	.text$_ZN14ConvertRequest10AutoDeleteEv,"x"
 7615              		.linkonce discard
 7616              		.align 2
 7619              	.globl __ZN14ConvertRequest10AutoDeleteEv
 7621              	__ZN14ConvertRequest10AutoDeleteEv:
 7623              	LM389:
 7624 0000 55       		pushl	%ebp
 7625 0001 89E5     		movl	%esp, %ebp
 7627              	LM390:
 7628              	LBB86:
 7629 0003 B8000000 		movl	$0, %eax
 7629      00
 7631              	LM391:
 7632 0008 5D       		popl	%ebp
 7633 0009 C3       		ret
 7634              	LBE86:
 7635              	Lscope65:
 7637 000a 9090     		.section	.text$_ZNSt10_List_baseI16ProcessImageDataSaIS0_EED2Ev,"x"
 7638              		.linkonce discard
 7639              		.align 2
 7642              	.globl __ZNSt10_List_baseI16ProcessImageDataSaIS0_EED2Ev
 7644              	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EED2Ev:
 7646              	Ltext25:
 7648              	LM392:
 7649 0000 55       		pushl	%ebp
 7650 0001 89E5     		movl	%esp, %ebp
 7651 0003 83EC08   		subl	$8, %esp
 7653              	LM393:
 7654              	LBB87:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 136


 7655 0006 8B4508   		movl	8(%ebp), %eax
 7656 0009 890424   		movl	%eax, (%esp)
 7657 000c E8000000 		call	__ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv
 7657      00
 7659              	LM394:
 7660 0011 8B4508   		movl	8(%ebp), %eax
 7661 0014 8B00     		movl	(%eax), %eax
 7662 0016 89442404 		movl	%eax, 4(%esp)
 7663 001a 8B4508   		movl	8(%ebp), %eax
 7664 001d 890424   		movl	%eax, (%esp)
 7665 0020 E8000000 		call	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 7665      00
 7666 0025 C9       		leave
 7667 0026 C3       		ret
 7668              	LBE87:
 7669              	Lscope66:
 7671 0027 90       		.section	.text$_ZNSt10_List_baseI13LogBinaryDataSaIS0_EED2Ev,"x"
 7672              		.linkonce discard
 7673              		.align 2
 7676              	.globl __ZNSt10_List_baseI13LogBinaryDataSaIS0_EED2Ev
 7678              	__ZNSt10_List_baseI13LogBinaryDataSaIS0_EED2Ev:
 7680              	LM395:
 7681 0000 55       		pushl	%ebp
 7682 0001 89E5     		movl	%esp, %ebp
 7683 0003 83EC08   		subl	$8, %esp
 7685              	LM396:
 7686              	LBB88:
 7687 0006 8B4508   		movl	8(%ebp), %eax
 7688 0009 890424   		movl	%eax, (%esp)
 7689 000c E8000000 		call	__ZNSt10_List_baseI13LogBinaryDataSaIS0_EE7__clearEv
 7689      00
 7691              	LM397:
 7692 0011 8B4508   		movl	8(%ebp), %eax
 7693 0014 8B00     		movl	(%eax), %eax
 7694 0016 89442404 		movl	%eax, 4(%esp)
 7695 001a 8B4508   		movl	8(%ebp), %eax
 7696 001d 890424   		movl	%eax, (%esp)
 7697 0020 E8000000 		call	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 7697      00
 7698 0025 C9       		leave
 7699 0026 C3       		ret
 7700              	LBE88:
 7701              	Lscope67:
 7703 0027 90       		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_,"x"
 7704              		.linkonce discard
 7705              		.align 2
 7709              	.globl __ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_
 7711              	__ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_:
 7713              	LM398:
 7714 0000 55       		pushl	%ebp
 7715 0001 89E5     		movl	%esp, %ebp
 7716 0003 57       		pushl	%edi
 7717 0004 56       		pushl	%esi
 7718 0005 53       		pushl	%ebx
 7719 0006 83EC4C   		subl	$76, %esp
 7720 0009 C745DC00 		movl	$___gxx_personality_sj0, -36(%ebp)
 7720      000000
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 137


 7721 0010 C745E034 		movl	$LLSDA2382, -32(%ebp)
 7721      000000
 7722 0017 8D45E4   		leal	-28(%ebp), %eax
 7723 001a 8D55F4   		leal	-12(%ebp), %edx
 7724 001d 8910     		movl	%edx, (%eax)
 7725 001f BA910000 		movl	$L321, %edx
 7725      00
 7726 0024 895004   		movl	%edx, 4(%eax)
 7727 0027 896008   		movl	%esp, 8(%eax)
 7728 002a 8D45C4   		leal	-60(%ebp), %eax
 7729 002d 890424   		movl	%eax, (%esp)
 7730 0030 E8000000 		call	__Unwind_SjLj_Register
 7730      00
 7732              	LM399:
 7733              	LBB89:
 7734 0035 8B4508   		movl	8(%ebp), %eax
 7735 0038 890424   		movl	%eax, (%esp)
 7736 003b C745C8FF 		movl	$-1, -56(%ebp)
 7736      FFFFFF
 7737 0042 E8000000 		call	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv
 7737      00
 7738 0047 8945F0   		movl	%eax, -16(%ebp)
 7740              	LM400:
 7741 004a 8B450C   		movl	12(%ebp), %eax
 7742 004d 89442404 		movl	%eax, 4(%esp)
 7743 0051 8B45F0   		movl	-16(%ebp), %eax
 7744 0054 83C008   		addl	$8, %eax
 7745 0057 890424   		movl	%eax, (%esp)
 7746 005a C745C802 		movl	$2, -56(%ebp)
 7746      000000
 7747 0061 E8000000 		call	__ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_
 7747      00
 7748 0066 EB64     		jmp	L314
 7750              	LM401:
 7751              	L320:
 7752              	L315:
 7753 0068 8B45BC   		movl	-68(%ebp), %eax
 7754 006b 890424   		movl	%eax, (%esp)
 7755 006e E8000000 		call	___cxa_begin_catch
 7755      00
 7757              	LM402:
 7758 0073 8B45F0   		movl	-16(%ebp), %eax
 7759 0076 89442404 		movl	%eax, 4(%esp)
 7760 007a 8B4508   		movl	8(%ebp), %eax
 7761 007d 890424   		movl	%eax, (%esp)
 7762 0080 C745C801 		movl	$1, -56(%ebp)
 7762      000000
 7763 0087 E8000000 		call	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 7763      00
 7765              	LM403:
 7766 008c E8000000 		call	___cxa_rethrow
 7766      00
 7767              	L321:
 7768 0091 8D6D0C   		leal	12(%ebp), %ebp
 7769 0094 8B45C8   		movl	-56(%ebp), %eax
 7770 0097 8B55CC   		movl	-52(%ebp), %edx
 7771 009a 8955BC   		movl	%edx, -68(%ebp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 138


 7772 009d 83F801   		cmpl	$1, %eax
 7773 00a0 74C6     		je	L320
 7774              	L316:
 7775 00a2 8B45BC   		movl	-68(%ebp), %eax
 7776 00a5 8945B8   		movl	%eax, -72(%ebp)
 7777 00a8 C745C800 		movl	$0, -56(%ebp)
 7777      000000
 7778 00af E8000000 		call	___cxa_end_catch
 7778      00
 7779 00b4 8B55B8   		movl	-72(%ebp), %edx
 7780 00b7 8955BC   		movl	%edx, -68(%ebp)
 7781              	L318:
 7782 00ba 8B45BC   		movl	-68(%ebp), %eax
 7783 00bd 890424   		movl	%eax, (%esp)
 7784 00c0 C745C8FF 		movl	$-1, -56(%ebp)
 7784      FFFFFF
 7785 00c7 E8000000 		call	__Unwind_SjLj_Resume
 7785      00
 7786              	L314:
 7788              	LM404:
 7789 00cc 8B45F0   		movl	-16(%ebp), %eax
 7790 00cf 8945C0   		movl	%eax, -64(%ebp)
 7791              	L313:
 7792 00d2 8D45C4   		leal	-60(%ebp), %eax
 7793 00d5 890424   		movl	%eax, (%esp)
 7794 00d8 E8000000 		call	__Unwind_SjLj_Unregister
 7794      00
 7795              	LBE89:
 7796 00dd 8B45C0   		movl	-64(%ebp), %eax
 7797 00e0 83C44C   		addl	$76, %esp
 7798 00e3 5B       		popl	%ebx
 7799 00e4 5E       		popl	%esi
 7800 00e5 5F       		popl	%edi
 7801 00e6 5D       		popl	%ebp
 7802 00e7 C3       		ret
 7803              		.section	.gcc_except_table,""
 7804              		.align 4
 7805              	LLSDA2382:
 7806 0034 FF       		.byte	0xff
 7807 0035 00       		.byte	0x0
 7808 0036 0D       		.uleb128 LLSDATT2382-LLSDATTD2382
 7809              	LLSDATTD2382:
 7810 0037 01       		.byte	0x1
 7811 0038 04       		.uleb128 LLSDACSE2382-LLSDACSB2382
 7812              	LLSDACSB2382:
 7813 0039 00       		.uleb128 0x0
 7814 003a 00       		.uleb128 0x0
 7815 003b 01       		.uleb128 0x1
 7816 003c 01       		.uleb128 0x1
 7817              	LLSDACSE2382:
 7818 003d 01       		.byte	0x1
 7819 003e 00       		.byte	0x0
 7820 003f 00       		.align 4
 7821 0040 00000000 		.long	0
 7822              	LLSDATT2382:
 7823              		.section	.text$_ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_,"x"
 7824              		.linkonce discard
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 139


 7828              	Lscope68:
 7830              		.section	.text$_ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_,"x"
 7831              		.linkonce discard
 7832              		.align 2
 7836              	.globl __ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_
 7838              	__ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_:
 7840              	Ltext26:
   1:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
   3:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
   4:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** //
   5:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // Free Software Foundation; either version 2, or (at your option)
   9:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // any later version.
  10:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  11:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // GNU General Public License for more details.
  15:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  16:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License along
  17:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // with this library; see the file COPYING.  If not, write to the Free
  18:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
  19:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // USA.
  20:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  21:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // As a special exception, you may use this file as part of a free software
  22:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // library without restriction.  Specifically, if other files instantiate
  23:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // templates or use macros or inline functions from this file, or you compile
  24:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // this file and link it with other files to produce an executable, this
  25:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // file does not by itself cause the resulting executable to be covered by
  26:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // the GNU General Public License.  This exception does not however
  27:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // invalidate any other reasons why the executable file might be covered by
  28:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** // the GNU General Public License.
  29:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  30:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** /*
  31:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *
  32:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * Copyright (c) 1994
  33:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * Hewlett-Packard Company
  34:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *
  35:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  36:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  37:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  38:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  39:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  40:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  41:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  42:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *
  43:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *
  44:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  45:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  46:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *
  47:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  48:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  49:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  50:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 140


  51:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  52:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  53:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  54:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  */
  55:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  56:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** /** @file stl_construct.h
  57:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  58:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  *  You should not attempt to use it directly.
  59:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****  */
  60:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  61:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** #ifndef _CPP_BITS_STL_CONSTRUCT_H
  62:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** #define _CPP_BITS_STL_CONSTRUCT_H 1
  63:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  64:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** #include <bits/type_traits.h>
  65:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** #include <new>
  66:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  67:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** namespace std
  68:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** {
  69:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   /**
  70:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @if maint
  71:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  72:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * object's constructor with an initializer.
  73:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @endif
  74:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    */
  75:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   template <class _T1, class _T2>
  76:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     inline void
  77:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  78:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     { new (static_cast<void*>(__p)) _T1(__value); }
 7842              	LM405:
 7843 0000 55       		pushl	%ebp
 7844 0001 89E5     		movl	%esp, %ebp
 7845 0003 57       		pushl	%edi
 7846 0004 56       		pushl	%esi
 7847 0005 53       		pushl	%ebx
 7848 0006 83EC5C   		subl	$92, %esp
 7849 0009 C745E000 		movl	$___gxx_personality_sj0, -32(%ebp)
 7849      000000
 7850 0010 C745E444 		movl	$LLSDA2383, -28(%ebp)
 7850      000000
 7851 0017 8D45E8   		leal	-24(%ebp), %eax
 7852 001a 8D55F4   		leal	-12(%ebp), %edx
 7853 001d 8910     		movl	%edx, (%eax)
 7854 001f BA770000 		movl	$L333, %edx
 7854      00
 7855 0024 895004   		movl	%edx, 4(%eax)
 7856 0027 896008   		movl	%esp, 8(%eax)
 7857 002a 8D45C8   		leal	-56(%ebp), %eax
 7858 002d 890424   		movl	%eax, (%esp)
 7859 0030 E8000000 		call	__Unwind_SjLj_Register
 7859      00
 7861              	LM406:
 7862              	LBB90:
 7863 0035 8B4508   		movl	8(%ebp), %eax
 7864 0038 89442404 		movl	%eax, 4(%esp)
 7865 003c C7042438 		movl	$568, (%esp)
 7865      020000
 7866 0043 E8000000 		call	__ZnwjPv
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 141


 7866      00
 7867 0048 8945C4   		movl	%eax, -60(%ebp)
 7868 004b 837DC400 		cmpl	$0, -60(%ebp)
 7869 004f 746B     		je	L322
 7870 0051 C645C301 		movb	$1, -61(%ebp)
 7871 0055 C745BC01 		movl	$1, -68(%ebp)
 7871      000000
 7872 005c 8B450C   		movl	12(%ebp), %eax
 7873 005f 89442404 		movl	%eax, 4(%esp)
 7874 0063 8B45C4   		movl	-60(%ebp), %eax
 7875 0066 890424   		movl	%eax, (%esp)
 7876 0069 C745CC01 		movl	$1, -52(%ebp)
 7876      000000
 7877 0070 E8000000 		call	__ZN16ProcessImageDataC1ERKS_
 7877      00
 7878 0075 EB45     		jmp	L322
 7879              	L333:
 7880 0077 8D6D0C   		leal	12(%ebp), %ebp
 7881 007a 8B55D0   		movl	-48(%ebp), %edx
 7882 007d 8955B4   		movl	%edx, -76(%ebp)
 7883              	L325:
 7884 0080 8B45B4   		movl	-76(%ebp), %eax
 7885 0083 8945B8   		movl	%eax, -72(%ebp)
 7886 0086 837DBC00 		cmpl	$0, -68(%ebp)
 7887 008a 7418     		je	L328
 7888 008c 807DC300 		cmpb	$0, -61(%ebp)
 7889 0090 7412     		je	L328
 7890 0092 8B4508   		movl	8(%ebp), %eax
 7891 0095 89442404 		movl	%eax, 4(%esp)
 7892 0099 8B55C4   		movl	-60(%ebp), %edx
 7893 009c 891424   		movl	%edx, (%esp)
 7894 009f E8000000 		call	__ZdlPvS_
 7894      00
 7895              	L328:
 7896 00a4 8B45B8   		movl	-72(%ebp), %eax
 7897 00a7 8945B4   		movl	%eax, -76(%ebp)
 7898              	L331:
 7899 00aa 8B55B4   		movl	-76(%ebp), %edx
 7900 00ad 891424   		movl	%edx, (%esp)
 7901 00b0 C745CCFF 		movl	$-1, -52(%ebp)
 7901      FFFFFF
 7902 00b7 E8000000 		call	__Unwind_SjLj_Resume
 7902      00
 7903              	L322:
 7904 00bc 8D45C8   		leal	-56(%ebp), %eax
 7905 00bf 890424   		movl	%eax, (%esp)
 7906 00c2 E8000000 		call	__Unwind_SjLj_Unregister
 7906      00
 7907 00c7 83C45C   		addl	$92, %esp
 7908 00ca 5B       		popl	%ebx
 7909 00cb 5E       		popl	%esi
 7910 00cc 5F       		popl	%edi
 7911 00cd 5D       		popl	%ebp
 7912 00ce C3       		ret
 7913              	LBE90:
 7914              		.section	.gcc_except_table,""
 7915              	LLSDA2383:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 142


 7916 0044 FF       		.byte	0xff
 7917 0045 FF       		.byte	0xff
 7918 0046 01       		.byte	0x1
 7919 0047 02       		.uleb128 LLSDACSE2383-LLSDACSB2383
 7920              	LLSDACSB2383:
 7921 0048 00       		.uleb128 0x0
 7922 0049 00       		.uleb128 0x0
 7923              	LLSDACSE2383:
 7924              		.section	.text$_ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_,"x"
 7925              		.linkonce discard
 7926              	Lscope69:
 7928 00cf 90       		.section	.text$_ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_node
 7929              		.linkonce discard
 7930              		.align 2
 7934              	.globl __ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 7936              	__ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E:
 7938              	Ltext27:
 7940              	LM407:
 7941 0000 55       		pushl	%ebp
 7942 0001 89E5     		movl	%esp, %ebp
 7943 0003 83EC08   		subl	$8, %esp
 7945              	LM408:
 7946              	LBB91:
 7947 0006 C7442404 		movl	$1, 4(%esp)
 7947      01000000 
 7948 000e 8B450C   		movl	12(%ebp), %eax
 7949 0011 890424   		movl	%eax, (%esp)
 7950 0014 E8000000 		call	__ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0
 7950      00
 7951 0019 C9       		leave
 7952 001a C3       		ret
 7953              	LBE91:
 7954              	Lscope70:
 7956 001b 90       		.section	.text$_ZSt8_DestroyI16ProcessImageDataEvPT_,"x"
 7957              		.linkonce discard
 7958              		.align 2
 7961              	.globl __ZSt8_DestroyI16ProcessImageDataEvPT_
 7963              	__ZSt8_DestroyI16ProcessImageDataEvPT_:
 7965              	Ltext28:
  79:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** ng an allocated
  80:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * object's default constructor (no initializers).
  81:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @endif
  82:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    */
  83:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   template <class _T1>
  84:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     inline void
  85:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     _Construct(_T1* __p)
  86:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     { new (static_cast<void*>(__p)) _T1(); }
  87:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
  88:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   /**
  89:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @if maint
  90:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * Destroy a range of objects with nontrivial destructors.  
  91:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    *
  92:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * This is a helper function used only by _Destroy().
  93:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @endif
  94:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    */
  95:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   template <class _ForwardIterator>
  96:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     inline void
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 143


  97:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     __destroy_aux(_ForwardIterator __first, _ForwardIterator __last, __false_type)
  98:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     { for ( ; __first != __last; ++__first) _Destroy(&*__first); }
  99:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
 100:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   /**
 101:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @if maint
 102:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * Destroy a range of objects with trivial destructors.  Since the destructors
 103:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * are trivial, there's nothing to do and hopefully this function will be
 104:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * entirely optimized away.
 105:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    *
 106:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * This is a helper function used only by _Destroy().
 107:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @endif
 108:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    */
 109:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   template <class _ForwardIterator> 
 110:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     inline void
 111:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)
 112:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     { }
 113:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h **** 
 114:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   /**
 115:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @if maint
 116:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 117:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @endif
 118:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    */
 119:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   template <class _Tp>
 120:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     inline void
 121:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
 122:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 123:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   
 124:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****   /**
 125:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/bits/stl_construct.h ****    * @if maint
 7967              	LM409:
 7968 0000 55       		pushl	%ebp
 7969 0001 89E5     		movl	%esp, %ebp
 7970 0003 83EC08   		subl	$8, %esp
 7972              	LM410:
 7973              	LBB92:
 7974 0006 8B4508   		movl	8(%ebp), %eax
 7975 0009 890424   		movl	%eax, (%esp)
 7976 000c E8000000 		call	__ZN16ProcessImageDataD1Ev
 7976      00
 7977 0011 C9       		leave
 7978 0012 C3       		ret
 7979              	LBE92:
 7980              	Lscope71:
 7982 0013 90       		.section	.text$_ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templat
 7983              		.linkonce discard
 7984              		.align 2
 7988              	.globl __ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi
 7990              	__ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0EEE10d
 7992              	Ltext29:
 7994              	LM411:
 7995 0000 55       		pushl	%ebp
 7996 0001 89E5     		movl	%esp, %ebp
 7997 0003 83EC08   		subl	$8, %esp
 7999              	LM412:
 8000              	LBB93:
 8001 0006 837D0C00 		cmpl	$0, 12(%ebp)
 8002 000a 741C     		je	L336
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 144


 8003 000c 8B550C   		movl	12(%ebp), %edx
 8004 000f 89D0     		movl	%edx, %eax
 8005 0011 C1E003   		sall	$3, %eax
 8006 0014 01D0     		addl	%edx, %eax
 8007 0016 C1E006   		sall	$6, %eax
 8008 0019 89442404 		movl	%eax, 4(%esp)
 8009 001d 8B4508   		movl	8(%ebp), %eax
 8010 0020 890424   		movl	%eax, (%esp)
 8011 0023 E8000000 		call	__ZNSt24__default_alloc_templateILb1ELi0EE10deallocateEPvj
 8011      00
 8012              	L336:
 8013 0028 C9       		leave
 8014 0029 C3       		ret
 8015              	LBE93:
 8016              	Lscope72:
 8018 002a 9090     		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_,"x"
 8019              		.linkonce discard
 8020              		.align 2
 8024              	.globl __ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_
 8026              	__ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_:
 8028              	Ltext30:
 8030              	LM413:
 8031 0000 55       		pushl	%ebp
 8032 0001 89E5     		movl	%esp, %ebp
 8033 0003 57       		pushl	%edi
 8034 0004 56       		pushl	%esi
 8035 0005 53       		pushl	%ebx
 8036 0006 83EC4C   		subl	$76, %esp
 8037 0009 C745DC00 		movl	$___gxx_personality_sj0, -36(%ebp)
 8037      000000
 8038 0010 C745E04C 		movl	$LLSDA2387, -32(%ebp)
 8038      000000
 8039 0017 8D45E4   		leal	-28(%ebp), %eax
 8040 001a 8D55F4   		leal	-12(%ebp), %edx
 8041 001d 8910     		movl	%edx, (%eax)
 8042 001f BA910000 		movl	$L346, %edx
 8042      00
 8043 0024 895004   		movl	%edx, 4(%eax)
 8044 0027 896008   		movl	%esp, 8(%eax)
 8045 002a 8D45C4   		leal	-60(%ebp), %eax
 8046 002d 890424   		movl	%eax, (%esp)
 8047 0030 E8000000 		call	__Unwind_SjLj_Register
 8047      00
 8049              	LM414:
 8050              	LBB94:
 8051 0035 8B4508   		movl	8(%ebp), %eax
 8052 0038 890424   		movl	%eax, (%esp)
 8053 003b C745C8FF 		movl	$-1, -56(%ebp)
 8053      FFFFFF
 8054 0042 E8000000 		call	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv
 8054      00
 8055 0047 8945F0   		movl	%eax, -16(%ebp)
 8057              	LM415:
 8058 004a 8B450C   		movl	12(%ebp), %eax
 8059 004d 89442404 		movl	%eax, 4(%esp)
 8060 0051 8B45F0   		movl	-16(%ebp), %eax
 8061 0054 83C008   		addl	$8, %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 145


 8062 0057 890424   		movl	%eax, (%esp)
 8063 005a C745C802 		movl	$2, -56(%ebp)
 8063      000000
 8064 0061 E8000000 		call	__ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_
 8064      00
 8065 0066 EB64     		jmp	L339
 8067              	LM416:
 8068              	L345:
 8069              	L340:
 8070 0068 8B45BC   		movl	-68(%ebp), %eax
 8071 006b 890424   		movl	%eax, (%esp)
 8072 006e E8000000 		call	___cxa_begin_catch
 8072      00
 8074              	LM417:
 8075 0073 8B45F0   		movl	-16(%ebp), %eax
 8076 0076 89442404 		movl	%eax, 4(%esp)
 8077 007a 8B4508   		movl	8(%ebp), %eax
 8078 007d 890424   		movl	%eax, (%esp)
 8079 0080 C745C801 		movl	$1, -56(%ebp)
 8079      000000
 8080 0087 E8000000 		call	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 8080      00
 8082              	LM418:
 8083 008c E8000000 		call	___cxa_rethrow
 8083      00
 8084              	L346:
 8085 0091 8D6D0C   		leal	12(%ebp), %ebp
 8086 0094 8B45C8   		movl	-56(%ebp), %eax
 8087 0097 8B55CC   		movl	-52(%ebp), %edx
 8088 009a 8955BC   		movl	%edx, -68(%ebp)
 8089 009d 83F801   		cmpl	$1, %eax
 8090 00a0 74C6     		je	L345
 8091              	L341:
 8092 00a2 8B45BC   		movl	-68(%ebp), %eax
 8093 00a5 8945B8   		movl	%eax, -72(%ebp)
 8094 00a8 C745C800 		movl	$0, -56(%ebp)
 8094      000000
 8095 00af E8000000 		call	___cxa_end_catch
 8095      00
 8096 00b4 8B55B8   		movl	-72(%ebp), %edx
 8097 00b7 8955BC   		movl	%edx, -68(%ebp)
 8098              	L343:
 8099 00ba 8B45BC   		movl	-68(%ebp), %eax
 8100 00bd 890424   		movl	%eax, (%esp)
 8101 00c0 C745C8FF 		movl	$-1, -56(%ebp)
 8101      FFFFFF
 8102 00c7 E8000000 		call	__Unwind_SjLj_Resume
 8102      00
 8103              	L339:
 8105              	LM419:
 8106 00cc 8B45F0   		movl	-16(%ebp), %eax
 8107 00cf 8945C0   		movl	%eax, -64(%ebp)
 8108              	L338:
 8109 00d2 8D45C4   		leal	-60(%ebp), %eax
 8110 00d5 890424   		movl	%eax, (%esp)
 8111 00d8 E8000000 		call	__Unwind_SjLj_Unregister
 8111      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 146


 8112              	LBE94:
 8113 00dd 8B45C0   		movl	-64(%ebp), %eax
 8114 00e0 83C44C   		addl	$76, %esp
 8115 00e3 5B       		popl	%ebx
 8116 00e4 5E       		popl	%esi
 8117 00e5 5F       		popl	%edi
 8118 00e6 5D       		popl	%ebp
 8119 00e7 C3       		ret
 8120              		.section	.gcc_except_table,""
 8121 004a 0000     		.align 4
 8122              	LLSDA2387:
 8123 004c FF       		.byte	0xff
 8124 004d 00       		.byte	0x0
 8125 004e 0D       		.uleb128 LLSDATT2387-LLSDATTD2387
 8126              	LLSDATTD2387:
 8127 004f 01       		.byte	0x1
 8128 0050 04       		.uleb128 LLSDACSE2387-LLSDACSB2387
 8129              	LLSDACSB2387:
 8130 0051 00       		.uleb128 0x0
 8131 0052 00       		.uleb128 0x0
 8132 0053 01       		.uleb128 0x1
 8133 0054 01       		.uleb128 0x1
 8134              	LLSDACSE2387:
 8135 0055 01       		.byte	0x1
 8136 0056 00       		.byte	0x0
 8137 0057 00       		.align 4
 8138 0058 00000000 		.long	0
 8139              	LLSDATT2387:
 8140              		.section	.text$_ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_,"x"
 8141              		.linkonce discard
 8145              	Lscope73:
 8147              		.section	.text$_ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_,"x"
 8148              		.linkonce discard
 8149              		.align 2
 8153              	.globl __ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_
 8155              	__ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_:
 8157              	Ltext31:
 8159              	LM420:
 8160 0000 55       		pushl	%ebp
 8161 0001 89E5     		movl	%esp, %ebp
 8162 0003 57       		pushl	%edi
 8163 0004 56       		pushl	%esi
 8164 0005 53       		pushl	%ebx
 8165 0006 83EC5C   		subl	$92, %esp
 8166 0009 C745E000 		movl	$___gxx_personality_sj0, -32(%ebp)
 8166      000000
 8167 0010 C745E45C 		movl	$LLSDA2388, -28(%ebp)
 8167      000000
 8168 0017 8D45E8   		leal	-24(%ebp), %eax
 8169 001a 8D55F4   		leal	-12(%ebp), %edx
 8170 001d 8910     		movl	%edx, (%eax)
 8171 001f BA770000 		movl	$L358, %edx
 8171      00
 8172 0024 895004   		movl	%edx, 4(%eax)
 8173 0027 896008   		movl	%esp, 8(%eax)
 8174 002a 8D45C8   		leal	-56(%ebp), %eax
 8175 002d 890424   		movl	%eax, (%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 147


 8176 0030 E8000000 		call	__Unwind_SjLj_Register
 8176      00
 8178              	LM421:
 8179              	LBB95:
 8180 0035 8B4508   		movl	8(%ebp), %eax
 8181 0038 89442404 		movl	%eax, 4(%esp)
 8182 003c C704240C 		movl	$12, (%esp)
 8182      000000
 8183 0043 E8000000 		call	__ZnwjPv
 8183      00
 8184 0048 8945C4   		movl	%eax, -60(%ebp)
 8185 004b 837DC400 		cmpl	$0, -60(%ebp)
 8186 004f 746B     		je	L347
 8187 0051 C645C301 		movb	$1, -61(%ebp)
 8188 0055 C745BC01 		movl	$1, -68(%ebp)
 8188      000000
 8189 005c 8B450C   		movl	12(%ebp), %eax
 8190 005f 89442404 		movl	%eax, 4(%esp)
 8191 0063 8B45C4   		movl	-60(%ebp), %eax
 8192 0066 890424   		movl	%eax, (%esp)
 8193 0069 C745CC01 		movl	$1, -52(%ebp)
 8193      000000
 8194 0070 E8000000 		call	__ZN13LogBinaryDataC1ERKS_
 8194      00
 8195 0075 EB45     		jmp	L347
 8196              	L358:
 8197 0077 8D6D0C   		leal	12(%ebp), %ebp
 8198 007a 8B55D0   		movl	-48(%ebp), %edx
 8199 007d 8955B4   		movl	%edx, -76(%ebp)
 8200              	L350:
 8201 0080 8B45B4   		movl	-76(%ebp), %eax
 8202 0083 8945B8   		movl	%eax, -72(%ebp)
 8203 0086 837DBC00 		cmpl	$0, -68(%ebp)
 8204 008a 7418     		je	L353
 8205 008c 807DC300 		cmpb	$0, -61(%ebp)
 8206 0090 7412     		je	L353
 8207 0092 8B4508   		movl	8(%ebp), %eax
 8208 0095 89442404 		movl	%eax, 4(%esp)
 8209 0099 8B55C4   		movl	-60(%ebp), %edx
 8210 009c 891424   		movl	%edx, (%esp)
 8211 009f E8000000 		call	__ZdlPvS_
 8211      00
 8212              	L353:
 8213 00a4 8B45B8   		movl	-72(%ebp), %eax
 8214 00a7 8945B4   		movl	%eax, -76(%ebp)
 8215              	L356:
 8216 00aa 8B55B4   		movl	-76(%ebp), %edx
 8217 00ad 891424   		movl	%edx, (%esp)
 8218 00b0 C745CCFF 		movl	$-1, -52(%ebp)
 8218      FFFFFF
 8219 00b7 E8000000 		call	__Unwind_SjLj_Resume
 8219      00
 8220              	L347:
 8221 00bc 8D45C8   		leal	-56(%ebp), %eax
 8222 00bf 890424   		movl	%eax, (%esp)
 8223 00c2 E8000000 		call	__Unwind_SjLj_Unregister
 8223      00
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 148


 8224 00c7 83C45C   		addl	$92, %esp
 8225 00ca 5B       		popl	%ebx
 8226 00cb 5E       		popl	%esi
 8227 00cc 5F       		popl	%edi
 8228 00cd 5D       		popl	%ebp
 8229 00ce C3       		ret
 8230              	LBE95:
 8231              		.section	.gcc_except_table,""
 8232              	LLSDA2388:
 8233 005c FF       		.byte	0xff
 8234 005d FF       		.byte	0xff
 8235 005e 01       		.byte	0x1
 8236 005f 02       		.uleb128 LLSDACSE2388-LLSDACSB2388
 8237              	LLSDACSB2388:
 8238 0060 00       		.uleb128 0x0
 8239 0061 00       		.uleb128 0x0
 8240              	LLSDACSE2388:
 8241              		.section	.text$_ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_,"x"
 8242              		.linkonce discard
 8243              	Lscope74:
 8245 00cf 90       		.section	.text$_ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0
 8246              		.linkonce discard
 8247              		.align 2
 8251              	.globl __ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 8253              	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E:
 8255              	Ltext32:
 8257              	LM422:
 8258 0000 55       		pushl	%ebp
 8259 0001 89E5     		movl	%esp, %ebp
 8260 0003 83EC08   		subl	$8, %esp
 8262              	LM423:
 8263              	LBB96:
 8264 0006 C7442404 		movl	$1, 4(%esp)
 8264      01000000 
 8265 000e 8B450C   		movl	12(%ebp), %eax
 8266 0011 890424   		movl	%eax, (%esp)
 8267 0014 E8000000 		call	__ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE
 8267      00
 8268 0019 C9       		leave
 8269 001a C3       		ret
 8270              	LBE96:
 8271              	Lscope75:
 8273 001b 90       		.section	.text$_ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateIL
 8274              		.linkonce discard
 8275              		.align 2
 8279              	.globl __ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EE
 8281              	__ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE10deal
 8283              	Ltext33:
 8285              	LM424:
 8286 0000 55       		pushl	%ebp
 8287 0001 89E5     		movl	%esp, %ebp
 8288 0003 83EC08   		subl	$8, %esp
 8290              	LM425:
 8291              	LBB97:
 8292 0006 837D0C00 		cmpl	$0, 12(%ebp)
 8293 000a 741C     		je	L360
 8294 000c 8B550C   		movl	12(%ebp), %edx
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 149


 8295 000f 89D0     		movl	%edx, %eax
 8296 0011 C1E002   		sall	$2, %eax
 8297 0014 01D0     		addl	%edx, %eax
 8298 0016 C1E002   		sall	$2, %eax
 8299 0019 89442404 		movl	%eax, 4(%esp)
 8300 001d 8B4508   		movl	8(%ebp), %eax
 8301 0020 890424   		movl	%eax, (%esp)
 8302 0023 E8000000 		call	__ZNSt24__default_alloc_templateILb1ELi0EE10deallocateEPvj
 8302      00
 8303              	L360:
 8304 0028 C9       		leave
 8305 0029 C3       		ret
 8306              	LBE97:
 8307              	Lscope76:
 8309 002a 9090     		.section	.text$_ZNSt10_List_baseI13LogBinaryDataSaIS0_EE7__clearEv,"x"
 8310              		.linkonce discard
 8311              		.align 2
 8314              	.globl __ZNSt10_List_baseI13LogBinaryDataSaIS0_EE7__clearEv
 8316              	__ZNSt10_List_baseI13LogBinaryDataSaIS0_EE7__clearEv:
 8318              	Ltext34:
 8320              	LM426:
 8321 0000 55       		pushl	%ebp
 8322 0001 89E5     		movl	%esp, %ebp
 8323 0003 83EC18   		subl	$24, %esp
 8325              	LM427:
 8326              	LBB98:
 8327 0006 8B4508   		movl	8(%ebp), %eax
 8328 0009 8B00     		movl	(%eax), %eax
 8329 000b 8B00     		movl	(%eax), %eax
 8330 000d 8945FC   		movl	%eax, -4(%ebp)
 8332              	LM428:
 8333              	L363:
 8334 0010 8B5508   		movl	8(%ebp), %edx
 8335 0013 8B45FC   		movl	-4(%ebp), %eax
 8336 0016 3B02     		cmpl	(%edx), %eax
 8337 0018 7502     		jne	L365
 8338 001a EB30     		jmp	L364
 8339              	L365:
 8341              	LM429:
 8342              	LBB99:
 8343              	LBB100:
 8344 001c 8B45FC   		movl	-4(%ebp), %eax
 8345 001f 8945F8   		movl	%eax, -8(%ebp)
 8347              	LM430:
 8348 0022 8B45FC   		movl	-4(%ebp), %eax
 8349 0025 8B00     		movl	(%eax), %eax
 8350 0027 8945FC   		movl	%eax, -4(%ebp)
 8352              	LM431:
 8353 002a 8B45F8   		movl	-8(%ebp), %eax
 8354 002d 83C008   		addl	$8, %eax
 8355 0030 890424   		movl	%eax, (%esp)
 8356 0033 E8000000 		call	__ZSt8_DestroyI13LogBinaryDataEvPT_
 8356      00
 8358              	LM432:
 8359 0038 8B45F8   		movl	-8(%ebp), %eax
 8360 003b 89442404 		movl	%eax, 4(%esp)
 8361 003f 8B4508   		movl	8(%ebp), %eax
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 150


 8362 0042 890424   		movl	%eax, (%esp)
 8363 0045 E8000000 		call	__ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
 8363      00
 8364              	LBE100:
 8365              	LBE99:
 8366 004a EBC4     		jmp	L363
 8367              	L364:
 8369              	LM433:
 8370 004c 8B4508   		movl	8(%ebp), %eax
 8371 004f 8B10     		movl	(%eax), %edx
 8372 0051 8B4508   		movl	8(%ebp), %eax
 8373 0054 8B00     		movl	(%eax), %eax
 8374 0056 8902     		movl	%eax, (%edx)
 8376              	LM434:
 8377 0058 8B4508   		movl	8(%ebp), %eax
 8378 005b 8B10     		movl	(%eax), %edx
 8379 005d 8B4508   		movl	8(%ebp), %eax
 8380 0060 8B00     		movl	(%eax), %eax
 8381 0062 894204   		movl	%eax, 4(%edx)
 8382 0065 C9       		leave
 8383 0066 C3       		ret
 8384              	LBE98:
 8391              	Lscope77:
 8393              	.globl __ZTI14ConvertRequest
 8394 0067 90       		.section	.rdata$_ZTI14ConvertRequest,""
 8395              		.linkonce same_size
 8396              		.align 4
 8397              	__ZTI14ConvertRequest:
 8398 0000 08000000 		.long	__ZTVN10__cxxabiv120__si_class_type_infoE+8
 8399 0004 00000000 		.long	__ZTS14ConvertRequest
 8400 0008 00000000 		.long	__ZTIN10ThreadPool10IRunObjectE
 8401              	.globl __ZTS14ConvertRequest
 8402              		.section	.rdata$_ZTS14ConvertRequest,""
 8403              		.linkonce same_size
 8404              	__ZTS14ConvertRequest:
 8405 0000 3134436F 		.ascii "14ConvertRequest\0"
 8405      6E766572 
 8405      74526571 
 8405      75657374 
 8405      00
 8406              	.globl __ZTVN10ThreadPool10IRunObjectE
 8407 0011 000000   		.section	.rdata$_ZTVN10ThreadPool10IRunObjectE,""
 8408              		.linkonce same_size
 8409              		.align 8
 8410              	__ZTVN10ThreadPool10IRunObjectE:
 8411 0000 00000000 		.long	0
 8412 0004 00000000 		.long	__ZTIN10ThreadPool10IRunObjectE
 8413 0008 00000000 		.long	__ZN10ThreadPool10IRunObjectD1Ev
 8414 000c 00000000 		.long	__ZN10ThreadPool10IRunObjectD0Ev
 8415 0010 00000000 		.long	___cxa_pure_virtual
 8416 0014 00000000 		.long	___cxa_pure_virtual
 8417              		.section	.text$_ZnwjPv,"x"
 8418              		.linkonce discard
 8419              		.align 2
 8422              	.globl __ZnwjPv
 8424              	__ZnwjPv:
 8426              	Ltext35:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 151


   1:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // The -*- C++ -*- dynamic memory management header.
   2:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
   3:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // Copyright (C) 1994, 1996, 1997, 1998, 2000, 2001, 2002
   4:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // Free Software Foundation
   5:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
   6:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // This file is part of GNU CC.
   7:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** //
   8:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // GNU CC is free software; you can redistribute it and/or modify
   9:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // it under the terms of the GNU General Public License as published by
  10:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // the Free Software Foundation; either version 2, or (at your option)
  11:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // any later version.
  12:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // 
  13:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // GNU CC is distributed in the hope that it will be useful,
  14:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // GNU General Public License for more details.
  17:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // 
  18:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // You should have received a copy of the GNU General Public License
  19:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // along with GNU CC; see the file COPYING.  If not, write to
  20:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // the Free Software Foundation, 59 Temple Place - Suite 330,
  21:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // Boston, MA 02111-1307, USA.
  22:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  23:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // As a special exception, you may use this file as part of a free software
  24:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // library without restriction.  Specifically, if other files instantiate
  25:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // templates or use macros or inline functions from this file, or you compile
  26:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // this file and link it with other files to produce an executable, this
  27:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // file does not by itself cause the resulting executable to be covered by
  28:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // the GNU General Public License.  This exception does not however
  29:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // invalidate any other reasons why the executable file might be covered by
  30:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // the GNU General Public License.
  31:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  32:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** /** @file new
  33:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  The header @c new defines several functions to manage dynamic memory and
  34:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  handling memory allocation errors; see
  35:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  36:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  */
  37:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  38:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** #ifndef __NEW__
  39:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** #define __NEW__
  40:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  41:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** #include <cstddef>
  42:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** #include <exception>
  43:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  44:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** extern "C++" {
  45:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  46:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** namespace std 
  47:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** {
  48:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   /**
  49:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****    *  @brief  Exception possibly thrown by @c new.
  50:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****    *
  51:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  52:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****    *  errors from the throwing forms of @c new.  */
  53:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   class bad_alloc : public exception 
  54:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   {
  55:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   public:
  56:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****     bad_alloc() throw() { }
  57:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****     // This declaration is not useless:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 152


  58:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  59:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****     virtual ~bad_alloc() throw();
  60:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   };
  61:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  62:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   struct nothrow_t { };
  63:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   extern const nothrow_t nothrow;
  64:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   /** If you write your own error handler to be called by @c new, it must
  65:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****    *  be of this type.  */
  66:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   typedef void (*new_handler)();
  67:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   /// Takes a replacement handler as the argument, returns the previous handler.
  68:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****   new_handler set_new_handler(new_handler) throw();
  69:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** } // namespace std
  70:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  71:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** //@{
  72:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** /** These are replaceable signatures:
  73:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
  74:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  - normal array new and delete (same)
  75:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
  76:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *    @c NULL on error)
  77:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  - @c nothrow array new and delete (same)
  78:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *
  79:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  Placement new and delete signatures (take a memory address argument,
  80:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new ****  *  does nothing) may not be replaced by a user's program.
  81:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** */
  82:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void* operator new(std::size_t) throw (std::bad_alloc);
  83:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void* operator new[](std::size_t) throw (std::bad_alloc);
  84:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void operator delete(void*) throw();
  85:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void operator delete[](void*) throw();
  86:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void* operator new(std::size_t, const std::nothrow_t&) throw();
  87:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void* operator new[](std::size_t, const std::nothrow_t&) throw();
  88:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void operator delete(void*, const std::nothrow_t&) throw();
  89:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** void operator delete[](void*, const std::nothrow_t&) throw();
  90:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  91:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // Default placement versions of operator new.
  92:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** inline void* operator new(std::size_t, void* __p) throw() { return __p; }
 8428              	LM435:
 8429 0000 55       		pushl	%ebp
 8430 0001 89E5     		movl	%esp, %ebp
 8432              	LM436:
 8433              	LBB101:
 8434 0003 8B450C   		movl	12(%ebp), %eax
 8435              	L367:
 8436              	L366:
 8437 0006 5D       		popl	%ebp
 8438 0007 C3       		ret
 8439              	LBE101:
 8440              	Lscope78:
 8442              		.section	.text$_ZdlPvS_,"x"
 8443              		.linkonce discard
 8444              		.align 2
 8446              	.globl __ZdlPvS_
 8448              	__ZdlPvS_:
  93:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** n __p; }
  94:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** inline void* operator new[](std::size_t, void* __p) throw() { return __p; }
  95:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** 
  96:f:/K7_TOUR/CODE/Tools/MinGW/include/c++/3.3.1/new **** // Default placement versions of operator delete.
 8450              	LM437:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 153


 8451              	L370:
 8452              	L369:
 8453 0000 55       		pushl	%ebp
 8454 0001 89E5     		movl	%esp, %ebp
 8456              	LM438:
 8457 0003 5D       		popl	%ebp
 8458 0004 C3       		ret
 8459              	Lscope79:
 8461 0005 909090   		.section	.text$_ZN10ThreadPool10IRunObjectD2Ev,"x"
 8462              		.linkonce discard
 8463              		.align 2
 8466              	.globl __ZN10ThreadPool10IRunObjectD2Ev
 8468              	__ZN10ThreadPool10IRunObjectD2Ev:
 8470              	Ltext36:
 8472              	LM439:
 8473 0000 55       		pushl	%ebp
 8474 0001 89E5     		movl	%esp, %ebp
 8475 0003 83EC08   		subl	$8, %esp
 8477              	LM440:
 8478              	LBB102:
 8479 0006 8B4508   		movl	8(%ebp), %eax
 8480 0009 C7000800 		movl	$__ZTVN10ThreadPool10IRunObjectE+8, (%eax)
 8480      0000
 8481              	LBE102:
 8482 000f B8010000 		movl	$1, %eax
 8482      00
 8483 0014 83E000   		andl	$0, %eax
 8484 0017 84C0     		testb	%al, %al
 8485 0019 740B     		je	L372
 8486 001b 8B4508   		movl	8(%ebp), %eax
 8487 001e 890424   		movl	%eax, (%esp)
 8488 0021 E8000000 		call	__ZdlPv
 8488      00
 8489              	L372:
 8490 0026 C9       		leave
 8491 0027 C3       		ret
 8492              	Lscope80:
 8494              		.section	.text$_ZN10ThreadPool10IRunObjectD1Ev,"x"
 8495              		.linkonce discard
 8496              		.align 2
 8499              	.globl __ZN10ThreadPool10IRunObjectD1Ev
 8501              	__ZN10ThreadPool10IRunObjectD1Ev:
 8503              	LM441:
 8504 0000 55       		pushl	%ebp
 8505 0001 89E5     		movl	%esp, %ebp
 8506 0003 83EC08   		subl	$8, %esp
 8508              	LM442:
 8509              	LBB103:
 8510 0006 8B4508   		movl	8(%ebp), %eax
 8511 0009 C7000800 		movl	$__ZTVN10ThreadPool10IRunObjectE+8, (%eax)
 8511      0000
 8512              	LBE103:
 8513 000f B8010000 		movl	$1, %eax
 8513      00
 8514 0014 83E002   		andl	$2, %eax
 8515 0017 84C0     		testb	%al, %al
 8516 0019 740B     		je	L376
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 154


 8517 001b 8B4508   		movl	8(%ebp), %eax
 8518 001e 890424   		movl	%eax, (%esp)
 8519 0021 E8000000 		call	__ZdlPv
 8519      00
 8520              	L376:
 8521 0026 C9       		leave
 8522 0027 C3       		ret
 8523              	Lscope81:
 8525              		.section	.text$_ZN10ThreadPool10IRunObjectD0Ev,"x"
 8526              		.linkonce discard
 8527              		.align 2
 8530              	.globl __ZN10ThreadPool10IRunObjectD0Ev
 8532              	__ZN10ThreadPool10IRunObjectD0Ev:
 8534              	LM443:
 8535 0000 55       		pushl	%ebp
 8536 0001 89E5     		movl	%esp, %ebp
 8537 0003 83EC08   		subl	$8, %esp
 8539              	LM444:
 8540              	LBB104:
 8541 0006 8B4508   		movl	8(%ebp), %eax
 8542 0009 C7000800 		movl	$__ZTVN10ThreadPool10IRunObjectE+8, (%eax)
 8542      0000
 8543              	LBE104:
 8544 000f B8010000 		movl	$1, %eax
 8544      00
 8545 0014 83E003   		andl	$3, %eax
 8546 0017 84C0     		testb	%al, %al
 8547 0019 740B     		je	L380
 8548 001b 8B4508   		movl	8(%ebp), %eax
 8549 001e 890424   		movl	%eax, (%esp)
 8550 0021 E8000000 		call	__ZdlPv
 8550      00
 8551              	L380:
 8552 0026 C9       		leave
 8553 0027 C3       		ret
 8554              	Lscope82:
 8556              		.section	.text$_ZN16ProcessImageDataC1ERKS_,"x"
 8557              		.linkonce discard
 8558              		.align 2
 8562              	.globl __ZN16ProcessImageDataC1ERKS_
 8564              	__ZN16ProcessImageDataC1ERKS_:
 8566              	Ltext37:
 8568              	LM445:
 8569 0000 55       		pushl	%ebp
 8570 0001 89E5     		movl	%esp, %ebp
 8571 0003 57       		pushl	%edi
 8572 0004 56       		pushl	%esi
 8573 0005 53       		pushl	%ebx
 8574 0006 83EC5C   		subl	$92, %esp
 8575 0009 C745E000 		movl	$___gxx_personality_sj0, -32(%ebp)
 8575      000000
 8576 0010 C745E462 		movl	$LLSDA2397, -28(%ebp)
 8576      000000
 8577 0017 8D45E8   		leal	-24(%ebp), %eax
 8578 001a 8D55F4   		leal	-12(%ebp), %edx
 8579 001d 8910     		movl	%edx, (%eax)
 8580 001f BA450100 		movl	$L398, %edx
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 155


 8580      00
 8581 0024 895004   		movl	%edx, 4(%eax)
 8582 0027 896008   		movl	%esp, 8(%eax)
 8583 002a 8D45C8   		leal	-56(%ebp), %eax
 8584 002d 890424   		movl	%eax, (%esp)
 8585 0030 E8000000 		call	__Unwind_SjLj_Register
 8585      00
 8587              	LM446:
 8588 0035 8B4508   		movl	8(%ebp), %eax
 8589              	LBB105:
 8590 0038 83C004   		addl	$4, %eax
 8591 003b 890424   		movl	%eax, (%esp)
 8592 003e E8000000 		call	__ZNSsC1Ev
 8592      00
 8593 0043 8B4508   		movl	8(%ebp), %eax
 8594 0046 83C008   		addl	$8, %eax
 8595 0049 890424   		movl	%eax, (%esp)
 8596 004c E8000000 		call	__ZNSsC1Ev
 8596      00
 8597 0051 8B4508   		movl	8(%ebp), %eax
 8598 0054 05300200 		addl	$560, %eax
 8598      00
 8599 0059 890424   		movl	%eax, (%esp)
 8600 005c E8000000 		call	__ZN21_ResgenImageOutStreamC1Ev
 8600      00
 8602              	LM447:
 8603 0061 8B5508   		movl	8(%ebp), %edx
 8604 0064 8B450C   		movl	12(%ebp), %eax
 8605 0067 0FB700   		movzwl	(%eax), %eax
 8606 006a 668902   		movw	%ax, (%edx)
 8608              	LM448:
 8609 006d 8B450C   		movl	12(%ebp), %eax
 8610 0070 83C004   		addl	$4, %eax
 8611 0073 89442404 		movl	%eax, 4(%esp)
 8612 0077 8B4508   		movl	8(%ebp), %eax
 8613 007a 83C004   		addl	$4, %eax
 8614 007d 890424   		movl	%eax, (%esp)
 8615 0080 C745CC01 		movl	$1, -52(%ebp)
 8615      000000
 8616 0087 E8000000 		call	__ZNSsaSERKSs
 8616      00
 8618              	LM449:
 8619 008c 8B450C   		movl	12(%ebp), %eax
 8620 008f 83C008   		addl	$8, %eax
 8621 0092 89442404 		movl	%eax, 4(%esp)
 8622 0096 8B4508   		movl	8(%ebp), %eax
 8623 0099 83C008   		addl	$8, %eax
 8624 009c 890424   		movl	%eax, (%esp)
 8625 009f E8000000 		call	__ZNSsaSERKSs
 8625      00
 8627              	LM450:
 8628 00a4 8B5508   		movl	8(%ebp), %edx
 8629 00a7 8B450C   		movl	12(%ebp), %eax
 8630 00aa 8B400C   		movl	12(%eax), %eax
 8631 00ad 89420C   		movl	%eax, 12(%edx)
 8633              	LM451:
 8634 00b0 8B5508   		movl	8(%ebp), %edx
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 156


 8635 00b3 8B450C   		movl	12(%ebp), %eax
 8636 00b6 8B4010   		movl	16(%eax), %eax
 8637 00b9 894210   		movl	%eax, 16(%edx)
 8639              	LM452:
 8640 00bc 8B4508   		movl	8(%ebp), %eax
 8641 00bf 83C014   		addl	$20, %eax
 8642 00c2 8B550C   		movl	12(%ebp), %edx
 8643 00c5 83C214   		addl	$20, %edx
 8644 00c8 8945C4   		movl	%eax, -60(%ebp)
 8645 00cb 8955C0   		movl	%edx, -64(%ebp)
 8646 00ce C745BC1C 		movl	$540, -68(%ebp)
 8646      020000
 8647 00d5 8B45C4   		movl	-60(%ebp), %eax
 8648 00d8 83E004   		andl	$4, %eax
 8649 00db 85C0     		testl	%eax, %eax
 8650 00dd 7416     		je	L385
 8651 00df 8B75C0   		movl	-64(%ebp), %esi
 8652 00e2 8B06     		movl	(%esi), %eax
 8653 00e4 8B7DC4   		movl	-60(%ebp), %edi
 8654 00e7 8907     		movl	%eax, (%edi)
 8655 00e9 8345C404 		addl	$4, -60(%ebp)
 8656 00ed 8345C004 		addl	$4, -64(%ebp)
 8657 00f1 836DBC04 		subl	$4, -68(%ebp)
 8658              	L385:
 8659 00f5 FC       		cld
 8660 00f6 8B4DBC   		movl	-68(%ebp), %ecx
 8661 00f9 C1E902   		shrl	$2, %ecx
 8662 00fc 8B7DC4   		movl	-60(%ebp), %edi
 8663 00ff 8B75C0   		movl	-64(%ebp), %esi
 8664 0102 F3       		rep
 8665 0103 A5       		movsl
 8667              	LM453:
 8668 0104 8B4D08   		movl	8(%ebp), %ecx
 8669 0107 81C13002 		addl	$560, %ecx
 8669      0000
 8670 010d 8B550C   		movl	12(%ebp), %edx
 8671 0110 81C23002 		addl	$560, %edx
 8671      0000
 8672 0116 8B02     		movl	(%edx), %eax
 8673 0118 8901     		movl	%eax, (%ecx)
 8674 011a 8B4204   		movl	4(%edx), %eax
 8675 011d 894104   		movl	%eax, 4(%ecx)
 8677              	LM454:
 8678 0120 8B5508   		movl	8(%ebp), %edx
 8679 0123 8B4508   		movl	8(%ebp), %eax
 8680 0126 05300200 		addl	$560, %eax
 8680      00
 8681 012b 89821802 		movl	%eax, 536(%edx)
 8681      0000
 8683              	LM455:
 8684 0131 8B5508   		movl	8(%ebp), %edx
 8685 0134 8B450C   		movl	12(%ebp), %eax
 8686 0137 8B802802 		movl	552(%eax), %eax
 8686      0000
 8687 013d 89822802 		movl	%eax, 552(%edx)
 8687      0000
 8688 0143 EB6B     		jmp	L384
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 157


 8689              	L398:
 8690 0145 8D6D0C   		leal	12(%ebp), %ebp
 8691 0148 8B45D0   		movl	-48(%ebp), %eax
 8692 014b 8945B4   		movl	%eax, -76(%ebp)
 8693              	L386:
 8694 014e 8B55B4   		movl	-76(%ebp), %edx
 8695 0151 8955B8   		movl	%edx, -72(%ebp)
 8696 0154 8B4508   		movl	8(%ebp), %eax
 8697 0157 05300200 		addl	$560, %eax
 8697      00
 8698 015c 890424   		movl	%eax, (%esp)
 8699 015f E8000000 		call	__ZN21_ResgenImageOutStreamD1Ev
 8699      00
 8700 0164 8B75B8   		movl	-72(%ebp), %esi
 8701 0167 8975B4   		movl	%esi, -76(%ebp)
 8702              	L388:
 8703              	L390:
 8704 016a 8B7DB4   		movl	-76(%ebp), %edi
 8705 016d 897DB0   		movl	%edi, -80(%ebp)
 8706 0170 8B4508   		movl	8(%ebp), %eax
 8707 0173 83C008   		addl	$8, %eax
 8708 0176 890424   		movl	%eax, (%esp)
 8709 0179 E8000000 		call	__ZNSsD1Ev
 8709      00
 8710 017e 8B45B0   		movl	-80(%ebp), %eax
 8711 0181 8945B4   		movl	%eax, -76(%ebp)
 8712              	L392:
 8713              	L394:
 8714 0184 8B55B4   		movl	-76(%ebp), %edx
 8715 0187 8955AC   		movl	%edx, -84(%ebp)
 8716 018a 8B4508   		movl	8(%ebp), %eax
 8717 018d 83C004   		addl	$4, %eax
 8718 0190 890424   		movl	%eax, (%esp)
 8719 0193 E8000000 		call	__ZNSsD1Ev
 8719      00
 8720 0198 8B75AC   		movl	-84(%ebp), %esi
 8721 019b 8975B4   		movl	%esi, -76(%ebp)
 8722              	L396:
 8723 019e 8B7DB4   		movl	-76(%ebp), %edi
 8724 01a1 893C24   		movl	%edi, (%esp)
 8725 01a4 C745CCFF 		movl	$-1, -52(%ebp)
 8725      FFFFFF
 8726 01ab E8000000 		call	__Unwind_SjLj_Resume
 8726      00
 8728              	LM456:
 8729              	L384:
 8730 01b0 8D45C8   		leal	-56(%ebp), %eax
 8731 01b3 890424   		movl	%eax, (%esp)
 8732 01b6 E8000000 		call	__Unwind_SjLj_Unregister
 8732      00
 8733 01bb 83C45C   		addl	$92, %esp
 8734 01be 5B       		popl	%ebx
 8735 01bf 5E       		popl	%esi
 8736 01c0 5F       		popl	%edi
 8737 01c1 5D       		popl	%ebp
 8738 01c2 C3       		ret
 8739              	LBE105:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 158


 8740              		.section	.gcc_except_table,""
 8741              	LLSDA2397:
 8742 0062 FF       		.byte	0xff
 8743 0063 FF       		.byte	0xff
 8744 0064 01       		.byte	0x1
 8745 0065 02       		.uleb128 LLSDACSE2397-LLSDACSB2397
 8746              	LLSDACSB2397:
 8747 0066 00       		.uleb128 0x0
 8748 0067 00       		.uleb128 0x0
 8749              	LLSDACSE2397:
 8750              		.section	.text$_ZN16ProcessImageDataC1ERKS_,"x"
 8751              		.linkonce discard
 8752              	Lscope83:
 8754 01c3 90       		.section	.text$_ZN13LogBinaryDataC1ERKS_,"x"
 8755              		.linkonce discard
 8756              		.align 2
 8760              	.globl __ZN13LogBinaryDataC1ERKS_
 8762              	__ZN13LogBinaryDataC1ERKS_:
 8764              	Ltext38:
 8766              	LM457:
 8767 0000 55       		pushl	%ebp
 8768 0001 89E5     		movl	%esp, %ebp
 8769 0003 83EC08   		subl	$8, %esp
 8771              	LM458:
 8772              	LBB106:
 8773 0006 8B5508   		movl	8(%ebp), %edx
 8774 0009 8B450C   		movl	12(%ebp), %eax
 8775 000c 0FB700   		movzwl	(%eax), %eax
 8776 000f 668902   		movw	%ax, (%edx)
 8777 0012 8B450C   		movl	12(%ebp), %eax
 8778 0015 83C004   		addl	$4, %eax
 8779 0018 89442404 		movl	%eax, 4(%esp)
 8780 001c 8B4508   		movl	8(%ebp), %eax
 8781 001f 83C004   		addl	$4, %eax
 8782 0022 890424   		movl	%eax, (%esp)
 8783 0025 E8000000 		call	__ZNSsC1ERKSs
 8783      00
 8784 002a 8B5508   		movl	8(%ebp), %edx
 8785 002d 8B450C   		movl	12(%ebp), %eax
 8786 0030 8B4008   		movl	8(%eax), %eax
 8787 0033 894208   		movl	%eax, 8(%edx)
 8788 0036 C9       		leave
 8789 0037 C3       		ret
 8790              	L400:
 8791              	L399:
 8792              	LBE106:
 8793              	Lscope84:
 8795              		.section	.text$_ZSt8_DestroyI13LogBinaryDataEvPT_,"x"
 8796              		.linkonce discard
 8797              		.align 2
 8800              	.globl __ZSt8_DestroyI13LogBinaryDataEvPT_
 8802              	__ZSt8_DestroyI13LogBinaryDataEvPT_:
 8804              	LM459:
 8805 0000 55       		pushl	%ebp
 8806 0001 89E5     		movl	%esp, %ebp
 8807 0003 83EC08   		subl	$8, %esp
 8809              	LM460:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 159


 8810              	LBB107:
 8811 0006 8B4508   		movl	8(%ebp), %eax
 8812 0009 890424   		movl	%eax, (%esp)
 8813 000c E8000000 		call	__ZN13LogBinaryDataD1Ev
 8813      00
 8814 0011 C9       		leave
 8815 0012 C3       		ret
 8816              	LBE107:
 8817              	Lscope85:
 8819              	.globl __ZTIN10ThreadPool10IRunObjectE
 8820 0013 90       		.section	.rdata$_ZTIN10ThreadPool10IRunObjectE,""
 8821              		.linkonce same_size
 8822              		.align 4
 8823              	__ZTIN10ThreadPool10IRunObjectE:
 8824 0000 08000000 		.long	__ZTVN10__cxxabiv117__class_type_infoE+8
 8825 0004 00000000 		.long	__ZTSN10ThreadPool10IRunObjectE
 8826              	.globl __ZTSN10ThreadPool10IRunObjectE
 8827              		.section	.rdata$_ZTSN10ThreadPool10IRunObjectE,""
 8828              		.linkonce same_size
 8829              	__ZTSN10ThreadPool10IRunObjectE:
 8830 0000 4E313054 		.ascii "N10ThreadPool10IRunObjectE\0"
 8830      68726561 
 8830      64506F6F 
 8830      6C313049 
 8830      52756E4F 
 8831 001b 00       		.text
 8832              		.align 2
 8835              	__GLOBAL__I_initImageProcessData:
 8837              	Ltext39:
 8839              	LM461:
 8840 24a8 55       		pushl	%ebp
 8841 24a9 89E5     		movl	%esp, %ebp
 8842 24ab 83EC08   		subl	$8, %esp
 8844              	LM462:
 8845 24ae C7442404 		movl	$65535, 4(%esp)
 8845      FFFF0000 
 8846 24b6 C7042401 		movl	$1, (%esp)
 8846      000000
 8847 24bd E818FDFF 		call	__Z41__static_initialization_and_destruction_0ii
 8847      FF
 8848 24c2 C9       		leave
 8849 24c3 C3       		ret
 8850              	Lscope86:
 8852              		.section	.ctors,"w"
 8853              		.align 4
 8854 0000 A8240000 		.long	__GLOBAL__I_initImageProcessData
 8855              		.text
 8856              		.align 2
 8859              	__GLOBAL__D_initImageProcessData:
 8861              	LM463:
 8862 24c4 55       		pushl	%ebp
 8863 24c5 89E5     		movl	%esp, %ebp
 8864 24c7 83EC08   		subl	$8, %esp
 8866              	LM464:
 8867 24ca C7442404 		movl	$65535, 4(%esp)
 8867      FFFF0000 
 8868 24d2 C7042400 		movl	$0, (%esp)
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 160


 8868      000000
 8869 24d9 E8FCFCFF 		call	__Z41__static_initialization_and_destruction_0ii
 8869      FF
 8870 24de C9       		leave
 8871 24df C3       		ret
 8872              	Lscope87:
 8874              		.section	.dtors,"w"
 8875              		.align 4
 8876 0000 C4240000 		.long	__GLOBAL__D_initImageProcessData
 8886              		.text
 8888              	Letext:
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 161


DEFINED SYMBOLS
                            *ABS*:00000000 WriteProcess.cpp
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:2780   .bss:00000000 __ZSt8__ioinit
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:2841   .text:0000002c _initImageProcessData
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:2928   .text:00000264 _SetNFBImage
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3158   .text:0000054a _SetImage
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3194   .text:0000057c _SetImageWithBufferForceType
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3270   .text:000005ec _SetImageQWithBuffer
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3311   .text:0000062c _SetImageQWithBufferForceType
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3351   .bss:00000010 _g_resgen_png_image_list
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3360   .bss:00000020 _g_log_binary_data_list
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3365   .text:0000066a __Z13stringToUpperSs
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3826   .text:00000b2e __Z28ProcessResgenPngImagesMapIdsR16ProcessImageData
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:4344   .text:00001084 __Z18getMaxThreadNumberv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:4435   .text:000012f2 _ProcessResgenPngImages
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5133   .text:00001b74 _ImageOutStreamInit
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5169   .text:00001ba0 _ImageOutStreamDeinit
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5206   .text:00001bd4 _ImageOutStreamPrintf
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5396   .text:00001d78 _LogSetBinaryWithBuffer
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5511   .text:0000215c __Z17ProcessBinaryDatav
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5791   .text:000021da __Z41__static_initialization_and_destruction_0ii
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7416   .rdata$_ZTV14ConvertRequest:00000000 __ZTV14ConvertRequest
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7316   .text:00002400 _image_resource_info
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7384   .rdata$_ZNSt15basic_streambufIcSt11char_traitsIcEE13_S_pback_sizeE:00000000 __ZNSt15basic_streambufIcSt11char_traitsIcEE13_S_pback_sizeE
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8397   .rdata$_ZTI14ConvertRequest:00000000 __ZTI14ConvertRequest
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8410   .rdata$_ZTVN10ThreadPool10IRunObjectE:00000000 __ZTVN10ThreadPool10IRunObjectE
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8404   .rdata$_ZTS14ConvertRequest:00000000 __ZTS14ConvertRequest
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8823   .rdata$_ZTIN10ThreadPool10IRunObjectE:00000000 __ZTIN10ThreadPool10IRunObjectE
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8829   .rdata$_ZTSN10ThreadPool10IRunObjectE:00000000 __ZTSN10ThreadPool10IRunObjectE
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8835   .text:000024a8 __GLOBAL__I_initImageProcessData
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8859   .text:000024c4 __GLOBAL__D_initImageProcessData
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8532   .text$_ZN10ThreadPool10IRunObjectD0Ev:00000000 __ZN10ThreadPool10IRunObjectD0Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8501   .text$_ZN10ThreadPool10IRunObjectD1Ev:00000000 __ZN10ThreadPool10IRunObjectD1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7621   .text$_ZN14ConvertRequest10AutoDeleteEv:00000000 __ZN14ConvertRequest10AutoDeleteEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7552   .text$_ZN14ConvertRequest3RunEv:00000000 __ZN14ConvertRequest3RunEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7517   .text$_ZN14ConvertRequestD1Ev:00000000 __ZN14ConvertRequestD1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7393   .text$_ZNSt4listI16ProcessImageDataSaIS0_EED1Ev:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EED1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7251   .text$_ZNSt4listI13LogBinaryDataSaIS0_EED1Ev:00000000 __ZNSt4listI13LogBinaryDataSaIS0_EED1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8762   .text$_ZN13LogBinaryDataC1ERKS_:00000000 __ZN13LogBinaryDataC1ERKS_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8448   .text$_ZdlPvS_:00000000 __ZdlPvS_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8564   .text$_ZN16ProcessImageDataC1ERKS_:00000000 __ZN16ProcessImageDataC1ERKS_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8424   .text$_ZnwjPv:00000000 __ZnwjPv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8281   .text$_ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE10deallocateEPS2_j:00000000 __ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE10deallocateEPS2_j
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8802   .text$_ZSt8_DestroyI13LogBinaryDataEvPT_:00000000 __ZSt8_DestroyI13LogBinaryDataEvPT_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8316   .text$_ZNSt10_List_baseI13LogBinaryDataSaIS0_EE7__clearEv:00000000 __ZNSt10_List_baseI13LogBinaryDataSaIS0_EE7__clearEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8253   .text$_ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E:00000000 __ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8155   .text$_ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_:00000000 __ZSt10_ConstructI13LogBinaryDataS0_EvPT_RKT0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8026   .text$_ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_:00000000 __ZNSt4listI13LogBinaryDataSaIS0_EE14_M_create_nodeERKS0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7182   .text$_ZNSt4listI13LogBinaryDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_:00000000 __ZNSt4listI13LogBinaryDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7154   .text$_ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E:00000000 __ZNSt14_List_iteratorI13LogBinaryDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7120   .text$_ZNSt4listI13LogBinaryDataSaIS0_EE3endEv:00000000 __ZNSt4listI13LogBinaryDataSaIS0_EE3endEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7990   .text$_ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0EEE10deallocateEPS2_j:00000000 __ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0EEE10deallocateEPS2_j
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7963   .text$_ZSt8_DestroyI16ProcessImageDataEvPT_:00000000 __ZSt8_DestroyI16ProcessImageDataEvPT_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7038   .text$_ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv:00000000 __ZNSt10_List_baseI16ProcessImageDataSaIS0_EE7__clearEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7936   .text$_ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E:00000000 __ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_put_nodeEPSt10_List_nodeIS0_E
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7838   .text$_ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_:00000000 __ZSt10_ConstructI16ProcessImageDataS0_EvPT_RKT0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7711   .text$_ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EE14_M_create_nodeERKS0_
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 162


f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6969   .text$_ZNSt4listI16ProcessImageDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EE6insertESt14_List_iteratorIS0_RS0_PS0_ERKS0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5961   .text$_ZNSt19_List_iterator_base7_M_incrEv:00000000 __ZNSt19_List_iterator_base7_M_incrEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7433   .text$_ZNSt19_List_iterator_baseC2EPSt15_List_node_base:00000000 __ZNSt19_List_iterator_baseC2EPSt15_List_node_base
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6939   .text$_ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E:00000000 __ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EC1EPSt10_List_nodeIS0_E
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7678   .text$_ZNSt10_List_baseI13LogBinaryDataSaIS0_EED2Ev:00000000 __ZNSt10_List_baseI13LogBinaryDataSaIS0_EED2Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6893   .text$_ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE8allocateEj:00000000 __ZNSt14__simple_allocISt10_List_nodeI13LogBinaryDataESt24__default_alloc_templateILb1ELi0EEE8allocateEj
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6870   .text$_ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv:00000000 __ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EE11_M_get_nodeEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6852   .text$_ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EEC2ERKS1_:00000000 __ZNSt16_List_alloc_baseI13LogBinaryDataSaIS0_ELb1EEC2ERKS1_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6800   .text$_ZNSt10_List_baseI13LogBinaryDataSaIS0_EEC2ERKS1_:00000000 __ZNSt10_List_baseI13LogBinaryDataSaIS0_EEC2ERKS1_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7644   .text$_ZNSt10_List_baseI16ProcessImageDataSaIS0_EED2Ev:00000000 __ZNSt10_List_baseI16ProcessImageDataSaIS0_EED2Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6753   .text$_ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0EEE8allocateEj:00000000 __ZNSt14__simple_allocISt10_List_nodeI16ProcessImageDataESt24__default_alloc_templateILb1ELi0EEE8allocateEj
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6730   .text$_ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv:00000000 __ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EE11_M_get_nodeEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6712   .text$_ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EEC2ERKS1_:00000000 __ZNSt16_List_alloc_baseI16ProcessImageDataSaIS0_ELb1EEC2ERKS1_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6660   .text$_ZNSt10_List_baseI16ProcessImageDataSaIS0_EEC2ERKS1_:00000000 __ZNSt10_List_baseI16ProcessImageDataSaIS0_EEC2ERKS1_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5752   .text$_ZNSt4listI13LogBinaryDataSaIS0_EE9push_backERKS0_:00000000 __ZNSt4listI13LogBinaryDataSaIS0_EE9push_backERKS0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6417   .text$_ZN13LogBinaryDataD1Ev:00000000 __ZN13LogBinaryDataD1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6449   .text$_ZN13LogBinaryDataC1EtPci:00000000 __ZN13LogBinaryDataC1EtPci
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5260   .text:00001c34 _ImageOutStreamAppend
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5726   .text$_ZNSt4listI16ProcessImageDataSaIS0_EE5clearEv:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EE5clearEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6017   .text$_ZN10ThreadPool3RunEPNS_10IRunObjectENS_14ThreadPriorityE:00000000 __ZN10ThreadPool3RunEPNS_10IRunObjectENS_14ThreadPriorityE
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6624   .text$_ZN14ConvertRequestC1ER16ProcessImageData:00000000 __ZN14ConvertRequestC1ER16ProcessImageData
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7482   .text$_ZN14ConvertRequestD0Ev:00000000 __ZN14ConvertRequestD0Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:8468   .text$_ZN10ThreadPool10IRunObjectD2Ev:00000000 __ZN10ThreadPool10IRunObjectD2Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:7456   .text$_ZN10ThreadPool10IRunObjectC2Ev:00000000 __ZN10ThreadPool10IRunObjectC2Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5686   .text$_ZNSt4listI16ProcessImageDataSaIS0_EE9push_backERKS0_:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EE9push_backERKS0_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5662   .text$_ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv:00000000 __ZNKSt14_List_iteratorI16ProcessImageDataRS0_PS0_EdeEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5635   .text$_ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv:00000000 __ZNSt14_List_iteratorI16ProcessImageDataRS0_PS0_EppEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5989   .text$_ZNKSt19_List_iterator_baseneERKS_:00000000 __ZNKSt19_List_iterator_baseneERKS_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5604   .text$_ZNSt4listI16ProcessImageDataSaIS0_EE3endEv:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EE3endEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5570   .text$_ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EE5beginEv
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6104   .text$_ZN16ProcessImageDataD1Ev:00000000 __ZN16ProcessImageDataD1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6147   .text$_ZN16ProcessImageDataC1EtPcS0_iii:00000000 __ZN16ProcessImageDataC1EtPcS0_iii
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6593   .text$_ZNSt4listI13LogBinaryDataSaIS0_EEC1ERKS1_:00000000 __ZNSt4listI13LogBinaryDataSaIS0_EEC1ERKS1_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6572   .text$_ZNSaI13LogBinaryDataED1Ev:00000000 __ZNSaI13LogBinaryDataED1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6550   .text$_ZNSaI13LogBinaryDataEC1Ev:00000000 __ZNSaI13LogBinaryDataEC1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6387   .text$_ZNSt4listI16ProcessImageDataSaIS0_EEC1ERKS1_:00000000 __ZNSt4listI16ProcessImageDataSaIS0_EEC1ERKS1_
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6366   .text$_ZNSaI16ProcessImageDataED1Ev:00000000 __ZNSaI16ProcessImageDataED1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6344   .text$_ZNSaI16ProcessImageDataEC1Ev:00000000 __ZNSaI16ProcessImageDataEC1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3494   .text:0000074c __Z21SetImageQWithBufferExtPcS_iii
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3446   .text:000006e8 __Z20SetImageWithBufferExtPcS_ii
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:3232   .text:000005b4 _SetImageWithBuffer
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:5331   .text:00001cf6 _ImageOutStreamOutputFile
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6077   .text$_ZN21_ResgenImageOutStreamD1Ev:00000000 __ZN21_ResgenImageOutStreamD1Ev
f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s:6049   .text$_ZN21_ResgenImageOutStreamC1Ev:00000000 __ZN21_ResgenImageOutStreamC1Ev

UNDEFINED SYMBOLS
__ZN13ImageResParam14QUALITY_MEDIUME
__Unwind_SjLj_Resume
___gxx_personality_sj0
__Unwind_SjLj_Register
__Unwind_SjLj_Unregister
__imp___iob
_Sleep@4
_ImageIdMapEXT
_ImageNameListEXT
_CurrMaxImageNumEXT
_ImageIdMap
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 163


_ImageNameList
_CurrMaxImageNum
_image_idx
_OutputImgIDFile
_RepeatIDListFile
_CurrMaxImageIdEXT
_CurrMaxImageId
_g_resimg_count
_g_resimg_table
_fpImageResourceUsage
_g_mmi_resource_base_table
_fpImageResourceUsageExt
_GetSystemInfo@4
__ZTVN10__cxxabiv120__si_class_type_infoE
__ZTVN10__cxxabiv117__class_type_infoE
___cxa_pure_virtual
__ZNSt8ios_base4InitD1Ev
__ZNSt24__default_alloc_templateILb1ELi0EE10deallocateEPvj
___cxa_rethrow
__ZNSt24__default_alloc_templateILb1ELi0EE8allocateEj
_reslog_adaptor_fatal_error_pending_log
_execute_ext_command
_fwrite
_memcpy
_realloc
_vsprintf
__ZN28ImageGroupContentMetaCreatorD1Ev
__ZN28ImageGroupContentMetaCreator16generateMetaFileEPKc
__ZN28ImageGroupContentMetaCreator8addImageEPKcPcii
__ZNKSs5emptyEv
_exit
__ZN10ThreadPool21GetWorkingThreadCountEv
__ZN10ThreadPoolC1Eii
__ZN28ImageGroupContentMetaCreatorC1Ev
_resconfig_adaptor_get_max_thread_numebr
_SetImageWithBufferExImp
_GetOffsetFromResourceBase
_ExtractExtension
_strcmp
__ZNKSs5c_strEv
_strlen
_fprintf
__ZNSsC1ERKSs
_toupper
__ZNSsixEj
__ZNKSs6lengthEv
__ZNSsaSERKSs
__ZNSsC1Ev
__ZNSsD1Ev
__ZNSsC1EPKcRKSaIcE
__ZNSaIcED1Ev
__ZNSaIcEC1Ev
_fclose
_fopen
_SetNFBImageImp
_fflush
_reslog_adaptor_log
GAS LISTING f:/K7_TOUR/CODE/plutommi/Customer/ResGenerator/gcctmp/ccOEbaaa.s 			page 164


_strcpy
__assert
__ZNSt8ios_base4InitC1Ev
___cxa_end_catch
___cxa_begin_catch
__ZN10ThreadPool13AddJobToQueueEPFmPvES0_PNS_10IRunObjectENS_14ThreadPriorityE
__ZdlPv
__Znwj
