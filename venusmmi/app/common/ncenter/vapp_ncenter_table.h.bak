/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2008
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES. ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *  vapp_ncenter_table.h
 *
 * Project:
 * --------
 *  COSMOS Notification Center
 *
 * Description:
 * ------------
 * 
 *
 * Author:
 * -------
 *  Facer Pei (mtk01920)
 *
 *============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * $Log$
 *
 * 11 28 2010 facer.pei
 * [MAUI_02605445] FTO check in
 * NCenter Check in.
 *
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *============================================================================
 ****************************************************************************/
#ifndef __VAPP_NCENTER_TABLE_H__
#define __VAPP_NCENTER_TABLE_H__

/***************************************************************************** 
 * Include
 *****************************************************************************/

#if defined(NCENTER_TABLE_DEFINED)

// please add your head here
#include "vapp_ncenter_test_cell.h"

#define VAPP_NCENTER_EVENT_CELL_TABLE    static const vapp_ncenter_cell_cfg_struct g_vapp_ncenter_event_cell_create_tbl[] =
#define VAPP_NCENTER_ONGOING_CELL_TABLE    static const vapp_ncenter_cell_cfg_struct g_vapp_ncenter_ongoing_cell_create_tbl[] =

#define VAPP_NCENTER_DECLARE_CELL(_class)     \
    {                                     \
        _class##::createCell              \
    }

#define VAPP_NCENTER_EVENT_LAST_ITEM
#define VAPP_NCENTER_ONGOING_LAST_ITEM

#define VAPP_NCENTER_EVENT_CELL_TOTAL        (sizeof(g_vapp_ncenter_event_cell_create_tbl) / sizeof(vapp_ncenter_cell_cfg_struct))
#define VAPP_NCENTER_ONGOING_CELL_TOTAL        (sizeof(g_vapp_ncenter_ongoing_cell_create_tbl) / sizeof(vapp_ncenter_cell_cfg_struct))

#else /* defined(NCENTER_TABLE_DEFINED) */

typedef void *(*vapp_ncenter_cell_create_cb)(void *parentObj);

typedef struct
{
    vapp_ncenter_cell_create_cb        create;
} vapp_ncenter_cell_cfg_struct;

#define VAPP_NCENTER_EVENT_CELL_TABLE        enum
#define VAPP_NCENTER_ONGOING_CELL_TABLE        enum
#define VAPP_NCENTER_DECLARE_CELL(_class)  VAPP_NCENTER_CELL_ENUM_##_class
#define VAPP_NCENTER_EVENT_LAST_ITEM    VAPP_NCENTER_EVENT_CELL_TOTAL     
#define VAPP_NCENTER_ONGOING_LAST_ITEM    VAPP_NCENTER_ONGOING_CELL_TOTAL

#endif /* defined(NCENTER_TABLE_DEFINED) */


/***************************************************************************** 
 * Widget table
 *****************************************************************************/
// notice that if you cannot use one class register two table at the same time 

VAPP_NCENTER_EVENT_CELL_TABLE
{
    // register cell here
    VAPP_NCENTER_DECLARE_CELL(VappFirstCell),
    VAPP_NCENTER_DECLARE_CELL(VappSecondCell),
    VAPP_NCENTER_EVENT_LAST_ITEM
};


VAPP_NCENTER_ONGOING_CELL_TABLE
{
    // register cell here
    VAPP_NCENTER_DECLARE_CELL(VappThirdCell),
    VAPP_NCENTER_DECLARE_CELL(VappFourthCell),
    VAPP_NCENTER_ONGOING_LAST_ITEM
};

/***************************************************************************** 
 * External interface
 *****************************************************************************/

extern const vapp_ncenter_cell_cfg_struct *vapp_ncenter_get_event_cell_table(void);

extern const vapp_ncenter_cell_cfg_struct *vapp_ncenter_get_ongoing_cell_table(void);



#endif /* __VAPP_NCENTER_TABLE_H__ */

