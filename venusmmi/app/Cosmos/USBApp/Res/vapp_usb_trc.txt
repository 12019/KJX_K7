[APP NAME] = VAPP_USBMMI
[SCOPE] = COSMOS
[MODULE] = MOD_MMI_COMMON_APP

#start trace
TRC_MSG(TRC_MMI_VAPP_USB_LAUNCH, "[VUSB] [VUSB] vapp_usb_launch(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_LAUNCH_USBMODE, "[VUSB] vapp_usb_launch_usbmode")
TRC_MSG(TRC_MMI_VAPP_USB_LAUNCH_CHARGER, "[VUSB] vapp_usb_launch_charger")
TRC_MSG(TRC_MMI_VAPP_USB_LAUNCH_NORMALMODE, "[VUSB] vapp_usb_launch_normalmode")
TRC_MSG(TRC_MMI_VAPP_USB_INIT_NORMALMODE, "[VUSB] vapp_usb_init_normalmode")
TRC_MSG(TRC_MMI_VAPP_USB_MMI_NOTIFY_CALLBACK, "[VUSB] vapp_usb_mmi_notify_callback")
TRC_MSG(TRC_MMI_VAPP_USB_CFG_RSP_CALLBACK, "[VUSB] vapp_usb_cfg_rsp_callback")
TRC_MSG(TRC_MMI_VAPP_USB_HANDLE_PLUG_IN, "[VUSB] vapp_usb_handle_plug_in")
TRC_MSG(TRC_MMI_VAPP_USB_UNBLOCK_SCREEN, "[VUSB] vapp_usb_unblock_screen")
TRC_MSG(TRC_MMI_VAPP_USB_MMIPERMITCHECK, "[VUSB] mmiPermitCheck")
TRC_MSG(TRC_MMI_VAPP_USB_HANDLE_QUERY_PERMIT_PRE_CHECK, "[VUSB] vapp_usb_handle_query_permit_pre_check")
TRC_MSG(TRC_MMI_VAPP_USB_PRESHOWCFGLISTNOTIFY, "[VUSB] preShowCfgListNotify")
TRC_MSG(TRC_MMI_VAPP_USB_NOT_CONTINUE_SHOW_USB_CFG, "[VUSB] Not continue show USB cfg screen")
TRC_MSG(TRC_MMI_VAPP_USB_USBNMGRNOTIFYCALLBACK, "[VUSB] usbNmgrNotifyCallback")
TRC_MSG(TRC_MMI_VAPP_USB_HANDLE_QUERY_PERMIT_SHOW, "[VUSB] vapp_usb_handle_query_permit_show")
TRC_MSG(TRC_MMI_VAPP_USB_CHARGERNOTIFYHDLR, "[VUSB] chargerNotifyHdlr, mode=%d")
TRC_MSG(TRC_MMI_VAPP_USB_UPDATECHARGINGSTATE, "[VUSB] updateChargingState(%d,%d)")
TRC_MSG(TRC_MMI_VAPP_USB_NO_INST, "[VUSB] !m_inst")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_INITAPP, "[VUSB] VappUSBApp::initApp(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_INITUSBMODE, "[VUSB] [VUSB] VappUSBApp::initUSBMode")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_INITNORMALMODE, "[VUSB] VappUSBApp::initNormalMode")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_ONRUN, "[VUSB] VappUSBApp::onRun")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_CHARGERNOTIFYHDLR, "[VUSB] VappUSBApp::chargerNotifyHdlr(%d,%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_USBSRVNOTIFYHDLR, "[VUSB] VappUSBApp::usbSrvNotifyHdlr(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_USBCFGRSPHDLR, "[VUSB] VappUSBApp::usbCfgRspHdlr(%d,%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_USBPLUGINHDLR, "[VUSB] VappUSBApp::usbPlugInHdlr")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_USBPERMITPRECHECKHDLR, "[VUSB] VappUSBApp::usbPermitPreCheckHdlr")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_USBPERMITCHECKHDLR, "[VUSB] VappUSBApp::usbPermitCheckHdlr")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_ONPOWEROFFREMOVED, "[VUSB] VappUSBApp::onPowerOffRemoved")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_ONNORMALMODESRVNOTIFY, "[VUSB] VappUSBApp::onNormalModeSrvNotify(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_ONCONTEXTSCREENCLOSED, "[VUSB] VappUSBApp::onContextScreenClosed")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_TERMINATE, "[VUSB] VappUSBApp::terminate")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBAPP_SHOWCFGLIST, "[VUSB] VappUSBApp::showCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_ONINIT, "[VUSB] VappUSBBatIcon::onInit")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_ONDEINIT, "[VUSB] VappUSBBatIcon::onDeinit")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_UPDATE, "[VUSB] VappUSBBatIcon::update(%d, %d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_UPDATELEVEL, "[VUSB] VappUSBBatIcon::updateLevel(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_CREATETIMER, "[VUSB] VappUSBBatIcon::createTimer")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_CLOSETIMER, "[VUSB] VappUSBBatIcon::closeTimer")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_STARTTIMER, "[VUSB] VappUSBBatIcon::startTimer")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_STOPTIMER, "[VUSB] VappUSBBatIcon::stopTimer")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_STOPBLINK, "[VUSB] VappUSBBatIcon::stopBlink")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_STARTBLINK, "[VUSB] VappUSBBatIcon::startBlink")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_CREATEBLOCK, "[VUSB] VappUSBBatIcon::createBlock(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_DELETEBLOCK, "[VUSB] VappUSBBatIcon::deleteBlock(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_CREATEBORDER, "[VUSB] VappUSBBatIcon::createBorder")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBBATICON_ONTIMER, "[VUSB] VappUSBBatIcon::onTimer")
TRC_MSG(TRC_MMI_VAPP_USB_NMGRNOTIFYCALLBACK, "[VUSB] nmgrNotifyCallback")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_PRESHOWCFGLIST, "[VUSB] VappUSBNormalModeContext::preShowCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_PRESHOWCFGLISTNOTIFY, "[VUSB] VappUSBNormalModeContext::preShowCfgListNotify")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CREATESCREEN, "[VUSB] VappUSBNormalModeContext::createScreen")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CLOSESCREEN, "[VUSB] VappUSBNormalModeContext::closeScreen")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_PRESHOWCFGLISTCHECK, "[VUSB] VappUSBNormalModeContext::preShowCfgListCheck")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_MMIPERMITCHECK, "[VUSB] VappUSBNormalModeContext::mmiPermitCheck")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_SHOWCFGLIST, "[VUSB] VappUSBNormalModeContext::showCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CLOSECFGLIST, "[VUSB] VappUSBNormalModeContext::closeCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_ONCOMMANDPOPUPCLICK, "[VUSB] VappUSBNormalModeContext::onCommandPopupClick(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CONFIGMSMTP, "[VUSB] VappUSBNormalModeContext::configMSMTP")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_NEEDREBOOT, "[VUSB] VappUSBNormalModeContext::needReboot")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_WAPSYSREAD, "[VUSB] VappUSBNormalModeContext::wapSysRead")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_SHOWPROGRESS, "[VUSB] VappUSBNormalModeContext::showProgress")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CLOSEPROGRESS, "[VUSB] VappUSBNormalModeContext::closeProgress")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_SHOWPOPUP, "[VUSB] VappUSBNormalModeContext::showPopup")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_SHOWINFOBOLLON, "[VUSB] VappUSBNormalModeScrn::showInfoBollon")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CONFIGCOM, "[VUSB] VappUSBNormalModeContext::configCOM")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CONFIGWEBCAM, "[VUSB] VappUSBNormalModeContext::configWebcam")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_USBCFGRSPHDLR, "[VUSB] VappUSBNormalModeContext::usbCfgRspHdlr")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_CONFIRMCLOSEHDLR, "[VUSB] VappUSBNormalModeContext::confirmCloseHdlr")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_ONSCREENCLOSED, "[VUSB] VappUSBNormalModeContext::onScreenClosed")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODECONTEXT_EXITWEBCAM, "[VUSB] VappUSBNormalModeContext::exitWebCam")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_ONBEFOREDEINIT, "[VUSB] VappUSBNormalModeScrn::onBeforeDeinit")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_ONENTER, "[VUSB] VappUSBNormalModeScrn::onEnter(%d), m_bShowCfgList=%d")
TRC_MSG(TRC_MMI_VAPP_USB_SHOW_CFG_AGAIN, "[VUSB] show cfg list again")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_SHOWCFGLIST, "[VUSB] VappUSBNormalModeScrn::showCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_CLOSECFGLIST, "[VUSB] VappUSBNormalModeScrn::closeCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_RESETCFGLIST, "[VUSB] VappUSBNormalModeScrn::resetCfgList")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_SHOWPROGRESS, "[VUSB] VappUSBNormalModeScrn::showProgress")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_CLOSEPROGRESS, "[VUSB] VappUSBNormalModeScrn::closeProgress")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_SHOWPOPUP, "[VUSB] VappUSBNormalModeScrn::showPopup(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_SHOWCONFIRMPOPUP, "[VUSB] VappUSBNormalModeScrn::showConfirmPopup")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_ONFAILCONFIRMCLOSE, "[VUSB] VappUSBNormalModeScrn::onFailConfirmClose")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_ONMSCONFIRMCLICK, "[VUSB] VappUSBNormalModeScrn::onMSConfirmClick, id=%d")
TRC_MSG(TRC_MMI_VAPP_USB_VCP_CONFIRM_POPUP_BUTTON_USER_1, "[VUSB] VCP_CONFIRM_POPUP_BUTTON_USER_1")
TRC_MSG(TRC_MMI_VAPP_USB_ITEM_ID_MAX_CANCEL, "[VUSB] ITEM_ID_MAX_CANCEL")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_ONCOMMANDPOPUPCLICK, "[VUSB] VappUSBNormalModeScrn::onCommandPopupClick(id)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_INITCONTEXT, "[VUSB] VappUSBModeContext::initContext")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_CLOCKTIMEHDLR, "[VUSB] VappUSBModeContext::clockTimeHdlr")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_SHOWMSMODE, "[VUSB] VappUSBModeContext::ShowMSMode")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_GETCHARGINGLEVEL, "[VUSB] VappUSBModeContext::getChargingLevel, ret %d")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_SHOWSCREEN, "[VUSB] VappUSBModeContext::showScreen")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_CLOSESCREEN, "[VUSB] VappUSBModeContext::closeScreen")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_UPDATECHARGINGSTATE, "[VUSB] VappUSBModeContext::updateChargingState(%d,%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_UPDATECHARGINGSTATE_NO_PARAM, "[VUSB] VappUSBModeContext::updateChargingState")
TRC_MSG(TRC_MMI_VAPP_USB_CHARGING, "[VUSB] Charging")
TRC_MSG(TRC_MMI_VAPP_USB_NOT_CHARGING, "[VUSB] Not charging")
TRC_MSG(TRC_MMI_VAPP_USB_SCRN_EXISTS, "[VUSB] scrn exists, %d")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_ON1STREADY, "[VUSB] VappUSBModeScrn::on1stReady")
#ifndef __MMI_USB_SLIM__
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_UPDATETIME, "[VUSB] VappUSBModeScrn::updateTime(%d, %d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_UPDATETIME_NO_PARAM, "[VUSB] VappUSBModeScrn::updateTime")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_UPDATECLOCK, "[VUSB] VappUSBModeContext::updateClock(%d,%d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODECONTEXT_TURNONBACKLIGHT, "[VUSB] VappUSBModeContext::turnOnBacklight")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_UPDATETIME, "[VUSB] VappUSBModePage::updateTime")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_SETTEXTS, "[VUSB] VappUSBModePage::setTexts")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_SETCHARGINGTEXT, "[VUSB] VappUSBModePage::setChargingText")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_TURNONBACKLIGHT, "[VUSB] VappUSBModePage::turnOnBacklight")
#endif
TRC_MSG(TRC_MMI_VAPP_USB_SHOW_TIME, "[VUSB] time=%d:%d:%d")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_UPDATECHARGINGSTATE, "[VUSB] VappUSBModeScrn::updateChargingState(%d, %d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_SETCHARGING, "[VUSB] VappUSBModeScrn::setCharging")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_SETTIME, "[VUSB] VappUSBModeScrn::setTime")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODESCRN_ONTIMECHANGED, "[VUSB] VappUSBModeScrn::onTimeChanged(%d)")
TRC_MSG(TRC_MMI_VAPP_USB_HOUR_MIN, "[VUSB] h=%d, m=%d")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_ONINIT, "[VUSB] VappUSBModePage::onInit")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_UPDATECHARGING, "[VUSB] VappUSBModePage::updateCharging(%d, %d)")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_SETIMAGE, "[VUSB] VappUSBModePage::setImage")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_SETTIME, "[VUSB] VappUSBModePage::setTime")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_SETTIMETYPE, "[VUSB] VappUSBModePage::setTimeType")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_SETCHARGINGICON, "[VUSB] VappUSBModePage::setChargingIcon")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBMODEPAGE_ONKEYINPUT, "[VUSB] VappUSBModePage::onKeyInput")
TRC_MSG(TRC_MMI_USB_CONF_SCR_NOT_ALLOW_FALSE, "[VUSB]VappUSBNormalModeContext::mmiPermitCheck(): FALSE")
TRC_MSG(TRC_MMI_USB_CONF_SCR_NOT_ALLOW_TURE, "[VUSB]VappUSBNormalModeContext::mmiPermitCheck(): TRUE")TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRC_CANCLECLICK, "[VUSB]onCancelClick():waiting popup")
TRC_MSG(TRC_MMI_VAPP_USB_IS_MS_EXIT_JUGE, "[VUSB] srv_usb_is_ms_exit_done() == %d")
TRC_MSG(TRC_MMI_VAPP_USB_VAPPUSBNORMALMODESCRN_SHOWMSCONFIRM, "[VUSB] showMSConfirm(%d)")
