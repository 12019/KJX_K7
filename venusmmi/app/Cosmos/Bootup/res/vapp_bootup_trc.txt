[APP NAME] = Bootup
[SCOPE] = COSMOS
[MODULE] = MOD_MMI_COMMON_APP

#start trace
TRC_MSG(TRC_VAPP_BOOTUP_FLOW_START, "[Bootup] vapp_bootup_flow_start()")
TRC_MSG(TRC_VAPP_BOOTUP_FLOW_EARLY_INIT, "[Bootup] vapp_bootup_flow_early_init()")
TRC_MSG(TRC_VAPP_BOOTUP_START_EVENTS_TIMER, "[Bootup] vapp_bootup_start_events_timer(): %d msec")
TRC_MSG(TRC_VAPP_BOOTUP_EVENTS_TIMER_TIMEOUT, "[Bootup] vapp_bootup_events_timer_timeout()")
TRC_MSG(TRC_VAPP_BOOTUP_WAIT_FOR_GPIO, "[Bootup] vapp_bootup_wait_for_gpio(): isArrived = %d")
TRC_MSG(TRC_VAPP_BOOTUP_GPIO_ARRIVED, "[Bootup] vapp_bootup_notify_gpio_arrived(): waiting = %d")
TRC_MSG(TRC_VAPP_BOOTUP_APP_LAUNCHED, "[Bootup] vapp_bootup_flow_early_init(): App ID = %d")
TRC_MSG(TRC_VAPP_BOOTUP_DISALBE_INTERRUPT, "[Bootup] vapp_bootup_flow_disable_interrupt()")
TRC_MSG(TRC_VAPP_BOOTUP_ENABLE_INTERRUPT, "[Bootup] vapp_bootup_flow_enable_interrupt()")
TRC_MSG(TRC_VAPP_BOOTUP_LAUNCH_HOME_SCREEN, "[Bootup] Launch home screen")
TRC_MSG(TRC_VAPP_BOOTUP_CHECK_DISK, "[Bootup] VappBootupApp::checkDisk(): error_code = %d")
TRC_MSG(TRC_VAPP_BOOTUP_FLOW_DISK_CHECK, "[Bootup] vapp_bootup_flow_disk_check()")
TRC_MSG(TRC_VAPP_BOOTUP_PEN_CALIBRATION_DONE, "[Bootup] Pen calibration done")
TRC_MSG(TRC_VAPP_BOOTUP_INIT_TIME, "[Bootup][Time] table[%d], Entry=0x%x , Func 0x%x : %d ticks")
TRC_MSG(TRC_VAPP_BOOTUP_INIT_ENTRY, "[Bootup][entry] table[%d], Entry=0x%x")
TRC_MSG(TRC_VAPP_BOOTUP_EARLY_INIT, "[Bootup] vapp_bootup_early_init() %c")
TRC_MSG(TRC_VAPP_BOOTUP_NORMAL_INIT, "[Bootup] vapp_bootup_normal_init() %c")
TRC_MSG(TRC_VAPP_BOOTUP_BEFORE_IDLE, "[Bootup] vapp_bootup_before_idle() %c")
TRC_MSG(TRC_VAPP_BOOTUP_COMPLETED, "[Bootup] vapp_bootup_notify_completed() %c")
TRC_MSG(TRC_VAPP_BOOTUP_ON_USER_DECIDED_MODE, "[Bootup] VappBootupApp::onUserDecidedMode(enabledSims = 0x%x, primarySim = %Mmmi_sim_enum)")
TRC_MSG(TRC_VAPP_BOOTUP_ON_SIM_MODULE_READY, "[Bootup] vapp_bootup_on_sim_module_ready()")
TRC_MSG(TRC_VAPP_BOOTUP_INIT_SIM_MODULE, "[Bootup] vapp_bootup_init_sim_module()")
TRC_MSG(TRC_VAPP_BOOTUP_DECIDE_MODE, "[Bootup] vapp_bootup_decide_mode()")
TRC_MSG(TRC_VAPP_BOOTUP_DECIDE_MODE_FLIGHT_MODE, "[Bootup] vapp_bootup_decide_mode(): Flight mode")
TRC_MSG(TRC_VAPP_BOOTUP_ON_MODE_DECIDED, "[Bootup] vapp_bootup_on_mode_decided(): enabledSims = 0x%x")
TRC_MSG(TRC_VAPP_BOOTUP_BOOT_PROTOCOL, "[Bootup] vapp_bootup_boot_protocol()")
TRC_MSG(TRC_VAPP_BOOTUP_ON_PROTOCOL_READY, "[Bootup] vapp_bootup_on_protocol_ready()")
TRC_MSG(TRC_VAPP_BOOTUP_PLAY_ANIMATION, "[Bootup] vapp_bootup_play_animation()")
TRC_MSG(TRC_VAPP_BOOTUP_ON_ANI_COMPLETED, "[Bootup] vapp_bootup_on_ani_completed()")
TRC_MSG(TRC_VAPP_BOOTUP_PLAY_TONE, "[Bootup] VappBootupApp::playAnimation(): audio_id = %d")
TRC_MSG(TRC_VAPP_BOOTUP_FLOW_SECURITY, "[Bootup] vapp_bootup_flow_security()")
TRC_MSG(TRC_VAPP_BOOTUP_VERIFY_PHONE_LOCK, "[Bootup] VappBootupApp::verifyPhoneLock()")
TRC_MSG(TRC_VAPP_BOOTUP_VERIFY_SIM, "[Bootup] VappBootupApp::verifySim(%Mmmi_sim_enum): type = %d")
TRC_MSG(TRC_VAPP_BOOTUP_ON_SIM_VERIFY_RESULT, "[Bootup] VappBootupApp::onSimVerifyResult(): suc = %d, sim = %Mmmi_sim_enum, fatal = %d, #rem = %d")
TRC_MSG(TRC_VAPP_BOOTUP_ON_SIM_STATUS_CHANGED, "[Bootup] VappBootupApp::onSimStatusChanged(): veri = %Mmmi_sim_enum, evt->sim = %Mmmi_sim_enum, fatal = %d")

