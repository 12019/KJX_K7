[APP NAME] = VAPP_UCM
[SCOPE] = COSMOS
[MODULE] = MOD_MMI_COMMON_APP

#starttrace
#vapp_ucm_app
TRC_MSG(TRC_VAPP_UCM_DISABLE_NCENTER, "[UCM] nCenter setDisableDrag=%d")
TRC_MSG(TRC_VAPP_UCM_TOUCH_FB_STATUS, "[UCM] touch feedback status=%d")
TRC_MSG(TRC_VAPP_UCM_RECORD, "[UCM] Start_record=%d, cause=%d")
TRC_MSG(TRC_VAPP_UCM_SET_PREF_SIM, "[UCM] set preferred sim result=%d, sim=%Mmmi_sim_enum")
TRC_MSG(TRC_VAPP_UCM_APP_STATE, "[UCM] current state=%d")
TRC_MSG(TRC_MMI_UCM_APP_HEADSET_KEY_ANSWER, "[UCM] mmi_ucm_app_headset_key(), Answer Incoming Call")
TRC_MSG(TRC_MMI_UCM_APP_HEADSET_KEY_ABORT_OUTGOING_CALL, "[UCM] mmi_ucm_app_headset_key(), Abort Outgoing Call")
TRC_MSG(TRC_MMI_UCM_APP_HEADSET_KEY_RESET_HIGHLIGHT_CALL, "[UCM] mmi_ucm_app_headset_key(), Release Highlight Tab Call")
TRC_MSG(TRC_MMI_UCM_ACT_NOTIFY_HDLR_RESULT_P1, "[UCM] mmi_ucm_act_notify_hdl(),result=%Msrv_ucm_result_enum")
TRC_MSG(TRC_MMI_UCM_IND_HDLR_P1, "[UCM] mmi_ucm_ind_hdl(),ind_type=%d")

#vapp_ucm_event_hdlr
TRC_MSG(TRC_MMI_UCM_HANDLE_INCOMING_CALL_IND, "[UCM] mmi_ucm_handle_incoming_call_ind()")
TRC_MSG(TRC_MMI_UCM_RELEASE_IND_CALL_INFO_P6, "[UCM] mmi_ucm_release_ind(), Release GroupId: %d, CallId: %d, post_action=%d, is_ip_dial=%d, curr_act=%d [%d]")
TRC_MSG(TRC_MMI_UCM_RELEASE_IND_VOL_CONTROL_STOP, "[UCM] mmi_ucm_release_ind(), mdi_audio_bt_clear_volume_sync_callback")
TRC_MSG(TRC_MMI_UCM_CONF_IND_HDLR_P1, "[UCM] mmi_ucm_conf_ind_hdlr(),op_code=%Msrv_ucm_cnf_ind_opcode_enum")
TRC_MSG(TRC_MMI_UCM_PRE_SPEECH_ON_CB_P1, "[UCM] mmi_ucm_pre_speech_on_callback(), play_tone =%Mmmi_ucm_incoming_tone_enum")
TRC_MSG(TRC_MMI_UCM_POST_SPEECH_ON_CB, "[UCM] mmi_ucm_post_speech_on_callback()")
TRC_MSG(TRC_MMI_UCM_PRE_SPEECH_OFF_CB, "[UCM] mmi_ucm_pre_speech_off_callback()")
TRC_MSG(TRC_MMI_UCM_IND, "[UCM] vapp_ucm_ind_hdlr(),ind_type=%Msrv_ucm_ind_opcode_enum")
TRC_MSG(TRC_MMI_UCM_ACT_NOTIFY, "[UCM] vapp_ucm_act_notify_hdlr(),act_op=srv_ucm_act_opcode_enum, notify_type=%Msrv_ucm_act_notify_type_enum")

#vapp_ucm_ui
TRC_MSG(TRC_MMI_UCM_PLAY_RINGTONE_P2, "[UCM] mmi_ucm_play_ringtone(), is_video_sound=%d, alert_type=%d")
TRC_MSG(TRC_MMI_UCM_STOP_RINGTONE_P2, "[UCM] mmi_ucm_stop_ringtone(), tone_id=%d, alert_type=%d")
TRC_MSG(TRC_MMI_UCM_PLAY_INCOMING_TONE, "[UCM] mmi_ucm_play_incoming_tone(), Play Tone State: %Mmmi_ucm_incoming_tone_enum, Total Group: %d")
TRC_MSG(TRC_MMI_UCM_SET_TONE_FLAG_P2, "[UCM] set call_misc.play_tone to %Mmmi_ucm_incoming_tone_enum at %Mmmi_ucm_incoming_tone_enum")
TRC_MSG(TRC_MMI_UCM_STOP_INCOMING_TONE_P1, "[UCM] mmi_ucm_stop_incoming_tone(), Reset Play Tone State, play_tone=%Mmmi_ucm_incoming_tone_enum")
TRC_MSG(TRC_MMI_UCM_AUTO_ANSWER_ACTION, "[UCM] mmi_ucm_auto_answer_action()")
TRC_MSG(TRC_MMI_UCM_SWAP_ACTION_P2, "[UCM] mmi_ucm_swap_action(), option_check_result:%Msrv_ucm_result_enum, act_is_executed:%d")
TRC_MSG(TRC_MMI_UCM_BT_SET_AUDIO_PATH_TO_AG, "[UCM] mmi_ucm_bt_set_audio_path(), transfer to AG")
TRC_MSG(TRC_MMI_UCM_BT_SET_AUDIO_PATH_TO_BT, "[UCM] mmi_ucm_bt_set_audio_path(), transfer to BT")
TRC_MSG(TRC_MMI_UCM_APP_END_KEY_RELEASE_PROCESSING, "[UCM] mmi_ucm_app_end_key(), Release Processing Call(s)")
TRC_MSG(TRC_MMI_UCM_DTMF_KEY_DOWN, "[UCM] mmi_ucm_dtmf_key_down()")
TRC_MSG(TRC_MMI_UCM_DTMF_KEY_DOWN_SEND_START, "[UCM] mmi_ucm_dtmf_key_down(), Send_Start_DTMF, call_type: %Msrv_ucm_call_type_enum")
TRC_MSG(TRC_MMI_UCM_DTMF_KEY_UP, "[UCM] mmi_ucm_dtmf_key_up()")
TRC_MSG(TRC_MMI_UCM_DTMF_KEY_UP_SEND_STOP, "[UCM] mmi_ucm_dtmf_key_up(), Send_Stop_DTMF, call_type: %Msrv_ucm_call_type_enum")
TRC_MSG(TRC_MMI_UCM_AUTO_REDIAL_ABORT, "[UCM] mmi_ucm_auto_redial_abort()")

#vapp_ucm_interface
TRC_MSG(TRC_MMI_UCM_CALL_LAUNCH_P2, "[UCM] mmi_ucm_call_launch(), dial_type =%Msrv_ucm_call_type_enum, num_len=%d")

#vapp_ucm_kernel
TRC_MSG(TRC_MMI_UCM_EXEC_DIAL_CB_P1, "[UCM] mmi_ucm_exec_dial_cb(), result =%Msrv_ucm_result_enum")
TRC_MSG(TRC_MMI_UCM_EXEC_DIAL_CB_BY_RESULT_P1, "[UCM] mmi_ucm_exec_dial_cb_by_result(), result=%Msrv_ucm_result_enum")
TRC_MSG(TRC_MMI_UCM_SUPPRESS_INCOMING_TONE_P1, "[UCM] mmi_ucm_suppress_incoming_tone(), type=%d")
TRC_MSG(TRC_MMI_UCM_VT_SET_ANSWER_MODE,"[UCM] mmi_ucm_vt_set_answer_mode(), index = %Mmmi_ucm_vt_answer_mode_enum ")
TRC_MSG(TRC_MMI_UCM_VT_SET_DIAL_MODE,"[UCM] mmi_ucm_vt_set_dial_mode(), index = %d ")
TRC_MSG(TRC_MMI_UCM_VT_GET_REMOTE_NUM_URI_ERROR, "[UCM] mmi_ucm_vt_get_remote_num_uri() ERROR")
TRC_MSG(TRC_MMI_UCM_VT_GET_CALL_START_TIME_ERROR, "[UCM] mmi_ucm_vt_get_call_start_time() ERROR")

#vapp_ucm_uha
TRC_MSG(TRC_MMI_UCM_URI_AGENT_RESET_MAKE_CALL_CNTX, "[UCM] mmi_ucm_reset_uriagent_make_call_cntx()")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_MAKE_CALL_CONFIRM_NO_HDLR, "[UCM] mmi_ucm_uha_make_call_confirm_no_hdlr()")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_MAKE_CALL_CONFIRM_YES_HDLR, "[UCM] mmi_ucm_uriagent_make_call_confirm_yes_hdlr()")
TRC_MSG(TRC_MMI_UCM_UHA_AFTER_MAKE_CALL_CB_P1, "[UCM] mmi_ucm_uha_after_make_call_cb(), result:%Msrv_ucm_result_enum")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_SEND_DTMF_CONFIRM_YES_HDLR, "[UCM] mmi_ucm_uriagent_send_dtmf_confirm_yes_hdlr()")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_ACT_CB_P1, "[UCM] mmi_ucm_uha_act_callback(), act_op:%Msrv_ucm_act_opcode_enum")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_WTAI_SEND_DTMF, "[UCM] mmi_ucm_uriagent_wtai_send_dtmf(),  appid: %Msrv_uriagent_appid_enum options:%Msrv_uriagent_options_enum cb:0x%x")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_SEND_DTMF_BUSY, "[UCM] mmi_ucm_uriagent_make_call(),  Busy")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_WTAI_MAKE_CALL, "[UCM] mmi_ucm_uriagent_wtai_make_call(),  appid: %Msrv_uriagent_appid_enum options:%Msrv_uriagent_options_enum cb:0x%x")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_MAKE_CALL, "[UCM] mmi_ucm_uriagent_make_call(),  appid: %Msrv_uriagent_appid_enum options:%Msrv_uriagent_options_enum cb:0x%x")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_MAKE_CALL_BUSY, "[UCM] mmi_ucm_uriagent_make_call(),  Busy")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_MAKE_CALL_PARSE_FAIL, "[UCM] mmi_ucm_uriagent_make_call(),  parse fail:%Msrv_ucm_result_enum")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_RESET_SEND_DTMF_CNTX, "[UCM] mmi_ucm_reset_uriagent_send_dtmf_cntx()")
TRC_MSG(TRC_MMI_UCM_URI_AGENT_EXEC_CALLBACK, "[UCM] mmi_ucm_uriagent_exec_callback(), cb:0x%x ura_id: %Msrv_uriagent_appid_enum uha_id: %Msrv_uriagent_appid_enum res:%d")
TRC_MSG(TRC_MMI_UCM_UHA_DISPLAY_POPUP_P2, "[UCM] mmi_ucm_uha_display_popup(). result=:%Msrv_ucm_result_enum, string_id:%d")

#video frame
TRC_MSG(TRC_VAPP_UCM_VT_ONINIT, "[Video call] onInit()") 
TRC_MSG(TRC_VAPP_UCM_VT_ONDEINIT, "[Video call] onDeinit()")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_APP_ID, "[Video call] setParamAppId() [id = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_SENSOR_ID, "[Video call] setParamSensorId() [id = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_FRAME_RECT, "[Video call] setFrameRect() [type = %d, rect.x = %d, y = %d, w = %d, h = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_MIRROR, "[Video call] setParamMirror() [isMirror = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_HIDE, "[Video call] setParamHide() [type = %d, isHidden = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_LOCAL_QTY, "[Video call] setParamLocalQty() [value = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_PEER_QTY, "[Video call] setParamPeerQty() [value = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_ENC_SIZE, "[Video call] setParamEncSize() [value = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_NIGHT_MODE, "[Video call] setParamNightMode() [isNightMode = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_FRAME_MODE, "[Video call] setParamFrameMode() [type = %d, mode = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_FRAME_FRONT, "[Video call] setParamFrameFront() [type = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_FRAME_BORDER, "[Video call] setParamFrameBorder() [type = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_PARA_FRAME_CONTENT, "[Video call] setParamFrameContent() [type = %d, content = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_VIDEO_FRAME_PREPARE_DONE, "[Video call] videoFramePrepareDone() [m_prepareCount = %d, m_prepareExpectCount = %d, m_prepareMode =%d, m_isMMIOpen = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_START, "[Video call] start() [m_peerFrameType = %d, m_localFrameType = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_RESUME, "[Video call] resume() [m_peerFrameType = %d, m_localFrameType = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_PAUSE, "[Video call] paause() [m_peerFrameType = %d, m_localFrameType = %d, m_prepareCount = %d, m_prepareExpectCount = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_STOP, "[Video call] stop() [m_peerFrameType = %d, m_localFrameType = %d, m_prepareCount = %d, m_prepareExpectCount = %d, m_isMMIOpen =%d]")
TRC_MSG(TRC_VAPP_UCM_VT_BG_PAUSE, "[Video call] backgroundPause() [m_peerFrameType = %d, m_localFrameType = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_BG_RESUME, "[Video call] backgroundResume() [m_peerFrameType = %d, m_localFrameType = %d, m_isMMIOpen = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_CAPTURE, "[Video call] capture() [type = %d, snap_ret = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_ZOOM, "[Video call] setZoomValue() [value = %d, m_isMEDBuilt = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SET_EV, "[Video call] setEVValue() [value = %d, m_isMEDBuilt = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_GET_ZOOM_CAP, "[Video call] getZoomCap()")
TRC_MSG(TRC_VAPP_UCM_VT_GET_EV_CAP, "[Video call] getEVCap()")
TRC_MSG(TRC_VAPP_UCM_VT_GET_FRAME_DATA, "[Video call] getFrameData() [type = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_SHOW_COVER, "[Video call] showCover()")
TRC_MSG(TRC_VAPP_UCM_VT_HIDE_COVER, "[Video call] hideCover()")
TRC_MSG(TRC_VAPP_UCM_VT_EVENT_CALLBACK, "[Video call] eventCallbackHdlr() [tel_event = %d, para = %d, user_data = %d]")
TRC_MSG(TRC_VAPP_UCM_VT_PREPARE_STATUS, "[Video call] Prepare status: %d")
