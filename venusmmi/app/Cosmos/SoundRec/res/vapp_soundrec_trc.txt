[APP NAME] = Cosmos Sound Recorder App
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#start trace
TRC_MSG(TRC_VAPP_SOUNDREC_RECPAGE_UPDATE_TIMER, "[SOUNDREC] VappSoundRecorderRecordPage::onUpdateTimerExpir() State=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_RECPAGE_UPDATE_TIMER_GET_TIME, "[SOUNDREC] VappSoundRecorderRecordPage::onUpdateTimerExpir() Rec Time=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_RECPAGE_UPDATE_REMAIN_TIME, "[SOUNDREC] VappSoundRecorderRecordPage::updateRemainTimeText() forceUpdate=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_FILELIST_CREATE, "[SOUNDREC] VappSoundRecorderFileList::createList(), create list = [%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_FILELIST_CREATE_1, "[SOUNDREC] VappSoundRecorderFileList::createList(), refresh = [%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_FILELIST_IS_LOADING, "[SOUNDREC] VappSoundRecorderFileList::isLoading(), handle=[%d], state=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_LOAD_FILE_LIST, "[SOUNDREC] VappSoundRecorderListPage::loadFileListMenu()")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_LOAD_CALLBACK, "[SOUNDREC] VappSoundRecorderListPage::onListLoadedCallback()")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_LOAD_CALLBACK_1, "[SOUNDREC] VappSoundRecorderListPage::onListLoadedCallback(), event = [%d], result = [%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_LOAD_SHOW_LOADING, "[SOUNDREC] VappSoundRecorderListPage::showLoading()")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_LOAD_STOP_LOADING, "[SOUNDREC] VappSoundRecorderListPage::stopLoading()")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_SHOW_MULTI_DEL_PROCESSING, "[SOUNDREC] VappSoundRecorderListPage::showMultiDeleteProcessing()")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_ON_MULTI_DEL_CANCEL, "[SOUNDREC] VappSoundRecorderListPage::onMultiDeleteCancel(), result=[%d], job=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_DEL_FILE_ASYNC_1, "[SOUNDREC] VappSoundRecorderListPage::deleteFileAsync(), del_index=[%d], count=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_DEL_FILE_ASYNC_2, "[SOUNDREC] VappSoundRecorderListPage::deleteFileAsync(), i=[%d], ret=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_ON_LIST_DEL_CALLBACK, "[SOUNDREC] VappSoundRecorderListPage::onListDeleteCallback(), evt=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_ON_LIST_DEL_CALLBACK_DONE, "[SOUNDREC] VappSoundRecorderListPage::onListDeleteCallback(), DONE result=[%d], abort=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_ON_LIST_DEL_CALLBACK_ABORT, "[SOUNDREC] VappSoundRecorderListPage::onListDeleteCallback(), ABORT result=[%d], abort=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_LISTPAGE_CHANGE_LIST_MODE, "[SOUNDREC] VappSoundRecorderListPage::changeListMode(), curr_mode=[%d], mode=[%d], refresh=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_RECPAGE_RECCALLBACK, "[SOUNDREC] VappSoundRecorderRecordPage::recordCallbackHdlr(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_PLAYPAGE_SEEKSTART, "[SOUNDREC] VappSoundRecorderPlayPage::seekStart(), m_state=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_PLAYPAGE_SHOW_LOADING, "[SOUNDREC] VappSoundRecorderPlayPage::showLoading()")
TRC_MSG(TRC_VAPP_SOUNDREC_PLAYPAGE_PLAYCALLBACK, "[SOUNDREC] VappSoundRecorderPlayPage::playCallbackHdlr(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_PLAYPAGE_SEEKCALLBACK, "[SOUNDREC] VappSoundRecorderPlayPage::seekCallbackHdlr(), m_prev_state=[%d], result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_RECPAGE_UPDATE_FREE_SPACE, "[SOUNDREC] VappSoundRecorderRecordPage::updateFreeSpaceTimeText(), remain_time=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_REC_START, "[SOUNDREC] vadp_soundrec_rec_start(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_REC_PAUSE, "[SOUNDREC] vadp_soundrec_rec_pause(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_REC_RESUME, "[SOUNDREC] vadp_soundrec_rec_resume(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_REC_STOP, "[SOUNDREC] vadp_soundrec_rec_stop(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_PLAY_START, "[SOUNDREC] vadp_soundrec_play(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_PLAY_PAUSE, "[SOUNDREC] vadp_soundrec_pause(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_PLAY_RESUME, "[SOUNDREC] vadp_soundrec_resume(), result=[%d]")
TRC_MSG(TRC_VAPP_SOUNDREC_VADP_PLAY_STOP, "[SOUNDREC] vadp_soundrec_stop(), result=[%d]")

