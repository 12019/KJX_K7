[APP NAME] = Camcorder
[SCOPE] = COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#starttrace
TRC_MSG(TRC_VAPP_CAMCO_ON_INIT, "[CAMCO] onInit()")
TRC_MSG(TRC_VAPP_CAMCO_ON_DEINIT, "[CAMCO] onDeinit()")
TRC_MSG(TRC_VAPP_CAMCO_ON_ENTER, "[CAMCO] onEnter() [isBackward=%d]")
TRC_MSG(TRC_VAPP_CAMCO_ON_EXIT, "[CAMCO] onExit() [isBackward=%d]")

TRC_MSG(TRC_VAPP_CAMCO_IS_HZUI, "[CAMCO] isHorzUI()[result = %d]") 
TRC_MSG(TRC_VAPP_CMACO_ON_QUERY_ROTATE, "[CAMCO] onQueryRotate()[%d]")

TRC_MSG(TRC_VAPP_CAMCO_SET_CALLINGPARAM, "[CAMCO] setCallingParam() [mode = %d]")

TRC_MSG(TRC_VAPP_CAMCO_STORAGE_NOTIFY, "[CAMCO] storageChangeNotifyHdlr()")
TRC_MSG(TRC_VAPP_CAMCO_USB_NOTIFY, "[CAMCO] USBChangeNotigyHdlr()")
 
TRC_MSG(TRC_VAPP_CAMCO_CHECKENV, "[CAMCO] checkEnv() [cause = %d]")
TRC_MSG(TRC_VAPP_CAMCO_DECHECKENV, "[CAMCO] decheckEnv()")
 
TRC_MSG(TRC_VAPP_CAMCO_CONFIG_MEM, "[CAMCO] configMem() [size = %d]")
TRC_MSG(TRC_VAPP_CAMCO_RESET_MEM, "[CAMCO] resetMem() [ptr = %d]")
 
TRC_MSG(TRC_VAPP_CAMCO_INIT_ENV, "[CAMCO] initEnv()")
TRC_MSG(TRC_VAPP_CAMCO_DEINIT_ENV, "[CAMCO] deinitEnv()")

TRC_MSG(TRC_VAPP_CAMCO_CHECK_REMOVABLE_STORAGE, "[CAMCO] checkRemovableStorage() [result = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CHECK_SAVE_PATH, "[CAMCO] checkSavePath() [cause = %d]") 
 
TRC_MSG(TRC_VAPP_CAMCO_INIT_SETTING, "[CAMCO] initSetting() [mode = %d]")
TRC_MSG(TRC_VAPP_CAMCO_INIT_SETTING_STORAGE, "[CAMCO] initSetting() [set default storage]")
TRC_MSG(TRC_VAPP_CAMCO_INIT_OSD, "[CAMCO] initOSD()")
TRC_MSG(TRC_VAPP_CAMCO_INIT_PREVIEW_WINDOW, "[CAMCO] initPreviewWindow() [w = %d, h = %d, x = %d, y = %d]")
  
TRC_MSG(TRC_VAPP_CAMCO_ENTER_STATE, "[CAMCO] enterState() [next_state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_EXIT_STATE, "[CAMCO] exitState() [curr_state = %d]") 
TRC_MSG(TRC_VAPP_CAMCO_RECOVER_STATE, "[CAMCO] recoverState() [state = %d, event = %d]") 

TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_HDLR, "[CAMCO] camPreviewHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_FAILED_HDLR, "[CAMCO] camPreviewFailedHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_SAVE_DONE_HDLR, "[CAMCO] camSaveDoneHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_COUNT_DOWN_HDLR, "[CAMCO] camCountdownHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_CONTSHOT_HDLR, "[CAMCO] camContshotHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_BURSTSHOT_SELECT_HDLR, "[CAMCO] camBurstshotSelectHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_AEBSHOT_SELECT_HDLR, "[CAMCO] camAebshotSelectHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_SMILEDECT_HDLR, "[CAMCO] camSmileDectHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_CAM_FOCUS_HDLR, "[CAMCO] camFocusHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_HDLR, "[CAMCO] recPreviewHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_FAILED_HDLR, "[CAMCO] recPreviewFailedHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_REC_RECORDING_HDLR, "[CAMCO] recRecordingHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_REC_PAUSE_HDLR, "[CAMCO] recPauseHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_REC_SAVE_DONE_HDLR, "[CAMCO] recSaveDoneHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_REC_FOCUS_HDLR, "[CAMCO] recFocusHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ERROR_POPUP_HDLR, "[CAMCO] errorPopupHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_CAMCO_APP_GLOBAL_EVENT_HDLR, "[CAMCO] appGlobalEventHdlr() [event = %d]") 

TRC_MSG(TRC_VAPP_CAMCO_ENTER_EXIT_STATE, "[CAMCO] enterExitState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_PREVIEW_STATE, "[CAMCO] enterCamPreviewState() [restart = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_PREVIEW_FAILED_STATE, "[CAMCO] enterCamPreviewFailedState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_FOCUSING_STATE, "[CAMCO] enterCamFocusingState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_FOCUSED_STATE, "[CAMCO] enterCamFocusedState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_COUNTDOWN_STATE, "[CAMCO] enterCamCountdownState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_CAPTURE_STATE, "[CAMCO] enterCamCaptureState() [capture mode = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_SAVE_DONE_STATE, "[CAMCO] enterCamSaveDoneState() [state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_CONTSHOT_STATE, "[CAMCO] enterCamContshotState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_BURSTSHOT_STATE, "[CAMCO] enterCamBurstshotState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_BURSTSHOT_SELECT_STATE, "[CAMCO] enterCamBurstshotSelectState() [state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_AEBSHOT_STATE, "[CAMCO] enterCamAebshotState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_AEBSHOT_SELECT_STATE, "[CAMCO] enterCamAebshotSelectState() [state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_CAM_SMILEDECT_STATE, "[CAMCO] enterCamSmileDectState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_PREVIEW_STATE, "[CAMCO] enterRecPreviewState() [restart = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_PREVIEW_FAILED_STATE, "[CAMCO] enterRecPreviewFailedState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_FOCUSING_STATE, "[CAMCO] enterRecFocusingState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_FOCUSED_STATE, "[CAMCO] enterRecFocusedState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_RECORDING_STATE, "[CAMCO] enterRecRecordingState() [state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_PAUSE_STATE, "[CAMCO] enterRecPauseState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_SAVING_STATE, "[CAMCO] enterRecSavingState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_REC_SAVE_DONE_STATE, "[CAMCO] enterRecSaveDoneState()")
TRC_MSG(TRC_VAPP_CAMCO_ENTER_ENTER_FAIL_STATE, "[CAMCO] enterEnterFailState()")

TRC_MSG(TRC_VAPP_CAMCO_RESULT_HW_CALLBACK, "[CAMCO] resultHWCallback() [type = %d, state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_RESULT_HW_CALLBACK_EVENT, "[CAMCO] resultHWCallback() [event = %d, value = %d]")

TRC_MSG(TRC_VAPP_CAMCO_CAM_RESTART_PREVIEW, "[CAMCO] camRestartPreview()")
TRC_MSG(TRC_VAPP_CAMCO_REC_RESTART_PREVIEW, "[CAMCO] recRestartPreview()")	
TRC_MSG(TRC_VAPP_CAMCO_ON_PREVIEW_FRAME_PREPARE_DONE, "[CAMCO] onPreviewFramePrepareDone()")
	
TRC_MSG(TRC_VAPP_CAMCO_SMILEDETECT_CYCLIC, "[CAMCO] smiledetectCyclic() [state = %d, result = %d]")
TRC_MSG(TRC_VAPP_CAMCO_SMILEDETECT_SUCCESS, "[CAMCO] smiledetectSuccess()")
TRC_MSG(TRC_VAPP_CAMCO_COUNTDOWN_CYCLIC, "[CAMCO] countdownCyclic() [dur = %d, timer = %d]")

TRC_MSG(TRC_VAPP_CAMCO_SAVE_CAPTURED_IMAGE, "[CAMCO] saveCapturedImage() [result = %d]")
TRC_MSG(TRC_VAPP_CAMCO_DRAW_CAPTURE_IMAGE, "[CAMCO] drawCaptureImage() [result = %d]")

TRC_MSG(TRC_VAPP_CAMCO_RECORDTONECYCLIC, "[CAMCO] recordToneCyclic()")
TRC_MSG(TRC_VAPP_CAMCO_RECORDLIMITCYCLIC, "[CAMCO] recordLimitCyclic()")
TRC_MSG(TRC_VAPP_CAMCO_RECORDINGCYCLIC, "[CAMCO] recordingCyclic()")
 
TRC_MSG(TRC_VAPP_CAMCO_ISSLIENTMODE, "[CAMCO] isSlientMode()")
TRC_MSG(TRC_VAPP_CAMCO_INITCOUNTDOWNSOUND, "[CAMCO] initCountDownSound()")
TRC_MSG(TRC_VAPP_CAMCO_DEINITCOUNTDOWNSOUND, "[CAMCO] deinitCountDownSound()")

TRC_MSG(TRC_VAPP_CAMCO_PLAY_AUTOFOCUS_SUCCESS_SOUND, "[CAMCO] playAutofocusSuccessSound()")
TRC_MSG(TRC_VAPP_CAMCO_PLAY_CATURE_SOUND, "[CAMCO] playCatureSound(MDI_RESULTcap_ret)")

TRC_MSG(TRC_VAPP_CAMCO_IS_APP_ACTIVE, "[CAMCO] isAppActive() [result = %d]")
TRC_MSG(TRC_VAPP_CAMCO_IS_INCALL, "[CAMCO] isInCall() [result = %d]")

TRC_MSG(TRC_VAPP_CAMCO_ON_ERROR_EXIT_TIMER_TICK, "[CAMCO] onErrorExitTimerTick()")

TRC_MSG(TRC_VAPP_CAMCO_SHOW_POPUP_SCREEN, "[CAMCO] showPopupScreen() [error_cause = %d, param = %d]")
TRC_MSG(TRC_VAPP_CAMCO_STOP_POPUP_SCREEN, "[CAMCO] stopPopupScreen() [is running = %d]") 
TRC_MSG(TRC_VAPP_CAMCO_POPUP_CALLBACK, "[CAMCO] popupcallback()") 
TRC_MSG(TRC_VAPP_CAMCO_POPUP_RECOVERCALLBACK, "[CAMCO] popupRecovercallback() [state = %d]")
TRC_MSG(TRC_VAPP_CAMCO_POPUP_ENTER_CALLBACK, "[CAMCO] popupEntercallback() [state = %d]") 

TRC_MSG(TRC_VAPP_CAMCO_EXIT_CAMCO_CUI, "[CAMCO] exitCamcoCUI()") 
TRC_MSG(TRC_VAPP_CAMCO_MAPPING_SHOWN_STRING, "[CAMCO] etMappingShownString() [type = %d]")

TRC_MSG(TRC_VAPP_CAMCO_GETNEXTFILENAME, "[CAMCO] getNextFilename() [curr_no = %d]")
TRC_MSG(TRC_VAPP_CAMCO_RESTOREFILENAME, "[CAMCO] restoreFilename() [curr_no = %d]")
 
TRC_MSG(TRC_VAPP_CAMCO_COUNTDOWNLEDTURNOFF, "[CAMCO] countdownLedTurnOff()")

TRC_MSG(TRC_VAPP_CAMCO_CAPTURE, "[CAMCO] Capture() [state = %d, capmode = %d]")
TRC_MSG(VAPP_CAMCO_RESET_HW_OBJ, "[CAMCO] vapp_camco_reset_hw_obj() [result = %d]")

TRC_MSG(VAPP_CAMCO_CAM_PREVIEW_START, "[CAMCO] vapp_camco_cam_preview_start() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_PREVIEW_STOP, "[CAMCO] vapp_camco_cam_preview_stop() [result = %d]")

TRC_MSG(VAPP_CAMCO_REC_PREVIEW_START, "[CAMCO] vapp_camco_rec_preview_start() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_PREVIEW_STOP, "[CAMCO] vapp_camco_rec_preview_stop() [result = %d]")

TRC_MSG(VAPP_CAMCO_CAM_POWER_ON, "[CAMCO] vapp_camco_cam_power_on() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_POWER_OFF, "[CAMCO] vapp_camco_cam_power_off() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_POWER_ON, "[CAMCO] vapp_camco_rec_power_on() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_POWER_OFF, "[CAMCO] vapp_camco_rec_power_off() [result = %d]")

TRC_MSG(VAPP_CAMCO_CAM_NORMAL_SHOT, "[CAMCO] vapp_camco_cam_normal_shot() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_ADDFRAME_SHOT, "[CAMCO] vapp_camco_cam_addframe_shot() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_BESTSHOT, "[CAMCO] vapp_camco_cam_bestshot() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_CONTSHOT, "[CAMCO] vapp_camco_cam_contshot() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_BURSTSHOT, "[CAMCO] vapp_camco_cam_burstshot() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_BURSTSHOT_STOP, "[CAMCO] vapp_camco_cam_burstshot_stop() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_BURSTSHOT_CALLBACK, "[CAMCO] vapp_camco_cam_burstshot_callback() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_AEBSHOT, "[CAMCO] vapp_camco_cam_aebshot() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_SMILEDETECT_GET_RESULT, "[CAMCO] vapp_camco_cam_smiledetect_get_result() [result = %d]")

TRC_MSG(VAPP_CAMCO_CAM_SAVE_CAPTURE_IMAGE, "[CAMCO] vapp_camco_cam_save_capture_image() [result = %d]")

TRC_MSG(VAPP_CAMCO_REC_RECORD_START, "[CAMCO] vapp_camco_rec_record_start() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_RECORD_STOP, "[CAMCO] vapp_camco_rec_record_stop() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_RECORD_PAUSE, "[CAMCO] vapp_camco_rec_record_pause() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_RECORD_RESUME, "[CAMCO] vapp_camco_rec_record_resume() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_RECORD_CALLBACK, "[CAMCO] vapp_camco_rec_record_callback() [result = %d]")

TRC_MSG(VAPP_CAMCO_REC_SAVE_VIDEO, "[CAMCO] vapp_camco_rec_save_video() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_SAVE_VIDEO_RESULT, "[CAMCO] vapp_camco_rec_save_video_result() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_FETCH_FRAME, "[CAMCO] vapp_camco_rec_fetch_frame() [result = %d]")

TRC_MSG(VAPP_CAMCO_BG_CAL_START, "[CAMCO] vapp_camco_background_calculation_start() [result = %d]")
TRC_MSG(VAPP_CAMCO_BG_CAL_STOP, "[CAMCO] vapp_camco_background_calculation_stop() [result = %d]")

TRC_MSG(VAPP_CAMCO_CAM_SD_START, "[CAMCO] vapp_camco_cam_sd_start() [isCalBgProcessOn = %d]")
TRC_MSG(VAPP_CAMCO_CAM_SD_STOP, "[CAMCO] vapp_camco_cam_sd_stop() [isCalBgProcessOn = %d]")

TRC_MSG(VAPP_CAMCO_CAM_GET_EST_SIZE, "[CAMCO] vapp_camco_cam_get_estimated_picture_size() [qty = %d, w = %d, h = %d, est size = %d]")
TRC_MSG(VAPP_CAMCO_REC_GET_EST_SIZE, "[CAMCO] vapp_camco_rec_get_estimated_video_size() [qty = %d, fomate = %d, resolution = %d, storage = %d, est size = %d, reserve size = %d]")

TRC_MSG(VAPP_CAMCO_CAM_AUTOFOCUS_START, "[CAMCO] vapp_camco_cam_autofocus_start() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_AUTOFOCUS_STOP, "[CAMCO] vapp_camco_cam_autofocus_stop() [result = %d]")
TRC_MSG(VAPP_CAMCO_CAM_GET_AUTOFOCUS_RESULT, "[CAMCO] vapp_camco_cam_get_autofocus_result() [result = %d]")

TRC_MSG(VAPP_CAMCO_REC_AUTOFOCUS_START, "[CAMCO] vapp_camco_rec_autofocus_start() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_AUTOFOCUS_STOP, "[CAMCO] vapp_camco_rec_autofocus_stop() [result = %d]")
TRC_MSG(VAPP_CAMCO_REC_GET_AUTOFOCUS_RESULT, "[CAMCO] vapp_camco_rec_get_autofocus_result() [result = %d]")

TRC_MSG(VAPP_CAMCO_BK_TURN_ON, "[CAMCO] vapp_camco_bk_turn_on() [result = %d]")
TRC_MSG(VAPP_CAMCO_BK_TURN_OFF, "[CAMCO] vapp_camco_bk_turn_off() [result = %d]")
TRC_MSG(VAPP_CAMCO_HIGHLIGHT_TURN_ON, "[CAMCO] vapp_camco_highlight_turn_on() [result = %d]")
TRC_MSG(VAPP_CAMCO_HIGHLIGHT_TURN_OFF, "[CAMCO] vapp_camco_highlight_turn_off() [result = %d]")    

TRC_MSG(VAPP_CAMCO_DRAW_ADD_FRAME, "[CAMCO] vapp_camco_draw_add_frame() [index = %d]")    

TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE, "[CAMCO] vapp_camco_setting_get_value() [setting = %d, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAMSWITCHTO, "[CAMCO] vapp_camco_setting_get_value() [setting = %d, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAPMODE, "[CAMCO] vapp_camco_setting_get_value() [setting = capmode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAMSCENEMODE, "[CAMCO] vapp_camco_setting_get_value() [setting = cam SCN mode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAPSIZE, "[CAMCO] vapp_camco_setting_get_value() [setting = capsize, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_FLASH, "[CAMCO] vapp_camco_setting_get_value() [setting = flash, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_HIGHLIGHT, "[CAMCO] vapp_camco_setting_get_value() [setting = highlite, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_AFRANGE, "[CAMCO] vapp_camco_setting_get_value() [setting = af range, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_SELFTIMER, "[CAMCO] vapp_camco_setting_get_value() [setting = timer, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_ISO, "[CAMCO] vapp_camco_setting_get_value() [setting = iso, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_WB, "[CAMCO] vapp_camco_setting_get_value() [setting = wb, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_EFFECT, "[CAMCO] vapp_camco_setting_get_value() [setting = effect, value = %d]")         
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAMSTORAGE, "[CAMCO] vapp_camco_setting_get_value() [setting = cam storage, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_VDOSTORAGE, "[CAMCO] vapp_camco_setting_get_value() [setting = vdo storage, value = %d]")       
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAPQTY, "[CAMCO] vapp_camco_setting_get_value() [setting = cam qty, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_AFZONE, "[CAMCO] vapp_camco_setting_get_value() [setting = af zone, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_AEMETER, "[CAMCO] vapp_camco_setting_get_value() [setting = aemeter, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_SHARPNESS, "[CAMCO] vapp_camco_setting_get_value() [setting = sharpness, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CONTRAST, "[CAMCO] vapp_camco_setting_get_value() [setting = contrast, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_SATURATION, "[CAMCO] vapp_camco_setting_get_value() [setting = satuation, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_SHUTTERSOUND, "[CAMCO] vapp_camco_setting_get_value() [setting = cap sound, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_BANDING, "[CAMCO] vapp_camco_setting_get_value() [setting = banding, value = %d]")         
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_VDOSCENEMODE, "[CAMCO] vapp_camco_setting_get_value() [setting = rec SCN mode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_RECSIZE, "[CAMCO] vapp_camco_setting_get_value() [setting = recsize, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_LIMIT, "[CAMCO] vapp_camco_setting_get_value() [setting = limit, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_VISQTY, "[CAMCO] vapp_camco_setting_get_value() [setting = rec qty, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_AFMODE, "[CAMCO] vapp_camco_setting_get_value() [setting = af mode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_RECAUD, "[CAMCO] vapp_camco_setting_get_value() [setting = rec sound, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_VISCODEC, "[CAMCO] vapp_camco_setting_get_value() [setting = rec codec, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAMEV, "[CAMCO] vapp_camco_setting_get_value() [setting = cam EV, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_VDOEV, "[CAMCO] vapp_camco_setting_get_value() [setting = rec EV, value = %d]")            
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_CAMZOOM, "[CAMCO] vapp_camco_setting_get_value() [setting = cam zoom, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_VDOZOOM, "[CAMCO] vapp_camco_setting_get_value() [setting = rec zoom, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_RESTOREDEFAULT, "[CAMCO] vapp_camco_setting_get_value() [setting = restore default, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_ACT_APP, "[CAMCO] vapp_camco_setting_get_value() [setting = act app, value = %d]")       
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_ACT_CAM, "[CAMCO] vapp_camco_setting_get_value() [setting = act sensor, value = %d]")     
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_ADDFRAME_FRAME, "[CAMCO] vapp_camco_setting_get_value() [setting = add frame, value = %d]")       
TRC_MSG(VAPP_CAMCO_SETTING_GET_VALUE_AUXILIARY, "[CAMCO] vapp_camco_setting_get_value() [setting = auxiliary, value = %d]") 

TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE, "[CAMCO] vapp_camco_setting_set_value() [setting = %d, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAPMODE, "[CAMCO] vapp_camco_setting_set_value() [setting = capmode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAMSCENEMODE, "[CAMCO] vapp_camco_setting_set_value() [setting = cam SCN mode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAPSIZE, "[CAMCO] vapp_camco_setting_set_value() [setting = capsize, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_FLASH, "[CAMCO] vapp_camco_setting_set_value() [setting = flash, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_HIGHLIGHT, "[CAMCO] vapp_camco_setting_set_value() [setting = highlite, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_AFRANGE, "[CAMCO] vapp_camco_setting_set_value() [setting = af range, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_SELFTIMER, "[CAMCO] vapp_camco_setting_set_value() [setting = timer, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_ISO, "[CAMCO] vapp_camco_setting_set_value() [setting = iso, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_WB, "[CAMCO] vapp_camco_setting_set_value() [setting = wb, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_EFFECT, "[CAMCO] vapp_camco_setting_set_value() [setting = effect, value = %d]")         
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAMSTORAGE, "[CAMCO] vapp_camco_setting_set_value() [setting = cam storage, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_VDOSTORAGE, "[CAMCO] vapp_camco_setting_set_value() [setting = vdo storage, value = %d]")       
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAPQTY, "[CAMCO] vapp_camco_setting_set_value() [setting = cam qty, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_AFZONE, "[CAMCO] vapp_camco_setting_set_value() [setting = af zone, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_AEMETER, "[CAMCO] vapp_camco_setting_set_value() [setting = aemeter, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_SHARPNESS, "[CAMCO] vapp_camco_setting_set_value() [setting = sharpness, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CONTRAST, "[CAMCO] vapp_camco_setting_set_value() [setting = contrast, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_SATURATION, "[CAMCO] vapp_camco_setting_set_value() [setting = satuation, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_SHUTTERSOUND, "[CAMCO] vapp_camco_setting_set_value() [setting = cap sound, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_BANDING, "[CAMCO] vapp_camco_setting_set_value() [setting = banding, value = %d]")         
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_VDOSCENEMODE, "[CAMCO] vapp_camco_setting_set_value() [setting = rec SCN mode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_RECSIZE, "[CAMCO] vapp_camco_setting_set_value() [setting = recsize, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_LIMIT, "[CAMCO] vapp_camco_setting_set_value() [setting = limit, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_VISQTY, "[CAMCO] vapp_camco_setting_set_value() [setting = rec qty, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_AFMODE, "[CAMCO] vapp_camco_setting_set_value() [setting = af mode, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_RECAUD, "[CAMCO] vapp_camco_setting_set_value() [setting = rec sound, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_VISCODEC, "[CAMCO] vapp_camco_setting_set_value() [setting = rec codec, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAMEV, "[CAMCO] vapp_camco_setting_set_value() [setting = cam EV, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_VDOEV, "[CAMCO] vapp_camco_setting_set_value() [setting = rec EV, value = %d]")            
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_CAMZOOM, "[CAMCO] vapp_camco_setting_set_value() [setting = cam zoom, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_VDOZOOM, "[CAMCO] vapp_camco_setting_set_value() [setting = rec zoom, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_RESTOREDEFAULT, "[CAMCO] vapp_camco_setting_set_value() [setting = restore default, value = %d]")   
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_ACT_APP, "[CAMCO] vapp_camco_setting_set_value() [setting = act app, value = %d]")       
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_ACT_CAM, "[CAMCO] vapp_camco_setting_set_value() [setting = act sensor, value = %d]")     
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_ADDFRAME_FRAME, "[CAMCO] vapp_camco_setting_set_value() [setting = add frame, value = %d]")       
TRC_MSG(VAPP_CAMCO_SETTING_SET_VALUE_AUXILIARY, "[CAMCO] vapp_camco_setting_set_value() [setting = auxiliary, value = %d]")         

TRC_MSG(VAPP_CAMCO_SETTING_GET_MAPPING_ID, "[CAMCO] vapp_camco_setting_get_mapping_id() [setting = %d, value = %d]")         
TRC_MSG(VAPP_CAMCO_SETTING_UPDATE, "[CAMCO] vapp_camco_setting_update_setting() [change_setting = %d, change_value = %d, last_value = %d]")  
TRC_MSG(VAPP_CAMCO_SETTING_CUSTOM_DEP, "[CAMCO] vapp_camco_setting_custom() [has depened = %d]")  
TRC_MSG(VAPP_CAMCO_SETTING_CUSTOM_KEY, "[CAMCO] vapp_camco_setting_custom() [key = %d]")  
TRC_MSG(VAPP_CAMCO_SETTING_CUSTOM_HIDE, "[CAMCO] vapp_camco_setting_custom() [hide = %d]")  
TRC_MSG(VAPP_CAMCO_SETTING_CUSTOM_UPDATE, "[CAMCO] vapp_camco_setting_custom_update() ")  

TRC_MSG(VAPP_CAMCO_OSD_ENTER_STATE, "[CAMCO] vapp_camco_osd_enter_state() [state = %d]")  
TRC_MSG(VAPP_CAMCO_OSD_SET_PARAM, "[CAMCO] vapp_camco_osd_set_param() [type = %d]")  

TRC_MSG(VAPP_CAMCO_OSD_CP_RECT_UPDATE, "[CAMCO] vapp_camco_osd_cp_rect_update() [x = %d, y = %d, w = %d, h = %d]") 
TRC_MSG(VAPP_CAMCO_OSD_CP_SLIDER_UPDATE, "[CAMCO] vapp_camco_osd_cp_slider_update() [value = %d, minValue = %d, maxValue = %d, isVerticalMode = %d, isInverseMode = %d]") 
TRC_MSG(VAPP_CAMCO_OSD_CP_BASE_MENU_SELECT, "[CAMCO] vapp_camco_osd_cp_base_menu_select() [setting = %d]") 
TRC_MSG(VAPP_CAMCO_OSD_CP_CIRCLE_MENU_SELECT, "[CAMCO] vapp_camco_osd_cp_circle_menu_select() [setting = %d]") 
TRC_MSG(VAPP_CAMCO_OSD_CP_AD_MENU_SELECT, "[CAMCO] vapp_camco_osd_cp_advance_menu_select() [setting = %d, value = %d]") 
TRC_MSG(VAPP_CAMCO_OSD_CP_AD_MENU_TRAVERSE, "[CAMCO] vapp_camco_osd_cp_advance_menu_traverse() [setting = %d]") 


TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_ENTER_ADVANCE_SETTING, "[CAMCO][OSD][CAM PREVIEW] enter advance setting")      
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_ENTER_SETTING, "[CAMCO][OSD][CAM PREVIEW] enter setting (%d)")      
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_SET_SETTING, "[CAMCO][OSD][CAM PREVIEW] set setting") 
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_SET_ADVANCE_SETTING, "[CAMCO][OSD][CAM PREVIEW] set advance setting")     
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_SET_ZOOM_SETTING, "[CAMCO][OSD][CAM PREVIEW] set zoom setting")     
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_SET_ADDFRAME_SETTING, "[CAMCO][OSD][CAM PREVIEW] set add frame setting")     
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_LEAVE_SETTING, "[CAMCO][OSD][CAM PREVIEW] leave setting")  
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_LEAVE_ADVANCE_SETTING, "[CAMCO][OSD][CAM PREVIEW] leave advance setting")  
TRC_MSG(TRC_VAPP_CAMCO_CAM_PREVIEW_TRAVERSE_ADVANCE_SETTING, "[CAMCO][OSD][CAM PREVIEW] traverse advance setting (%d)")  

TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_ENTER_ADVANCE_SETTING, "[CAMCO][OSD][REC PREVIEW] enter advance setting")     
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_ENTER_SETTING, "[CAMCO][OSD][REC PREVIEW] enter setting (%d)")         
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_SET_SETTING, "[CAMCO][REC PREVIEW] set setting")                 
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_SET_ADVANCE_SETTING, "[CAMCO][OSD][REC PREVIEW] set advance setting")         
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_SET_ZOOM_SETTING, "[CAMCO][OSD][REC PREVIEW] set zoom setting")         
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_LEAVE_SETTING, "[CAMCO][REC PREVIEW] leave setting")  
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_LEAVE_ADVANCE_SETTING, "[CAMCO][OSD][REC PREVIEW] leave advance setting")  
TRC_MSG(TRC_VAPP_CAMCO_REC_PREVIEW_TRAVERSE_ADVANCE_SETTING, "[CAMCO][OSD][REC PREVIEW] traverse advance setting (%d)")  

TRC_MSG(TRC_VAPP_CAMCO_REC_RECORD_SET_ZOOM_SETTING, "[CAMCO][REC RECORDING] set zoom setting")         
TRC_MSG(TRC_VAPP_CAMCO_REC_PAUSE_SET_ZOOM_SETTING, "[CAMCO][REC PAUSE] set zoom setting")         
