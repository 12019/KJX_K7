[APP NAME] = Autocap
[SCOPE] = COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#starttrace
TRC_MSG(TRC_VAPP_AUTOCAP_ON_INIT, "[AUTOCAP] onInit()")
TRC_MSG(TRC_VAPP_AUTOCAP_ON_DEINIT, "[AUTOCAP] onDeinit()")
TRC_MSG(TRC_VAPP_AUTOCAP_ON_ENTER, "[AUTOCAP] onEnter() [isBackward=%d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ON_EXIT, "[AUTOCAP] onExit() [isBackward=%d]")

TRC_MSG(TRC_VAPP_AUTOCAP_IS_HZUI, "[AUTOCAP] isHorzUI()[result = %d]") 
TRC_MSG(TRC_VAPP_AUTOCAP_ON_QUERY_ROTATE, "[AUTOCAP] onQueryRotate()[%d]")

TRC_MSG(TRC_VAPP_AUTOCAP_SET_CALLINGPARAM, "[AUTOCAP] setCallingParam() [mode = %d]")

TRC_MSG(TRC_VAPP_AUTOCAP_STORAGE_NOTIFY, "[AUTOCAP] storageChangeNotifyHdlr()")
TRC_MSG(TRC_VAPP_AUTOCAP_USB_NOTIFY, "[AUTOCAP] USBChangeNotigyHdlr()")
 
TRC_MSG(TRC_VAPP_AUTOCAP_CHECKENV, "[AUTOCAP] checkEnv() [cause = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_DECHECKENV, "[AUTOCAP] decheckEnv()")
 
TRC_MSG(TRC_VAPP_AUTOCAP_CONFIG_MEM, "[AUTOCAP] configMem() [size = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_RESET_MEM, "[AUTOCAP] resetMem() [ptr = %d]")
 
TRC_MSG(TRC_VAPP_AUTOCAP_INIT_ENV, "[AUTOCAP] initEnv()")
TRC_MSG(TRC_VAPP_AUTOCAP_DEINIT_ENV, "[AUTOCAP] deinitEnv()")

TRC_MSG(TRC_VAPP_AUTOCAP_CHECK_REMOVABLE_STORAGE, "[AUTOCAP] checkRemovableStorage() [result = %d]") 
TRC_MSG(TRC_VAPP_AUTOCAP_CHECK_SAVE_PATH, "[AUTOCAP] checkSavePath() [cause = %d]") 
 
TRC_MSG(TRC_VAPP_AUTOCAP_INIT_SETTING, "[AUTOCAP] initSetting() [mode = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_INIT_SETTING_STORAGE, "[AUTOCAP] initSetting() [set default storage]")
TRC_MSG(TRC_VAPP_AUTOCAP_INIT_OSD, "[AUTOCAP] initOSD()")
TRC_MSG(TRC_VAPP_AUTOCAP_INIT_PREVIEW_WINDOW, "[AUTOCAP] initPreviewWindow() [w = %d, h = %d, x = %d, y = %d]")
  
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_STATE, "[AUTOCAP] enterState() [next_state = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_EXIT_STATE, "[AUTOCAP] exitState() [curr_state = %d]") 
TRC_MSG(TRC_VAPP_AUTOCAP_RECOVER_STATE, "[AUTOCAP] recoverState() [state = %d, event = %d]") 

TRC_MSG(TRC_VAPP_AUTOCAP_PREVIEW_HDLR, "[AUTOCAP] PreviewHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_PREVIEW_FAILED_HDLR, "[AUTOCAP] PreviewFailedHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_PANORAMASHOT_HDLR, "[AUTOCAP] AutoramaShotHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_PANORAMA_STITCH_HDLR, "[AUTOCAP] AutoramaStitchHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_PANORAMA_CLIP_HDLR, "[AUTOCAP] AutoramaClipHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_PANORAMA_DONE_HDLR, "[AUTOCAP] AutoramaDoneHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_FOCUS_HDLR, "[AUTOCAP] FocusHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ERROR_POPUP_HDLR, "[AUTOCAP] errorPopupHdlr() [event = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_APP_GLOBAL_EVENT_HDLR, "[AUTOCAP] appGlobalEventHdlr() [event = %d]") 

TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_EXIT_STATE, "[AUTOCAP] enterExitState()")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PREVIEW_STATE, "[AUTOCAP] enterPreviewState() [restart = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PREVIEW_FAILED_STATE, "[AUTOCAP] enterPreviewFailedState()")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_FOCUSING_STATE, "[AUTOCAP] enterFocusingState()")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_FOCUSED_STATE, "[AUTOCAP] enterFocusedState()")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PANORAMASHOT_STATE, "[AUTOCAP] enterAutoramaShotState() [state = %d, captured num = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PANORAMA_STITCH_STATE, "[AUTOCAP] enterAutoramaStitchState() [state = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PANORAMA_CLIP_STATE, "[AUTOCAP] enterAutoramaClipState() [state = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PANORAMA_ENCODE_STATE, "[AUTOCAP] enterAutoramaEncodeState() [state = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_CAM_PANORAMA_DONE_STATE, "[AUTOCAP] enterCamPanoramaDoneState()")
TRC_MSG(TRC_VAPP_AUTOCAP_PANORAMA_UPDATE, "[AUTOCAP] onAutoramaUpdateTick [dir = %d, mv_x = %d, mv_y = %d, ready = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_PANORAMA_UPDATE2, "[AUTOCAP] onAutoramaUpdateTick [last time = %d, current time = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_ON_UPDATE, "[AUTOCAP] onAutoramaUpdateTick ")

TRC_MSG(TRC_VAPP_AUTOCAP_ENTER_ENTER_FAIL_STATE, "[AUTOCAP] enterEnterFailState()")

TRC_MSG(TRC_VAPP_AUTOCAP_RESULT_HW_CALLBACK, "[AUTOCAP] resultHWCallback() [type = %d, state = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_RESULT_HW_CALLBACK_EVENT, "[AUTOCAP] resultHWCallback() [event = %d, value = %d]")

TRC_MSG(TRC_VAPP_AUTOCAP_RESTART_PREVIEW, "[AUTOCAP] camRestartPreview()")
TRC_MSG(TRC_VAPP_AUTOCAP_PANO_RESTART_PREVIEW, "[AUTOCAP] camPanoRestartPreview()")
TRC_MSG(TRC_VAPP_AUTOCAP_ON_PREVIEW_FRAME_PREPARE_DONE, "[AUTOCAP] onPreviewFramePrepareDone()")
	
TRC_MSG(TRC_VAPP_AUTOCAP_SAVE_CAPTURED_IMAGE, "[AUTOCAP] saveCapturedImage() [result = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_DRAW_CAPTURE_IMAGE, "[AUTOCAP] drawCaptureImage() [result = %d]")

 
TRC_MSG(TRC_VAPP_AUTOCAP_ISSLIENTMODE, "[AUTOCAP] isSlientMode()")
TRC_MSG(TRC_VAPP_AUTOCAP_INITCOUNTDOWNSOUND, "[AUTOCAP] initCountDownSound()")
TRC_MSG(TRC_VAPP_AUTOCAP_DEINITCOUNTDOWNSOUND, "[AUTOCAP] deinitCountDownSound()")

TRC_MSG(TRC_VAPP_AUTOCAP_PLAY_AUTOFOCUS_SUCCESS_SOUND, "[AUTOCAP] playAutofocusSuccessSound()")
TRC_MSG(TRC_VAPP_AUTOCAP_PLAY_CATURE_SOUND, "[AUTOCAP] playCatureSound(MDI_RESULTcap_ret)")

TRC_MSG(TRC_VAPP_AUTOCAP_IS_APP_ACTIVE, "[AUTOCAP] isAppActive() [result = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_IS_INCALL, "[AUTOCAP] isInCall() [result = %d]")

TRC_MSG(TRC_VAPP_AUTOCAP_ON_ERROR_EXIT_TIMER_TICK, "[AUTOCAP] onErrorExitTimerTick()")

TRC_MSG(TRC_VAPP_AUTOCAP_SHOW_POPUP_SCREEN, "[AUTOCAP] showPopupScreen() [error_cause = %d, param = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_STOP_POPUP_SCREEN, "[AUTOCAP] stopPopupScreen() [is running = %d]") 
TRC_MSG(TRC_VAPP_AUTOCAP_POPUP_CALLBACK, "[AUTOCAP] popupcallback()") 
TRC_MSG(TRC_VAPP_AUTOCAP_POPUP_RECOVERCALLBACK, "[AUTOCAP] popupRecovercallback() [state = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_POPUP_ENTER_CALLBACK, "[AUTOCAP] popupEntercallback() [state = %d]") 

TRC_MSG(TRC_VAPP_AUTOCAP_EXIT_AUTOCAP_CUI, "[AUTOCAP] exitCamcoCUI()") 
TRC_MSG(TRC_VAPP_AUTOCAP_MAPPING_SHOWN_STRING, "[AUTOCAP] etMappingShownString() [type = %d]")

TRC_MSG(TRC_VAPP_AUTOCAP_GETNEXTFILENAME, "[AUTOCAP] getNextFilename() [curr_no = %d]")
TRC_MSG(TRC_VAPP_AUTOCAP_RESTOREFILENAME, "[AUTOCAP] restoreFilename() [curr_no = %d]")
 
TRC_MSG(TRC_VAPP_AUTOCAP_COUNTDOWNLEDTURNOFF, "[AUTOCAP] countdownLedTurnOff()")

TRC_MSG(TRC_VAPP_AUTOCAP_CAPTURE, "[AUTOCAP] Capture() [state = %d, capmode = %d]")
TRC_MSG(VAPP_AUTOCAP_RESET_HW_OBJ, "[AUTOCAP] vapp_AUTOCAP_reset_hw_obj() [result = %d]")

TRC_MSG(VAPP_AUTOCAP_PREVIEW_START, "[AUTOCAP] vapp_autocap_cam_preview_start() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_PREVIEW_STOP, "[AUTOCAP] vapp_autocap_cam_preview_stop() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_POWER_ON, "[AUTOCAP] vapp_autocap_cam_power_on() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_POWER_OFF, "[AUTOCAP] vapp_autocap_cam_power_off() [result = %d]")

TRC_MSG(VAPP_AUTOCAP_PANORAMA_SHOT, "[AUTOCAP] vapp_autocap_panorama_shot() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_PANORAMA_STITCH, "[AUTOCAP] vapp_autocap_panorama_stitch() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_PANORAMA_STITCH_RESULT, "[AUTOCAP] vapp_autocap_panorama_stitch_result() [cb = %d, result = %d, r1 = %d,  r2 = %d, r3 = %d, r4 = %d]")
TRC_MSG(VAPP_AUTOCAP_PANORAMA_STOP_STITCH, "[AUTOCAP] vapp_autocap_panorama_stop_stitch() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_PANORAMA_PAUSE_STITCH, "[AUTOCAP] vapp_autocap_panorama_pause_stitch() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_PANORAMA_RESUME_STITCH, "[AUTOCAP] vapp_autocap_panorama_resume_stitch() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_PANORAMA_encode, "[AUTOCAP] vapp_autocap_panorama_encode() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_RESET_PANORAMA_3A, "[AUTOCAP] vapp_autocap_cam_reset_panorama_3a() [result = %d]")

TRC_MSG(VAPP_AUTOCAP_SAVE_CAPTURE_IMAGE, "[AUTOCAP] vapp_AUTOCAP_cam_save_capture_image() [result = %d]")

TRC_MSG(VAPP_AUTOCAP_BG_CAL_START, "[AUTOCAP] vapp_autocap_background_calculation_start()")
TRC_MSG(VAPP_AUTOCAP_BG_CAL_STOP, "[AUTOCAP] vapp_autocap_background_calculation_stop()")

TRC_MSG(VAPP_AUTOCAP_SD_START, "[AUTOCAP] vapp_AUTOCAP_cam_sd_start() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_SD_STOP, "[AUTOCAP] vapp_AUTOCAP_cam_sd_stop() [result = %d]")

TRC_MSG(VAPP_AUTOCAP_AUTOFOCUS_START, "[AUTOCAP] vapp_AUTOCAP_cam_autofocus_start() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_AUTOFOCUS_STOP, "[AUTOCAP] vapp_AUTOCAP_cam_autofocus_stop() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_GET_AUTOFOCUS_RESULT, "[AUTOCAP] vapp_AUTOCAP_cam_get_autofocus_result() [result = %d]")

TRC_MSG(VAPP_AUTOCAP_BK_TURN_ON, "[AUTOCAP] vapp_AUTOCAP_bk_turn_on() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_BK_TURN_OFF, "[AUTOCAP] vapp_AUTOCAP_bk_turn_off() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_HIGHLIGHT_TURN_ON, "[AUTOCAP] vapp_AUTOCAP_highlight_turn_on() [result = %d]")
TRC_MSG(VAPP_AUTOCAP_HIGHLIGHT_TURN_OFF, "[AUTOCAP] vapp_AUTOCAP_highlight_turn_off() [result = %d]")    

TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = %d, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAMSWITCHTO, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = %d, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAPMODE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = capmode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAMSCENEMODE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = cam SCN mode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAPSIZE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = capsize, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_FLASH, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = flash, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_HIGHLIGHT, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = highlite, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_AFRANGE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = af range, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_SELFTIMER, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = timer, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_ISO, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = iso, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_WB, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = wb, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_EFFECT, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = effect, value = %d]")         
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAMSTORAGE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = cam storage, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_VDOSTORAGE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = vdo storage, value = %d]")       
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAPQTY, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = cam qty, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_AFZONE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = af zone, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_AEMETER, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = aemeter, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_SHARPNESS, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = sharpness, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CONTRAST, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = contrast, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_SATURATION, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = satuation, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_SHUTTERSOUND, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = cap sound, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_BANDING, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = banding, value = %d]")         
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_VDOSCENEMODE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = rec SCN mode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_RECSIZE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = recsize, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_LIMIT, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = limit, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_VISQTY, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = rec qty, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_AFMODE, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = af mode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_RECAUD, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = rec sound, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_VISCODEC, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = rec codec, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAMEV, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = cam EV, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_VDOEV, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = rec EV, value = %d]")            
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_CAMZOOM, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = cam zoom, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_VDOZOOM, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = rec zoom, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_RESTOREDEFAULT, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = restore default, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_ACT_APP, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = act app, value = %d]")       
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_ACT_CAM, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = act sensor, value = %d]")     
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_ADDFRAME_FRAME, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = add frame, value = %d]")       
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_PANORAMA_DIRECTION, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = pano dir, value = %d]")      
TRC_MSG(VAPP_AUTOCAP_SETTING_GET_VALUE_AUXILIARY, "[AUTOCAP] vapp_AUTOCAP_setting_get_value() [setting = auxiliary, value = %d]") 

TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = %d, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAPMODE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = capmode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAMSCENEMODE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = cam SCN mode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAPSIZE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = capsize, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_FLASH, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = flash, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_HIGHLIGHT, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = highlite, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_AFRANGE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = af range, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_SELFTIMER, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = timer, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_ISO, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = iso, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_WB, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = wb, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_EFFECT, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = effect, value = %d]")         
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAMSTORAGE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = cam storage, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_VDOSTORAGE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = vdo storage, value = %d]")       
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAPQTY, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = cam qty, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_AFZONE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = af zone, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_AEMETER, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = aemeter, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_SHARPNESS, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = sharpness, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CONTRAST, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = contrast, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_SATURATION, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = satuation, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_SHUTTERSOUND, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = cap sound, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_BANDING, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = banding, value = %d]")         
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_VDOSCENEMODE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = rec SCN mode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_RECSIZE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = recsize, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_LIMIT, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = limit, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_VISQTY, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = rec qty, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_AFMODE, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = af mode, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_RECAUD, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = rec sound, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_VISCODEC, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = rec codec, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAMEV, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = cam EV, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_VDOEV, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = rec EV, value = %d]")            
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_CAMZOOM, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = cam zoom, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_VDOZOOM, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = rec zoom, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_RESTOREDEFAULT, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = restore default, value = %d]")   
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_ACT_APP, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = act app, value = %d]")       
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_ACT_CAM, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = act sensor, value = %d]")     
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_ADDFRAME_FRAME, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = add frame, value = %d]")       
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_PANORAMA_DIRECTION, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = pano dir, value = %d]")      
TRC_MSG(VAPP_AUTOCAP_SETTING_SET_VALUE_AUXILIARY, "[AUTOCAP] vapp_AUTOCAP_setting_set_value() [setting = auxiliary, value = %d]")         

TRC_MSG(VAPP_AUTOCAP_SETTING_GET_MAPPING_ID, "[AUTOCAP] vapp_AUTOCAP_setting_get_mapping_id() [setting = %d, value = %d]")         
TRC_MSG(VAPP_AUTOCAP_SETTING_UPDATE, "[AUTOCAP] vapp_AUTOCAP_setting_update_setting() [change_setting = %d, change_value = %d, last_value = %d]")  
TRC_MSG(VAPP_AUTOCAP_SETTING_CUSTOM_DEP, "[AUTOCAP] vapp_AUTOCAP_setting_custom() [has depened = %d]")  
TRC_MSG(VAPP_AUTOCAP_SETTING_CUSTOM_KEY, "[AUTOCAP] vapp_AUTOCAP_setting_custom() [key = %d]")  
TRC_MSG(VAPP_AUTOCAP_SETTING_CUSTOM_HIDE, "[AUTOCAP] vapp_AUTOCAP_setting_custom() [hide = %d]")  
TRC_MSG(VAPP_AUTOCAP_SETTING_CUSTOM_UPDATE, "[AUTOCAP] vapp_AUTOCAP_setting_custom_update() ")  

TRC_MSG(VAPP_AUTOCAP_OSD_ENTER_STATE, "[AUTOCAP] vapp_AUTOCAP_osd_enter_state() [state = %d]")  
TRC_MSG(VAPP_AUTOCAP_OSD_SET_PARAM, "[AUTOCAP] vapp_AUTOCAP_osd_set_param() [type = %d]")  

TRC_MSG(VAPP_AUTOCAP_OSD_CP_RECT_UPDATE, "[AUTOCAP] vapp_AUTOCAP_osd_cp_rect_update() [x = %d, y = %d, w = %d, h = %d]") 
TRC_MSG(VAPP_AUTOCAP_OSD_CP_SLIDER_UPDATE, "[AUTOCAP] vapp_AUTOCAP_osd_cp_slider_update() [value = %d, minValue = %d, maxValue = %d, isVerticalMode = %d, isInverseMode = %d]") 
TRC_MSG(VAPP_AUTOCAP_OSD_CP_BASE_MENU_SELECT, "[AUTOCAP] vapp_AUTOCAP_osd_cp_base_menu_select() [setting = %d]") 
TRC_MSG(VAPP_AUTOCAP_OSD_CP_CIRCLE_MENU_SELECT, "[AUTOCAP] vapp_AUTOCAP_osd_cp_circle_menu_select() [setting = %d]") 
TRC_MSG(VAPP_AUTOCAP_OSD_CP_AD_MENU_SELECT, "[AUTOCAP] vapp_AUTOCAP_osd_cp_advance_menu_select() [setting = %d, value = %d]") 
TRC_MSG(VAPP_AUTOCAP_OSD_CP_AD_MENU_TRAVERSE, "[AUTOCAP] vapp_AUTOCAP_osd_cp_advance_menu_traverse() [setting = %d]") 
