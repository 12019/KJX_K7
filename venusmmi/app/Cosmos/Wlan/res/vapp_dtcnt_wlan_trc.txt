[APP NAME] = WLAN
[SCOPE] = COSMOS
[MODULE] = MOD_MMI_CONN_APP

#start trace
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_INIT_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_init_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_INIT_RSP, "[WLAN CMCC][FUNC] cmcc_wlan_wps_init_rsp [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_TRY_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_try_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_PORTAL_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_portal_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_PORTAL_RSP, "[WLAN CMCC][FUNC] cmcc_wlan_wps_portal_rsp [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_LOGIN_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_login_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_LOGIN_RSP, "[WLAN CMCC][FUNC] cmcc_wlan_wps_login_rsp [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_LOGOUT_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_logout_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_LOGOUT_RSP, "[WLAN CMCC][FUNC] cmcc_wlan_wps_logout_rsp [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_CLEAN_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_clean_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_CLEAN_RSP, "[WLAN CMCC][FUNC] cmcc_wlan_wps_clean_rsp [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_CANCEL_REQ, "[WLAN CMCC][FUNC] cmcc_wlan_wps_cancel_req [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_CANCEL_RSP, "[WLAN CMCC][FUNC] cmcc_wlan_wps_cancel_rsp [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_WPS_HTTP_REQUEST, "[WLAN CMCC][FUNC] cmcc_wlan_wps_http_request [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_AUTH_FSM, "[WLAN CMCC][FUNC] cmcc_wlan_auth_fsm [state:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_HTTP_LOGIN, "[WLAN CMCC][FUNC] cmcc_wlan_http_login [activity:%d, state:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_HTTP_LOGOUT, "[WLAN CMCC][FUNC] cmcc_wlan_http_logout [activity:%d, state:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_SEND_CALLBACK, "[WLAN CMCC][FUNC] cmcc_wlan_send_callback [activity:%d, state:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_HTTP_ABORT, "[WLAN CMCC][FUNC] cmcc_wlan_http_abort [activity:%d, state:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_HTTP_IS_BUSY, "[WLAN CMCC][FUNC] cmcc_wlan_http_is_busy [busy:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_HTTP_IS_AP_ALIVE, "[WLAN CMCC][FUNC] cmcc_wlan_http_is_ap_alive [alive:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_AUTH_LOGIN, "[WLAN CMCC][API FUNC] cmcc_wlan_auth_login [para:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_AUTH_LOGOUT, "[WLAN CMCC][API FUNC] cmcc_wlan_auth_logout [para:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_AUTH_ABORT, "[WLAN CMCC][API FUNC] cmcc_wlan_auth_abort [Line:%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_AUTH_UI_LOGIN_CALLBACK, "[WLAN CMCC][FUNC] cmcc_wlan_auth_ui_login_callback [ret:%d, para=%d]")
TRC_MSG(TRC_VAPP_WLAN_CMCC_FUNC_CMCC_WLAN_AUTH_UI_LOGOUT_CALLBACK, "[WLAN CMCC][FUNC] cmcc_wlan_auth_ui_logout_callback [ret:%d, para=%d]")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_HDLR, "[WLAN UI] HandleDtcntServiceEvents, Event ID = %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_STATUS_ACTIVE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_ACTIVE===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_STATUS_CONNECTED, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_CONNECTED===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_STATUS_INACTIVE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_INACTIVE===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_STATUS_SCAN, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_SCAN===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_STATUS_CONNECT, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_CONNECT===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_STATUS_BEARER_STATUS, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_BEARER_STATUS===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_CONN, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_CONN_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_DISC, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_DISC_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_IPADDR_UPDATE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_IPADDR_UPDATE===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_IPADDR_CONFLICT, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_IPADDR_CONFLICT_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_CURR_AP_INFO, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_CURR_AP_INFO===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_PROV, "[WLAN UI] ===EVT_ID_SRV_DTCNT_PROV_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_PROV_INSTALL_RES, "[WLAN UI] ===EVT_ID_SRV_DTCNT_PROV_INSTALL_RES_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_PROV_DONE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_PROV_DONE_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_ACCT_UPDATE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_ACCT_UPDATE_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_ACCT_DELETE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_ACCT_DELETE_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_RES_IND_INIT, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_INIT_RES_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_RES_IND_DEINIT, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_DEINIT_RES_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_RES_IND_CONN, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_CONN_RES_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_RES_IND_DISC, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_DISC_RES_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_RES_IND_SCAN, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_SCAN_RES_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IPADDR_CHANGE_QRY, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_IPADDR_CHANGE_QRY===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_CHIP_INVALID, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WIFI_CHIP_INVALID===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_SEARCH_AP_OPEN, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_SEARCH_AP_OPEN_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_SEARCH_AP_CLOSE, "[WLAN UI] ===EVT_ID_SRV_DTCNT_WLAN_SEARCH_AP_CLOSE_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_MODE_SWITCH_PRE_NOTIFY, "[WLAN UI] ===EVT_ID_SRV_MODE_SWITCH_PRE_NOTIFY===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_MODE_SWITCH_FINISH_NOTIFY, "[WLAN UI] ===EVT_ID_SRV_MODE_SWITCH_FINISH_NOTIFY===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_WPS_INFO_IND, "[WLAN UI]===EVT_ID_SRV_DTCNT_WLAN_WPS_INFO===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_CONN_PROF, "[WLAN UI]===EVT_ID_SRV_DTCNT_WLAN_CONN_PROF===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_LOGOUT_IND, "[WLAN UI]===EVT_ID_SRV_DTCNT_WLAN_LOGOUT_IND===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IPADDR_CHANGRE_CNF, "[WLAN UI]===EVT_ID_SRV_DTCNT_WLAN_IPADDR_CHANGE_CNF===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_LANGUAGE_CHANGED, "[WLAN UI]===EVT_ID_VAPP_LANGUAGE_CHANGED===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_CLOSE_CMCC_SETTING_PAGE, "[WLAN UI]===EVT_ID_VAPP_WLAN_CMCC_CLOSE_PAGE===")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_EVT_IND_SLEEP, "[WLAN UI]===EVT_ID_SRV_DTCNT_WLAN_SLEEP===")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_ABORT, "[WLAN UI] responseScanEvent - Scan action has been aborted!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_FAILED, "[WLAN UI] responseScanEvent - Scan failed %d!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_SUCCESS, "[WLAN UI] responseScanEvent - Get scan result successfully!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_RESULT, "[WLAN UI] updateScanApList - Total aps of scan result list (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_FOUND, "[WLAN UI] updateScanApList - Profile(%d) found in the saved list.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_NOT_FOUND, "[WLAN UI] updateScanApList - Profile(%d) not found in the saved list.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_ADD, "[WLAN UI] updateScanApList - Add profile into scan list, set its type as %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_AP_CHARSET, "[WLAN UI] updateScanApList - Ap ssid length %d, charset %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_DESTORY_AP_LIST, "[WLAN UI] destroyApList - Total aps of scan result list (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UPDATE_AP_LIST_START, "[WLAN UI] updateApList - Start to update AP list")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UPDATE_AP_LIST_ADD, "[WLAN UI] updateApList - Add profile - ssid length:(%d) match type:(%d) mgr type:(%d) priority:(%d) authMode:(%d) encryptMode:(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UPDATE_AP_LIST_GO_THROUGH, "[WLAN UI] updateApList - Go through list (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UPDATE_AP_LIST_END, "[WLAN UI] updateApList - Done")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_INIT_BEGIN, "[WLAN UI] Start to update dtcnt wifi repository")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_INIT_FAILED, "[WLAN UI] Access dtcnt storage failed. Result - (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_INIT_QRY_NUM, "[WLAN UI] Total of profile in store: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_INIT_ADD_AP, "[WLAN UI] Add ap(%d) into saved ap list, its profile id is %d, priority is %d, authMode is %d, encryptMode is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_INIT_STATISTIC, "[WLAN UI] Adhoc ap's num %d \t Infra ap's num %d")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_PSK, "[WLAN UI] connectToUnsavedAp - Entry pre-shared key settings %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WEP, "[WLAN UI] connectToUnsavedAp - Entry wep key settings %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WEP_INPUT, "[WLAN UI] Connected to AP... WEP key index: %d Encrypt: %d Format: %d Length: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WPA_NONE, "[WLAN UI] connectToUnsavedAp - Connect ad-hoc network with WPA-NONE %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WAI_CERT, "[WLAN UI] connectToUnsavedAp - Entry wapi cert. settings %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WAI_PSK, "[WLAN UI] connectToUnsavedAp - Entry wapi psk settings %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_DEFAULT, "[WLAN UI] connectToUnsavedAp - Entry username & password settings")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_NO_SECURITY, "[WLAN UI] connectToUnsavedAp - Connect to ap directly")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_PRIVACY, "[WLAN UI] VappPasswordConfigPage - The privacy of AP wanted to be connected %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_DEFAULT_INPUT, "[WLAN UI] VappWlanSentry::SendConnectRequest - Length of usename: %d password %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WEP_KEY_INPUT, "[WLAN UI] initSrvProfileByAppProfile - WEP KEY Index: %d Length: %d Format: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_WEP_KEY_LENGTH, "[WLAN UI] VappWlanSentry::SendConnectRequest - Length of WEP key: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_EAP_INPUT, "[WLAN UI] VappWlanSentry::SendConnectRequest - EAP: %d PEAP: %d TTLS: %d VERSION: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_PSK_PASSPHRASE, "[WLAN UI] VappWlanSentry::SendConnectRequest - Length of PSK: %d Length of passphrase: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_CONN_NO_SAVE_AP, "[WLAN UI] connectToUnsavedAp - AP networkType is %d, authMode is %d")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_SCAN_REQ_START, "[WLAN UI] SendScanRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_SCAN_REQ_END, "[WLAN UI] SendScanRequest - DONE Job ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_ABORT_SCAN_REQ, "[WLAN UI] SendAbortScanRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CONN_REQ_BEFORE_START, "[WLAN UI] Final check! Existed in the AP list or not - [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CONN_REQ_START, "[WLAN UI] SendConnectRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CONN_REQ_PROC, "[WLAN UI] Connection Type: [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CONN_REQ_END, "[WLAN UI] SendConnectRequest - DONE (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_ABORT_CONN_REQ_START, "[WLAN UI] SendAbortConnectRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_ABORT_CONN_REQ_END, "[WLAN UI] SendAbortConnectRequest - DONE (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_DISC_REQ_START, "[WLAN UI] SendDisconnectRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_DISC_REQ_END, "[WLAN UI] SendDisconnectRequest - DONE (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_DEINIT_REQ_START, "[WLAN UI] SendDeinitRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_DEINIT_REQ_END, "[WLAN UI] SendDeinitRequest - DONE (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CERT_ROOT_REQ, "[WLAN UI] SendSelectCACertRequest - DONE")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CERT_USER_REQ, "[WLAN UI] SendSelectUserCertRequest - DONE")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CERT_ASE_REQ, "[WLAN UI] SendSelectASECertRequest - DONE")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_CERT_CLIENT_REQ, "[WLAN UI] SendSelectClientCertRequest - DONE")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_WPS_CONN_REQ_START, "[WLAN UI] SendWPSConnectRequest - BEGIN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_WPS_CONN_REQ_PROC, "[WLAN UI] Connection Type: [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SEND_WPS_CONN_REQ_END, "[WLAN UI] SendWPSConnectRequest - DONE")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_INIT_RES,"[WLAN UI]responseInitEvent - Result %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_INIT, "[WLAN UI] responseInitEvent - MAC ADDR: %d %d %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_DEINIT, "[WLAN UI] responseDeinitEvent - Result %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_SCAN_STATUS, "[WLAN UI] responseScanEvent - Current status: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_ABORT, "[WLAN UI] responseConnectedEvent - Connection has been aborted")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_TRIGGER, "[WLAN UI] afterConnectedSuccess - Connection is triggered by app or not- %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_FIND_PROFILE, "[WLAN UI] afterConnectedSuccess - Find profile(%d) when connection is triggered by SRV")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_FIND_PROFILE_IN_LIST, "[WLAN UI] VappApList::findOne - Profile ID(%d) Target ID(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT, "[WLAN UI] responseConnectedEvent - Result: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_SUCCESS, "[WLAN UI] ===== SRV_DTCNT_RESULT_SUCCESS=====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_ERROR, "[WLAN UI] ===== SRV_DTCNT_RESULT_STATE_ERROR=====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_FAILED, "[WLAN UI] ===== SRV_DTCNT_RESULT_FAILED===== By disconnect request: [%d], Fail cause: [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_ABORTED, "[WLAN UI] ===== SRV_DTCNT_RESULT_ABORTED=====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_TERMINATED, "[WLAN UI] ===== SRV_DTCNT_RESULT_TERMINATED=====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_WPS_FLAG, "[WLAN UI] Connection is triggered by WPS or not - [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_WPS_CLOSE_POPUP, "[WLAN UI] ==> Stop timer! ==> Close time left popup! ")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_IND_FAILED, "[WLAN UI] ===== Not found corresponding profile(%d)in the remembered AP list ===== AP mgr type(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_IND_SUCCESS, "[WLAN UI] ===== Target(%d) Found profile(%d) SSID length(%d) Priority(%d) March Type(%d)=====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_SUCCESS_AP_WEP_KEY, "[WLAN UI] Connected AP's WEP key index: %d Encrypt: %d Format: %d Length: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_RESULT_SUCCESS_AP_ENCRYPT_MODE, "[WLAN UI] Connected AP's encrypt mode : %d, activated AP's encrypt mode : %d. LINE(%d)!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_INSERT, "[WLAN UI] Insert newly connected ap into saved list")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_REMOVE, "[WLAN UI] Remove it from scan list")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_DO_NOTHING, "[WLAN UI] No need to save it once again")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_NUMBER, "[WLAN UI] The number of connect action is %d, the current connType is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_ALREADY_ACTIVATED, "[WLAN UI] AP[Profile ID: %d] has already been activated!!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_IP_ADDR_START, "[WLAN UI] afterUpdateIpAddr Find corresponse AP in the saved list")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_IP_ADDR, "[WLAN UI] IP Address: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_NETMASK, "[WLAN UI] Netmask: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_GATEWAY, "[WLAN UI] Gateway: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_DNS1, "[WLAN UI] Primary DNS: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_DNS2, "[WLAN UI] Secondary DNS: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_IP_ADDR_START, "[WLAN UI] afterChangeIpAddr Current wlan status: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_USE_DHCP, "[WLAN UI] Use DHCP or not: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_IP_ADDR, "[WLAN UI] IP Address: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_NETMASK, "[WLAN UI] Netmask: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_GATEWAY, "[WLAN UI] Gateway: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_DNS1, "[WLAN UI] Primary DNS: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CHANGE_DNS2, "[WLAN UI] Secondary DNS: %d %d %d %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_AP_STATUS, "[WLAN UI] Current WLAN status: %d RSSI: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CERT_ROOT, "[WLAN UI] responseSelectCACertRequest - Result(%d) Root CA Id(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CERT_USER, "[WLAN UI] responseSelectUserCertRequest - Result(%d) User CA Id(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CERT_ASE, "[WLAN UI] responseSelectASECertRequest - Result(%d) ASE CA Id(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CERT_CLIENT, "[WLAN UI] responseSelectClientCertRequest - Result(%d) Client CA Id(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_WPS_INFO, "[WLAN UI] afterReceiveWPSInfoEvt - Num(%d) Action(%d) Value(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_WLAN_STATUS, "[WLAN UI]Current WLAN status: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_AP_PARAMETER, "[WLAN UI]AP ssidLen(%d), AuthMode(%d), EncryMode(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_WPS_STATUS, "[WLAN UI] WPS Status machine is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_CONN_PROF, "[WLAN UI] responseConnProfEvent - Profile num (%d), Conn type (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_DISCONN_RES, "[WLAN UI] responseDisconnectedEvent - Result %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_GET_PROFILE_BY_BASE_INFO, "[WLAN UI] getAppProfileByAppBaseInfo - ProfileId(%d) MatchType(%d) MgrType(%d) SsidLen(%d) Prority(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_RSP_UPDATE_ACTIVATED_AP_INFO, "[WLAN UI] ProfileId(%d) MatchType(%d) MgrType(%d) SsidLen(%d) Prority(%d)")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OBSERVER_REGISTER, "[WLAN UI] Register observer - PageId(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OBSERVER_DEREGISTER, "[WLAN UI] Remove observer - PageId(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OBSERVER_NOTIFY, "[WLAN UI] Notify observer - Message Enum(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OBSERVER_NOTIFY_ALL, "[WLAN UI] Notify observer - PageId(%d) Subscribe(%d)")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_POWER_SAVING_MODE_INIT, "[WLAN UI] Read mode from NVRAM - Result(%d) Mode(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_POWER_SAVING_MODE_SAVE, "[WLAN UI] Callback from DA SRV after save mode - Result(%d)")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_ADD_START, "[WLAN UI] Start to add ap into dtcnt store, AP authMode is %d encryptMode is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_ADD_SUCCESS, "[WLAN UI] Store completed! Profile ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_ADD_FAILED, "[WLAN UI] Store failed! Result: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_UPDATE_START, "[WLAN UI] Start to update ap(%d) in dtcnt store, AP authMode is %d encryptMode is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_UPDATE_SUCCESS, "[WLAN UI] Update completed! Profile ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_UPDATE_FAILED, "[WLAN UI] Update failed! Fail reason: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_REMOVE_START, "[WLAN UI] Start to delete AP - profile id(%d)!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_REMOVE_SUCCESS, "[WLAN UI] Delete AP from ap list successfully!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_REMOVE_FAILED, "[WLAN UI] Delete action failed! Fail reason: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_ROOM_TOTAL_SIZE, "[WLAN UI] The total size of storage room is %d, Current used_size is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_NEW_ENTRY_SIZE, "[WLAN UI] Create VappAPListEntry's size: %d, Current used_size is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_PROFILE_SIZE, "[WLAN UI] Create VappWlanProfile's size: %d, Current used_size is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_BASEINFO_SIZE, "[WLAN UI] Create VappWlanBaseInfo's size: %d, Current used_size is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_CURRENT_USED_SIZE, "[WLAN UI] Current used_size is %d, line(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_CLASS_SIZE, "[WLAN UI] The sizeof of VappWlanProfile/VappWlanBaseInfo/VappAPListEntry is %d, %d, %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_STORAGE_PROFILE_CLIENT_CA_ID, "[WLAN UI] Store profile client ca id: APP (%d), srv (%d)")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_TETHERING_IS_SWITCHING, "[WLAN UI] WLAN tethering - In switching - %d")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_LAUNCH_APP_START, "[WLAN UI] Launch Application WLAN")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_LAUNCH_APP_STATUS, "[WLAN UI] Wi-Fi Status: %d ")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_LAUNCH_APP_GSM_ONLY, "[WLAN UI] GSM ONLY!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_LAUNCH_APP_FLIGHT_MODE, "[WLAN UI] Currently not available in flight mode!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_LAUNCH_APP_FLIGHT_MODE_SWITCHING, "[WLAN UI] Currently flight mode is switching!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_FLIGHT_MODE_SWITCHING_STATUE, "[WLAN UI] flight mode is switching from %d to %d, WLAN status %d!")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_LAUNCH_APP_END, "[WLAN UI] Launch Application WLAN done. App ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ADD_NEW_NETWORK_START, "[WLAN UI] Start to add new network into saved ap list.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ADD_NEW_NETWORK_PRIORITY, "[WLAN UI] Check profile's priority - SRV: %d APP: %d.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ADD_NEW_NETWORK_PRIORITY_UPDATE, "[WLAN UI] Update profile(%d)'s priority as %d. Its network type: %d.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ADD_NEW_NETWORK_END, "[WLAN UI] Add new network completed. Profile ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_EDIT_SEARCH_NETWORK_START, "[WLAN UI] Start to edit one searched network. Original profile's SSID length: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_EDIT_SAVED_NETWORK_PRE_START, "[WLAN UI] Pre-Edit Original profile's priority: %d Current priority: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_EDIT_SAVED_NETWORK_START, "[WLAN UI] Start to edit one saved network. Profile id: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_EDIT_NETWORK_END, "[WLAN UI] Edit network - End.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DELETE_NETWORK_START, "[WLAN UI] Start to delete one network. SSID length: %d Profile id: %d Priority: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DELETE_NETWORK_END, "[WLAN UI] Delete network completed. ")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_CHANGE_NETWORK_PRIORITY, "[WLAN UI] Change profile(%d)'s priority from %d to %d.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_STATUS_BAR_ICON, "[WLAN UI] Update status bar icon - Image ID: %d isAnimate: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_SHOW_FLIGHT_MODE_POPUP_START, "[WLAN UI] showGlobalPopup. Popup's parent ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_SHOW_FLIGHT_MODE_POPUP_END, "[WLAN UI] Close flight mode popup. Popup's parent ID: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_PASSWORD_CONFIG_PSK, "[WLAN UI] The length of pre-shared key user input is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_PASSWORD_CONFIG_WEP, "[WLAN UI] The length of WEP key user input is %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEFAULT_CONFIG, "[WLAN UI] Config: Username(%d) Password(%d) EAP(%d) PEAP(%d) TTLS(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_SETTING_PAGE, "[WLAN UI] ===== Wifi settings page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_SETTING_PAGE_END, "[WLAN UI] ===== Initialization - Done. =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ENTER_SETTING_PAGE, "[WLAN UI] ===== Enter wifi settings page. isBackward: %d =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEINIT_SETTING_PAGE, "[WLAN UI] ===== Wifi settings page deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_CANCEL_WPS_CONNECT_IN_DEINIT, "[WLAN UI] VappWifiSettingsPage::onDeinit Flag for WPS connect => [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_CANCEL_WPS_CONNECT_ON_HOME_KEY, "[WLAN UI] Press Home key on Time Left Popup")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_UPDATE_SETTING_PAGE, "[WLAN UI] ===== Update wifi settings page. MSG(%d) =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_MANAGER_PAGE, "[WLAN UI] ===== Network manager page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEINIT_MANAGER_PAGE, "[WLAN UI] ===== Network manager page deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_UPDATE_MANAGER_PAGE, "[WLAN UI] ===== Update network manager page. MSG(%d) =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_JOIN_PAGE, "[WLAN UI] ===== Join a network initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEINIT_JOIN_PAGE, "[WLAN UI] ===== Join a network deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_UPDATE_JOIN_NETWORK_PAGE, "[WLAN UI] ===== Update join network page. MSG(%d) =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_EDIT_PAGE, "[WLAN UI] ===== VappEditProfilePage initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEINIT_EDIT_PAGE, "[WLAN UI] ===== VappEditProfilePage deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_UPDATE_EDIT_NETWORK_PAGE, "[WLAN UI] ===== Update edit network page. MSG(%d) =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_DELETE_PAGE, "[WLAN UI] ===== Delete list page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEINIT_DELETE_PAGE, "[WLAN UI] ===== Delete list page deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_EAP_TYPES_PAGE, "[WLAN UI] ===== VappWlanEAPTypesPage initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_DEINIT_EAP_TYPES_PAGE, "[WLAN UI] ===== VappWlanEAPTypesPage deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ENTRY_SEARCHING_START, "[WLAN UI] ===== entryRefreshProc - START =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_ENTRY_SEARCHING_END, "[WLAN UI] ===== entryRefreshProc - END =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_WEP_KEY_SETTING_PAGE, "[WLAN UI] VappWepKeySettingPage - Index: %d Length: %d Format: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_VALID_WEP_KEY_SETTING, "[WLAN UI] VappWepKeySettingPage - Legal WEP key string")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INVALID_WEP_KEY_SETTING, "[WLAN UI] VappWepKeySettingPage - Illegal WEP key string")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_GET_CONNECTED_AP_RSSI, "[WLAN UI]getNetworkTypeIcon() - MATCH TYPE: %d RSSI: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_AFTER_STOP_TETHERING_CB, "[WLAN UI]VappWlanEntryScrn::informWlanApp - Result: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_UPDATE_CHANGE_PRIORITY_PAGE, "[WLAN UI] ===== Update change priority page. MSG(%d) =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_SETTING_SELECT_AP_DETAIL, "[WLAN UI]Select Ap ssidlen(%d), MatchType(%d), MgrType(%d), Wlan status(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_TETHERING_CONFIRM_BY_APP, "[WLAN UI] VappWlanEntryScrn - onConfirmBtnClicked ")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_APP_CLOSE_DONE, "[WLAN UI] WLAN APP close done")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_ADVANCE_PAGE, "[WLAN UI] ===== advanced page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_SELECT_ADVANCE_PAGE, "[WLAN UI] Select item index (%d) in advanced page")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_PROC_ADVANCE_PAGE, "[WLAN UI] VappAdvancedPage::onProc -- vcui file selector Evt_id (%d), result(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_CERT_PATH_ADVANCE_PAGE, "[WLAN UI] VappAdvancedPage::onProc -- The result of selecting cert. Manager file path is (%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_INIT_SLEEP_POLICY_SETTING_PAGE, "[WLAN UI] ===== SleepPolicySetting Page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_UI_SETTING_SLEEP_POLICY, "[WLAN UI] VappSleepPolicySettingPage::onItemTapped -- Set sleep policy (%d)")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_INIT_SWITCH, "[WLAN SETTING] VappWiFiSwitchCell - onInit- Wi-Fi switchCell status: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_INIT_SWITCH_ING, "[WLAN SETTING] VappWiFiSwitchCell - onSwitch - Wi-Fi status: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SWITCH_TETHERING_QRY, "[WLAN SETTING] VappWiFiSwitchCell - Wi-Fi hotspot status: %d")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SWITCH_TETHERING_CALLBACK, "[WLAN SETTING] VappWiFiSwitchCell - Invoke callback function by Wi-Fi hotspot")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SWITCH_STOP_TETHERING, "[WLAN SETTING] VappWiFiSwitchCell - Stop Wi-Fi hotspot")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_ENABLE_SETTING, "[WLAN SETTING] Enable settings cell.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_ENABLE_SWITCH, "[WLAN SETTING] Enable settings switch.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_DISABLE_SETTING, "[WLAN SETTING] Disable settings cell.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_DISABLE_SWITCH, "[WLAN SETTING] Disable settings switch.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_SET_SWITCH, "[WLAN SETTING] Set settings switch as [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_INIT_RSP, "[WLAN SETTING] responseInitEvent - Flight mode switching: [%d]")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SETTING_DEINIT_RSP, "[WLAN SETTING]Close current application or cui - %d, id(%d)")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_SWITCH_TETHERING_CONFIRM_BY_SETTING, "[WLAN SETTING] VappWiFiSwitchCell - onConfirmBtnClicked")

TRC_MSG(TRC_VCUI_WLAN_SETTING_CUI_CREATE_START, "[WLAN UI] Create WLAN Setting CUI - Start")
TRC_MSG(TRC_VCUI_WLAN_SETTING_CUI_CREATE_END, "[WLAN UI] Create WLAN Setting CUI - Parent GID(%d), CUI ID(%d)")
TRC_MSG(TRC_VCUI_WLAN_SETTING_CUI_CLOSE_START, "[WLAN UI] Close WLAN Setting CUI - CUI ID(%d)")
TRC_MSG(TRC_VCUI_WLAN_SETTING_CUI_CLOSE_END, "[WLAN UI] Close WLAN Setting CUI - END")
TRC_MSG(TRC_VCUI_WLAN_SETTING_CUI_CLOSE_DONE, "[WLAN UI] WLAN Setting CUI close done - CUI ID(%d)")

TRC_MSG(TRC_VCUI_WLAN_CUI_CLOSE_DONE, "[WLAN UI] WLAN CUI close done - CUI ID(%d)")
TRC_MSG(TRC_VCUI_WLAN_CREATE_AP_LIST_START, "[WLAN UI] Launch DTCNT WLAN CUI...")
TRC_MSG(TRC_VCUI_WLAN_CREATE_AP_LIST_END, "[WLAN UI] Parent GID: %d CUI ID: %d")
TRC_MSG(TRC_VCUI_WLAN_RUN_AP_LIST_START, "[WLAN UI] vcui_wifi_ap_list_run - Run WLAN CUI(%d)...")
TRC_MSG(TRC_VCUI_WLAN_RUN_AP_LIST_END, "[WLAN UI] vcui_wifi_ap_list_run - END")
TRC_MSG(TRC_VCUI_WLAN_IS_CERT_LIST_SHOW, "[WLAN UI] Cert. list is showed up or not - [%d]")
TRC_MSG(TRC_VCUI_WLAN_CLOSE_AP_LIST_START, "[WLAN UI] vcui_wifi_ap_list_close - Close WLAN CUI(%d)...")
TRC_MSG(TRC_VCUI_WLAN_CLOSE_AP_LIST_END, "[WLAN UI] vcui_wifi_ap_list_close - END")
TRC_MSG(TRC_VCUI_WLAN_UI_SHOW_AP_LIST, "[WLAN UI] showApListContextPopup - Total of APs(%d)")
TRC_MSG(TRC_VCUI_WLAN_UI_ADD_PROFILE_INTO_AP_LIST, "[WLAN UI] Add profile - ID: %d length of SSID: %d Priority: %d")
TRC_MSG(TRC_VCUI_WLAN_UI_ABORT_SCAN_ACTION, "[WLAN UI] Send abort scan request to dtcnt service.")
TRC_MSG(TRC_VCUI_WLAN_UI_ABORT_SCAN_ACTION_CB, "[WLAN UI] Invoke callback function to inform dtcnt service.")
TRC_MSG(TRC_VCUI_WLAN_UI_ABORT_SCAN_ACTION_ERROR, "[WLAN UI] onCancelScanBtnClick - sender is NULL")
TRC_MSG(TRC_VCUI_WLAN_UI_FAIL_CONFIRM_POPUP, "[WLAN UI] onFailConfirmBtnClick - Start(%d)")
TRC_MSG(TRC_VCUI_WLAN_UI_CHOOSE_AP_ONCE_AGAIN, "[WLAN UI] onFailConfirmBtnClick - Choose ap once again.")
TRC_MSG(TRC_VCUI_WLAN_UI_ABORT_CONN_CB, "[WLAN UI] onFailConfirmBtnClick - User don't want to choose ap once again.")
TRC_MSG(TRC_VCUI_WLAN_UI_TAP_ITEM_START, "[WLAN UI] onItemTapped - START.")
TRC_MSG(TRC_VCUI_WLAN_UI_CONN_TO_AP, "[WLAN UI] Connect to ap - Index: %d ID: %d Length of SSID: %d")
TRC_MSG(TRC_VCUI_WLAN_UI_CONN_TO_AP_CB, "[WLAN UI] Inform dtcnt service that connectting to ap now!")
TRC_MSG(TRC_VCUI_WLAN_UI_INFORM_DTCNT_SRV_RES, "[WLAN UI] Invoke ap_open_ind callback - RSP(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_DISPLAY_FAIL, "[WLAN CUI] Close WLAN hostop, but it can't stop. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_CANCEL_SEARCH, "[WLAN CUI] WLAN CUI cancel searching or User click backkey. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_NO_AP, "[WLAN CUI] No AP exist to confirm the button or click backkey. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_SELECT_NONE, "[WLAN CUI] The Select Ap is None. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_SELECT_CANCEL, "[WLAN CUI] click BackKey so that No Ap Selected. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_CANNOT_DISPLAY, "[WLAN CUI] keep WLAN hostop still open. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_CHOOSE_ONE, "[WLAN CUI] Choose one AP to connect. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_CLISK_HOMEKEY, "[WLAN CUI] Click Homekey to send event to App. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_CONN_SUCCESS, "[WLAN CUI] WLAN connect success by click ap or dtcnt server, close wlan cui. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_NEED_CLOSE, "[WLAN CUI] WLAN cui receive deinit msg, close wlan cui. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AP_LIST_NO_FLIGHT_MODE, "[WLAN CUI] In flight mode, WLAN CUI can't be opened. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_UI_INPUT_SECURITY_INFO, "[WLAN CUI] inputSecurityInfo - AP networkType is %d, authMode is %d")

TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_CB_FUNC, "[WLAN CUI] WLAN auto conn start, Whether callback func is NULL? %d. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_SCAN_ID, "[WLAN CUI] WLAN auto conn start, scan id is %d. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_STATUS, "[WLAN CUI] when wlan auto conn, WLAN Status is %d. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_PROC_TYPE, "[WLAN CUI] WLAN conn Proc Type is %M. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_SCAN_VALID, "[WLAN CUI] when WLAN auto conn, whether Scan is valid? %d. Msg is %M. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_SCAN_RESULT, "[WLAN CUI] when WLAN auto conn, Scan result is %d. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_START, "[WLAN CUI] WLAN auto conn start. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_DONE, "[WLAN CUI] WLAN auto conn done. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_OPO1_WIFI, "[WLAN CUI] In scanlist, Whether exist OPO1 wifi? %d. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_CB_ACTION, "[WLAN CUI] The action of callback is %M. LINE(%d)!")
TRC_MSG(TRC_VCUI_WLAN_AUTO_CONN_SWITCHBAR_STATE, "[WLAN CUI] Whether auto conn is %d, Whether notify is %d. LINE(%d)!")


TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_DISCONN_PROC, "[WLAN OP01] entryCMCCDisconnectProc.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_CONN_PROC, "[WLAN OP01] entryCMCCConnectProc.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_DEINIT_PROC, "[WLAN OP01] entryCMCCDeinitProc.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_DEINIT_PROC_BY_WIDGET, "[WLAN OP01] vapp_wlan_send_cmcc_deinit.")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_CONN_PROC_BY_CUI, "[WLAN OP01] entryCMCCConnectProcByCui.")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGOUT_START, "[WLAN OP01] entryCMCCPortalCertLogoutStart--Start, Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGOUT_DONE, "[WLAN OP01] entryCMCCPortalCertLogoutStart--Done, Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGOUT_STATUS, "[WLAN OP01] Current logout result(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGOUT_CALLBACK, "[WLAN OP01] entryCMCCDisconnectProcCallback--After logout, the action is (%d).")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_LOGOUT_IND_START, "[WLAN OP01] responseCMCCLogoutIndEvent--Start, Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_LOGOUT_IND_DONE, "[WLAN OP01] responseCMCCLogoutIndEvent--Done, Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_LOGOUT_IND_STATUS, "[WLAN OP01] Current logout ind UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_LOGOUT_IND_INFORM_DTCNT_SRV, "[WLAN OP01] entryCMCCLogoutIndInformDtcntSrv--Rsp(%d),whether callback is NULL?(%d).")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_ABORT_STATUS, "[WLAN OP01] entryCMCCProtalCertAbort--Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_ATUH_ABORT, "[WLAN OP01] vapp_dtcnt_wlan_auth_abort--CMCC auth abort.")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_ADDR_CHANGE_CNF_START, "[WLAN OP01] responseAddrChangeCnfEvent--Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_ADDR_CHANGE_CNF_DONE, "[WLAN OP01] responseAddrChangeCnfEvent--Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_ADDR_CHANGE_CNF_PROFILE_DETAIL, "[WLAN OP01] whether profile is NULL?(%d), useDhcp?(%d), ssidLen(%d), mgrType(%d).")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_CERT_RUN_CURRENT_STATUS, "[WLAN OP01] entryCMCCPortalCertRun--Current UI status machine(%d), wlan status(%d), isAutoAuth(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGIN_START, "[WLAN OP01] entryCMCCPortalCertLoginStart--Start, Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGIN_DONE, "[WLAN OP01] entryCMCCPortalCertLoginStart--Done, Current UI status machine(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGIN_CALLBACK, "[WLAN OP01] entryCMCCPortalCertCallback--After login, the result is (%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_ENTRY_LOGIN_NO_AVAILABLE, "[WLAN OP01] entryCMCCPortalProc--Current Login is no availbale because screen can't show.")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_AUTH_RET_EVENT, "[WLAN OP01] responseAuthRetEvent--the result is (%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_RSP_CLOSE_CMCC_SETTING_PAGE, "[WLAN OP01] responseCloseCMCCSettingPageEvent--(%d), Id is (%d).")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_CURRENT_STATUS, "[WLAN OP01] Current UI status machine(%d), wlan status(%d), isAutoAuth(%d).")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_INIT_MANAGER_PAGE, "[WLAN OP01] ===== CMCC Network manager page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_DEINIT_MANAGER_PAGE, "[WLAN OP01] ===== CMCC Network manager page deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_UPDATE_MANAGER_PAGE, "[WLAN OP01] ===== Update CMCC network manager page. MSG(%d) =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_IS_ALLOW_EDIT_AP, "[WLAN OP01] IsAllowEditAP -- AP matchType(%d) mgrType(%d) ssidLen(%d)")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_INIT_REMEMBER_PAGE, "[WLAN OP01] ===== CMCC Remember Network manager page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_DEINIT_REMEMBER_PAGE, "[WLAN OP01] ===== CMCC Remember Network manager page deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_UPDATE_REMEMBER_PAGE, "[WLAN OP01] ===== Update CMCC Remember network manager page. MSG(%d) =====")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_INIT_BLOCK_PAGE, "[WLAN OP01] ===== CMCC block Network manager page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_DEINIT_BLOCK_PAGE, "[WLAN OP01] ===== CMCC block Network manager page deinitialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_UPDATE_BLOCK_PAGE, "[WLAN OP01] ===== Update CMCC block network manager page. MSG(%d) =====")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_INIT_NON_PROXY_ADDRESS_PAGE, "[WLAN OP01] ===== NonProxy address page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_DEINIT_NON_PROXY_ADDRESS_PAGE, "[WLAN OP01] ===== NonProxy address page deinitialization =====")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_INIT_EDIT_ADDRESS_PAGE, "[WLAN OP01] ===== Edit address page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_DEINIT_EDIT_ADDRESS_ADDRESS_PAGE, "[WLAN OP01] ===== Edit address page deinitialization =====")

TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_INIT_WLAN_TO_CELLULAR_SETTING_PAGE, "[WLAN OP01] ===== WLAN to Cellular setting page initialization =====")
TRC_MSG(TRC_VAPP_DTCNT_WLAN_OP01_UI_WLAN_TO_CELLULAR_STATUS, "[WLAN OP01] WLAN transfer to Cellular donot need notify? (%d)")